{"version":3,"sources":["docs/examples/ActionMenu.tsx","components/MenuItem.tsx","docs/examples sync /^/.*/.tsx$","docs/examples/ActionMenuSwitch.tsx","docs/examples/Switch.tsx","docs/examples sync /^/.*/.js$","docs/examples/Caret.js","docs/examples/Search.js","components/Layout.tsx","components/Page.tsx","components/Body.tsx","docs/images/blue.svg","docs/Global.ts","docs/components/ReactIcon.tsx","docs/components/VersionToggle.tsx","docs/components/Footer.tsx","docs/components/IntroductionSections.tsx","docs/images/stackblitz.png","docs/components/StackblitzEmbed.tsx","docs/pages/HomePage.tsx","components/SidebarMenu.tsx","docs/components/BodyRounded.tsx","docs/components/Markdown.tsx","docs/components/ComponentDocs.tsx","docs/pages/ComponentPage.tsx","components/Intro.tsx","docs/pages/IntroDemoPage.tsx","docs/components/NormalScrollbarDemo.tsx","docs/components/HashLink.tsx","docs/pages/UtilitiesPage.tsx","components/HeaderTitle.tsx","docs/components/Recipe.tsx","docs/pages/RecipesPage.tsx","components/Header.tsx","components/ActionMenu.tsx","components/ActionMenuSwitch.tsx","docs/pages/ActionMenuExamplePage.tsx","docs/App.tsx","serviceWorker.ts","index.tsx","components/shared.ts","components/Modal.tsx","components/ModalProvider.tsx","docs/examples/ModalProvider.tsx","components/Status.tsx","components/StatusProvider.tsx","docs/examples/StatusProvider.tsx","components/Switch.tsx","components/DocumentView.tsx","docs/examples/DocumentView.js","components/Utilities.js","components/Outside.tsx","components/Caret.tsx","components/Search.tsx"],"names":["ActionMenuExample","useState","isChecked","setIsChecked","style","width","window","innerWidth","className","checked","onChange","legacy","sliderLabel","to","target","rel","src","process","title","MenuItem","props","showDropdown","setShowDropdown","active","setActive","checkActive","href","location","hash","indexOf","isHome","useEffect","addEventListener","undefined","icon","iconForActive","isActive","children","createElement","elementType","exact","label","onClick","event","preventDefault","Utilities","scrollToTop","onClickAttached","onDragStart","onDrag","onDragEnd","onDragEnter","onDragOver","onDragLeave","onDrop","draggable","clsx","hasIconForActive","open","mirrored","supportOutside","dropdownClassName","onClickOutside","hasClass","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ActionMenuSwitchExample","SwitchExample","toggleIsChecked","type","role","htmlFor","CaretExample","state","isOpen","setState","this","React","Component","SearchExample","search","body","value","onSubmit","alert","placeholder","reset","toggleSidebarEvent","CustomEvent","Layout","defaultMatch","eventListeners","blueLayoutRef","sidebarIn","match","history","hashHistory","blockRouting","hideSidebar","bind","initMatch","me","document","toggleSidebar","xPos","touches","pageX","onHashChange","removeEventListener","prevProps","prevState","forEach","eventListener","pageId","callback","newMatch","replace","split","filter","n","unrouteable","push","concat","param1","param2","param3","listenerId","removeDuplicatedEventListeners","param","index","self","findIndex","t","hideSidebarMenu","expandSidebar","disableHeaders","sidebarToggleIconComponent","pages","page","name","component","statusIcons","success","info","warning","danger","disableTitleSet","Page","hasHeader","setHasHeader","elementRef","useRef","current","headerElement","querySelector","titleElement","innerText","ref","Body","containerClass","hasActions","rest","pageBodyClassName","break","logo","appTitle","ReactIcon","xmlns","fillRule","strokeLinejoin","strokeMiterlimit","clipRule","viewBox","fill","height","d","transform","cx","cy","r","VersionToggle","show","setShow","dropdownRef","myElement","bsDropdown","Dropdown","getInstance","hide","Outside","minWidth","Footer","Date","getFullYear","IntroductionSections","appCode","setAppCode","pageCode","setPageCode","scssCode","setScssCode","fetchFromGitHub","path","url","fetch","json","ghContent","content","decoded","atob","fetchAppCode","sections","syntaxHighlighterStyle","language","s","i","encodeURIComponent","StackblitzEmbed","loadIframe","setLoadIframe","backgroundImage","image","packageJson","require","HomePage","version","alt","SidebarMenu","hasShadow","setHasShadow","updateDimensions","innerHeight","blueAppSidebar","scrollHeight","clientHeight","scrollTop","sidebarClass","sidebarStyle","topContent","menuClass","menuStyle","bottomContent","BodyRounded","classNameTop","classNameBottom","bodyProps","Markdown","components","node","inline","exec","String","PreTag","transformImageUri","ComponentDocs","ExampleComponent","comp","displayName","ex","text","standalone","prepareForMarkdown","description","composes","length","key","j","defaultValue","tsType","raw","required","exampleCode","scrollTo","console","log","docs","ComponentPage","selectedComponent","useParams","setValue","setComponents","array_docs","values","routerPageElement","zIndex","Search","a","arr","target_value","toLowerCase","featured","hideToggleAction","light","mimeType","navItemClassName","onToggle","showDocumentLabel","display_Name","includes","some","val","maxHeight","Intro","logoMaxWidth","maxWidth","IntroDemoPage","dangerouslySetInnerHTML","__html","NormalScrollbarDemo","showModal","setShowModal","toggleShowModal","toggle","multiple","HashLink","utilitiesFunctions","definition","demo","startLoading","finishLoading","showSuccess","hideSuccess","setAlertMessage","resetAlertMessage","guid","UtilitiesPage","didScroll","sort","b","fun","HeaderTitle","keepAppTitle","sidebar","uniqueId","setDocumentTitle","element","titlePaths","trim","Recipe","recipe","markdown","setMarkdown","fetchRecipe","download_url","RecipesPage","recipes","setRecipes","activeRecipe","setActiveRecipe","fetchRecipes","contents","Array","isArray","c","endsWith","sha","Header","ActionMenu","toggleIcon","_break","actionsToggledIn","setActionsToggledIn","toggleActions","initToggleStatus","appWrapper","onclick","querySelectorAll","link","ActionMenuSwitch","Switch","ActionMenuExamplePage","breakProp","setBreakProp","setChecked","App","basename","NavLink","Boolean","hostname","createRoot","getElementById","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","phrases","Cancel","Yes","No","Message","getPhrase","keyword","countryCode","_phrases","Modal","modalContent","modalTitle","unSetModalContent","defaultInput","modalRef","input","setInput","cancel","btnStyle","focusFirstControl","myModal","firstControl","focus","bsModal","BootstrapModal","tabIndex","whiteSpace","autoFocus","ModalContext","createContext","ask","tell","verify","ModalProvider","setType","setModalContent","setModalTitle","setDefaultInput","useCallback","setOnSubmit","Provider","Promise","InsideComp","context","useContext","useModal","answer","parseInt","toString","retVal","confirm","ModalProviderExample","Status","onUnsetAlert","successIcon","infoIcon","warningIcon","dangerIcon","status","alertClassName","detailText","StatusContext","setAlert","setStatus","StatusProvider","useStatus","StatusExample","disabled","DocumentView","supportsIframe","iframe","contentWindow","write","close","onLoad","iframeContent","contentDocument","offsetWidth","offsetHeight","DocumentViewExample","el","classList","contains","RegExp","add","remove","classString","nameIndex","substr","display","toggleClass","els","alertElement","removeClass","addClass","innerHTML","s4","Math","floor","random","substring","scroll","behavior","left","top","init","showErrorDetail","onError","response","ok","reason","errorMessage","statusText","wrapperRef","handleClickOutside","Caret","resetIcon","SearchControlId","setFocus","dispatchEvent","onFocus","onBlur","setTimeout","select"],"mappings":"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","file":"static/js/main.20e2c9bf.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Switch from \"../../components/Switch\"\r\n\r\nexport default function ActionMenuExample() {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    const toggleIsChecked = () => setIsChecked(!isChecked)\r\n\r\n    const style = {\r\n        width: isChecked && window.innerWidth > 600 ? \"600px\" : \"\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Switch\r\n                className=\"lg me-3\"\r\n                checked={isChecked}\r\n                onChange={toggleIsChecked}\r\n                legacy\r\n                sliderLabel={isChecked ? \"Mobile\" : \"PC\"}\r\n            />\r\n\r\n            <p>\r\n                <Link to=\"/action-menu-example\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    Open in new tab\r\n                </Link>\r\n            </p>\r\n\r\n            <div className=\"ratio ratio-16x9\">\r\n                <iframe src={`${process.env.PUBLIC_URL}/action-menu-example`} style={style} title=\"Actions Demo page\" />\r\n                {/**\r\n                     * This is how the Code looks like: \r\n                    import React from \"react\"\r\n                    import {Page, Body, Header, Actions, MenuItem} from \"blue-react\"\r\n                    \r\n                    export const ActionMenuExamplePage = () => {\r\n                        return (\r\n                            <Page hasActions={true}>\r\n                                <Header>\r\n                                </Header>\r\n                                <Actions>\r\n                                    <MenuItem\r\n                                        icon={\r\n                                            <svg\r\n                                                width=\"1em\"\r\n                                                height=\"1em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-bag-fill\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M1 4h14v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4zm7-2.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\"\r\n                                                />\r\n                                            </svg>\r\n                                        }\r\n                                        label=\"Test\"\r\n                                    ></MenuItem>\r\n                                    <MenuItem\r\n                                        icon={\r\n                                            <svg\r\n                                                width=\"1em\"\r\n                                                height=\"1em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-bell-fill\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"\r\n                                                />\r\n                                            </svg>\r\n                                        }\r\n                                        label=\"Test2\"\r\n                                    >  </MenuItem>\r\n                                </Actions>\r\n                                <Body>...</Body>\r\n                            </Page>\r\n                        )\r\n                    }\r\n                    */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import clsx from \"clsx\"\r\nimport React, { createElement, useEffect, useState } from \"react\"\r\nimport Caret from \"./Caret\"\r\nimport Outside from \"./Outside\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface MenuItemProps {\r\n    /**\r\n     * Sets `to` prop, e.g. when you use the `NavLink` component from React Router.\r\n     */\r\n    to?: string\r\n\r\n    /**\r\n     * Prop for components by React Router.\r\n     */\r\n    exact?: boolean\r\n\r\n    href?: string\r\n    onClick?: (event: React.MouseEvent) => void\r\n\r\n    /**\r\n     * Will be fired after `onClick`\r\n     */\r\n    onClickAttached?: (event: React.MouseEvent) => void\r\n\r\n    /**\r\n     * Icon component or a class name.\r\n     */\r\n    icon?: any\r\n\r\n    /**\r\n     * Icon component or a class name when the MenuItem is active.\r\n     */\r\n    iconForActive?: any\r\n\r\n    /**\r\n     * Label of the link.\r\n     */\r\n    label?: any\r\n\r\n    /**\r\n     * Should be set as active.\r\n     */\r\n    isActive?: boolean\r\n\r\n    /**\r\n     * When using Blue React's routing system: define this link as home page link.\r\n     */\r\n    isHome?: boolean\r\n\r\n    /**\r\n     * Extends class name of the dropdown menu.\r\n     */\r\n    dropdownClassName?: string\r\n\r\n    /**\r\n     * Set children to create a nested `MenuItem` as a dropdown.\r\n     */\r\n    children?: any\r\n\r\n    /**\r\n     * Defines class name.\r\n     */\r\n    className?: any\r\n\r\n    /**\r\n     * Defines dropdown status from outside.\r\n     */\r\n    showDropdown?: boolean\r\n\r\n    /**\r\n     * Close on click outside.\r\n     */\r\n    supportOutside?: boolean\r\n\r\n    /**\r\n     * By default, MenuItem is a `\"button\"`. If you set a `href`, it's a `\"a\"`.\r\n     * If you want to have it another type, you can pass a component reference with this prop (e.g. `Link`).\r\n     */\r\n    elementType?: any\r\n\r\n    target?: string\r\n    rel?: string\r\n    title?: string\r\n\r\n    /**\r\n     * Fired on the draggable target (the source element): occurs when the user starts to drag an element\r\n     */\r\n    onDragStart?: (event: React.DragEvent) => void | React.DragEventHandler\r\n\r\n    /**\r\n     * Fired on the draggable target (the source element): occurs when an element is being dragged\r\n     */\r\n    onDrag?: (event: React.DragEvent) => void | React.DragEventHandler\r\n\r\n    /**\r\n     * Fired on the draggable target (the source element): occurs when the user has finished dragging the element\r\n     */\r\n    onDragEnd?: (event: React.DragEvent) => void | React.DragEventHandler\r\n\r\n    /**\r\n     * Fired on the drop target: occurs when the dragged element enters the drop target\r\n     */\r\n    onDragEnter?: (event: React.DragEvent) => void | React.DragEventHandler\r\n\r\n    /**\r\n     * Fired on the drop target: occurs when the dragged element is over the drop target\r\n     */\r\n    onDragOver?: (event: React.DragEvent) => void | React.DragEventHandler\r\n\r\n    /**\r\n     * Fired on the drop target: occurs when the dragged element leaves the drop target\r\n     */\r\n    onDragLeave?: (event: React.DragEvent) => void | React.DragEventHandler\r\n\r\n    /**\r\n     * Fired on the drop target: occurs when the dragged element is dropped on the drop target\r\n     */\r\n    onDrop?: (event: React.DragEvent) => void | React.DragEventHandler\r\n\r\n    /**\r\n     * Specifies whether an element is draggable or not.\r\n     */\r\n    draggable?: boolean\r\n}\r\n\r\n/**\r\n * Link, button or custom component for Sidebar, Actions or ActionMenu\r\n */\r\nexport default function MenuItem(props: MenuItemProps) {\r\n    const [showDropdown, setShowDropdown] = useState<boolean>(false)\r\n    const [active, setActive] = useState<boolean>(false)\r\n\r\n    const checkActive = () => {\r\n        setActive(\r\n            (props.href && window.location.hash.indexOf(props.href) > -1) ||\r\n                (props.isHome && (window.location.hash === \"\" || window.location.hash === \"#/\"))\r\n                ? true\r\n                : false\r\n        )\r\n    }\r\n\r\n    const onClick = (event: MouseEvent) => {\r\n        if (props.href === \"#\") {\r\n            event.preventDefault()\r\n        }\r\n\r\n        if (props.onClick) {\r\n            props.onClick(event as any)\r\n        }\r\n\r\n        if (props.children) {\r\n            setShowDropdown(!showDropdown)\r\n        }\r\n\r\n        // When user clicks again on active menu item, scroll to top of page\r\n        if (props.href && props.href === window.location.hash) {\r\n            Utilities.scrollToTop()\r\n        }\r\n\r\n        if (props.onClickAttached !== undefined) {\r\n            props.onClickAttached(event as any)\r\n        }\r\n    }\r\n\r\n    const onClickOutside = ({ target }: MouseEvent) => {\r\n        // Don't trigger when clicking on MenuItem\r\n        if (\r\n            !Utilities.hasClass(target, \"blue-menu-item-dropdown-toggle\") &&\r\n            !Utilities.hasClass(target, \"blue-menu-item-label\")\r\n        ) {\r\n            setShowDropdown(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkActive()\r\n        window.addEventListener(\"hashchange\", () => {\r\n            checkActive()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.showDropdown !== undefined) setShowDropdown(props.showDropdown)\r\n    }, [props.showDropdown])\r\n\r\n    const className =\r\n        \"blue-menu-item btn\" +\r\n        (props.isActive ? \" active\" : \"\") +\r\n        (props.className ? \" \" + props.className : \"\") +\r\n        (props.children ? \" blue-menu-item-dropdown-toggle\" : \"\")\r\n\r\n    let icon, iconForActive\r\n\r\n    if (typeof props.icon === \"string\") {\r\n        // is className\r\n        icon = <span className={props.icon + (props.children ? \" blue-menu-item-dropdown-icon\" : \"\")} />\r\n    } else {\r\n        // is element / component\r\n        icon = props.icon\r\n    }\r\n\r\n    if (typeof props.iconForActive === \"string\") {\r\n        // is className\r\n        iconForActive = (\r\n            <span className={props.iconForActive + (props.children ? \" blue-menu-item-dropdown-icon\" : \"\")} />\r\n        )\r\n    } else {\r\n        // is element / component\r\n        iconForActive = props.iconForActive\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {createElement(\r\n                props.elementType || (props.href ? \"a\" : \"button\"),\r\n                {\r\n                    to: props.to,\r\n                    href: props.href,\r\n                    exact: props.exact,\r\n                    className:\r\n                        className + (props.isActive || active ? \" active\" : \"\") + (props.label ? \" has-label\" : \"\"),\r\n                    onClick,\r\n                    target: props.target,\r\n                    rel: props.rel,\r\n                    title: props.title,\r\n                    onDragStart: props.onDragStart,\r\n                    onDrag: props.onDrag,\r\n                    onDragEnd: props.onDragEnd,\r\n                    onDragEnter: props.onDragEnter,\r\n                    onDragOver: props.onDragOver,\r\n                    onDragLeave: props.onDragLeave,\r\n                    onDrop: props.onDrop,\r\n                    draggable: props.draggable\r\n                },\r\n                <>\r\n                    <span\r\n                        className={clsx(\"blue-menu-item-icon\", {\r\n                            hasIconForActive: iconForActive\r\n                        })}\r\n                    >\r\n                        {icon}\r\n                    </span>\r\n                    {iconForActive && <span className=\"blue-menu-item-icon iconForActive\">{iconForActive}</span>}\r\n                    {props.label && <span className=\"blue-menu-item-label text-truncate\">{props.label}</span>}\r\n                    {props.children && (\r\n                        <Caret open={showDropdown} mirrored className=\"blue-menu-item-dropdown-caret mt-2\" />\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            {showDropdown &&\r\n                (props.supportOutside ? (\r\n                    <Outside\r\n                        className={`blue-menu-item-dropdown ${props.dropdownClassName}`}\r\n                        onClickOutside={onClickOutside}\r\n                    >\r\n                        {props.children}\r\n                    </Outside>\r\n                ) : (\r\n                    <div className={`blue-menu-item-dropdown ${props.dropdownClassName}`}>{props.children}</div>\r\n                ))}\r\n        </>\r\n    )\r\n}\r\n","var map = {\n\t\"./ActionMenu.tsx\": 105,\n\t\"./ActionMenuSwitch.tsx\": 442,\n\t\"./ModalProvider.tsx\": 448,\n\t\"./StatusProvider.tsx\": 449,\n\t\"./Switch.tsx\": 443\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 436;","import ActionMenuExample from \"./ActionMenu\"\r\n\r\nexport default function ActionMenuSwitchExample() {\r\n    // For source code see \"ActionMenu\" documentation example.\r\n    return <ActionMenuExample />\r\n}\r\n","import { useState } from \"react\"\r\nimport Switch from \"../../components/Switch\"\r\n\r\nexport default function SwitchExample() {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    const toggleIsChecked = () => setIsChecked(!isChecked)\r\n\r\n    return (\r\n        <div>\r\n            <Switch checked={isChecked} onChange={toggleIsChecked} label=\"Hi\" />\r\n            <br />\r\n            <div className=\"form-check form-switch\">\r\n                <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    role=\"switch\"\r\n                    id=\"flexSwitchCheckDefault\"\r\n                    checked={isChecked}\r\n                    onChange={toggleIsChecked}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                    Bootstrap's form-switch\r\n                </label>\r\n            </div>\r\n            <h4 className=\"mt-4 mb-3\">Legacy support</h4>\r\n            <p>Use the `legacy` prop to use the older look and feel.</p>\r\n            <Switch\r\n                className=\"lg\"\r\n                checked={isChecked}\r\n                onChange={toggleIsChecked}\r\n                sliderLabel={isChecked ? \"Yay🎉\" : \"😒\"}\r\n                legacy\r\n            />\r\n            <br />\r\n            <Switch checked={isChecked} onChange={toggleIsChecked} legacy /> <label>Normal switch</label>\r\n        </div>\r\n    )\r\n}\r\n","var map = {\n\t\"./Caret.js\": 445,\n\t\"./DocumentView.js\": 450,\n\t\"./Search.js\": 446\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 444;","import React from \"react\"\r\nimport Caret from \"../../components/Caret\"\r\n\r\nclass CaretExample extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() =>\r\n                        this.setState({ isOpen: !this.state.isOpen })\r\n                    }\r\n                >\r\n                    <Caret open={this.state.isOpen} />{\" \"}\r\n                    <span>Click to toggle the caret</span>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CaretExample\r\n","import React from \"react\"\r\nimport Search from \"../../components/Search\"\r\n\r\nclass SearchExample extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            search: \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search\r\n                    body\r\n                    className=\"w-50\"\r\n                    onChange={({ target }) =>\r\n                        this.setState({ search: target.value })\r\n                    }\r\n                    onSubmit={() => alert(\"Do form submit now!\")}\r\n                    placeholder=\"Begin typing...\"\r\n                    reset\r\n                    value={this.state.search}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchExample\r\n","import React, { Component, CSSProperties } from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\ndeclare global {\r\n    interface Window {\r\n        blueLayoutRef: any\r\n        toggleSidebarEvent: any\r\n    }\r\n}\r\n\r\nwindow.toggleSidebarEvent = new CustomEvent(\"toggleSidebar\")\r\n\r\nexport interface LayoutProps {\r\n    id?: string\r\n    sidebarIn?: boolean\r\n    style?: CSSProperties\r\n    /**\r\n     * Sidebar is automatically expanded on wider views.\r\n     */\r\n    expandSidebar?: boolean\r\n\r\n    /**\r\n     * Disables sidebar.\r\n     */\r\n    hideSidebarMenu?: boolean\r\n\r\n    /**\r\n     * Registers pages for the built-in routing system. Example: `[{name: \"home\", component: <HomePage />}]`\r\n     */\r\n    pages?: { name: string; component: JSX.Element }[]\r\n\r\n    /**\r\n     * When `true`, always the \"home\" route will be rendered.\r\n     */\r\n    unrouteable?: boolean\r\n\r\n    /**\r\n     * Extends `className`.\r\n     */\r\n    className?: string\r\n\r\n    /**\r\n     * By default, the document title will automatically set. Set this prop to `true` to disable this behaviour.\r\n     */\r\n    disableTitleSet?: boolean\r\n\r\n    /**\r\n     * If you don't use blueicon, you can define another icon element for the sidebar toggle button.\r\n     */\r\n    sidebarToggleIconComponent?: any\r\n\r\n    /**\r\n     * Will replace status icons with custom ones. This will also overwrite the `useBlueicons` option.\r\n     * This can be a SVG component or a normal element component.\r\n     */\r\n    statusIcons?: {\r\n        danger: any\r\n        info: any\r\n        success: any\r\n        warning: any\r\n    }\r\n\r\n    /**\r\n     * Disables the header bars on pages.\r\n     */\r\n    disableHeaders?: boolean\r\n\r\n    /**\r\n     * Define a function, that will be fired when switching routes. When your function returns `true`, the default route behaviour will be blocked.\r\n     * You can use something like `window.blueLayoutRef.setState({ blockRouting: onHashChange })` globally to set the value from anywhere in your app.\r\n     */\r\n    blockRouting?: (newMatch: string[], currentMatch: string[]) => void | boolean\r\n\r\n    children?: any\r\n}\r\n\r\nexport interface LayoutState {\r\n    sidebarIn?: boolean\r\n    match: any\r\n    history: string[]\r\n    hash: string\r\n    hashHistory: string[]\r\n    blockRouting?: (newMatch: string[], currentMatch: string[]) => void | boolean\r\n}\r\n\r\n/**\r\n * The main component. As soon this component is mounted, it is globally available under `window.blueLayoutRef`.\r\n * You can also append your own event listeners.\r\n *\r\n * Allowed events:\r\n *\r\n * * **componentDidUpdate** - Component was updated.\r\n *   Example: `window.blueLayoutRef.addEventListener(\"componentDidUpdate\", (prevProps, prevState) => { })`\r\n * * **pageDidShowAgain** - Page appeared again with the same old state. In the callback function you can reinitialize things.\r\n *   Example: `window.blueLayoutRef.addEventListener(\"pageDidShowAgain\", \"home\", (prevProps, prevState) => { })`\r\n * * **pageDidHide** - This page disappeared and another page appears instead.\r\n *   Example: `window.blueLayoutRef.addEventListener(\"pageDidHide\", \"home\", (prevProps, prevState) => { })`\r\n *\r\n * Method to add event listeners:\r\n * * `window.blueLayoutRef.`**addEventListener**`(eventName: string, param2: any, param3: any, listenerId?: string)`\r\n *\r\n * Methods to remove event listeners:\r\n * * `window.blueLayoutRef.`**removeEventListener**`(eventName: string, listenerId: string)`\r\n * * `window.blueLayoutRef.`**removeDuplicatedEventListeners**`()` - Will automatically be called when running `addEventListener`\r\n */\r\nexport default class Layout extends Component<LayoutProps, LayoutState> {\r\n    defaultMatch: string[]\r\n    eventListeners: any[]\r\n    constructor(props: LayoutProps) {\r\n        super(props)\r\n\r\n        window.blueLayoutRef = this\r\n\r\n        this.defaultMatch = [\"home\"]\r\n\r\n        this.state = {\r\n            sidebarIn: props.sidebarIn,\r\n            match: null,\r\n            history: [],\r\n            hash: window.location.hash,\r\n            hashHistory: [],\r\n            blockRouting: props.blockRouting || undefined\r\n        }\r\n\r\n        this.hideSidebar = this.hideSidebar.bind(this)\r\n\r\n        this.eventListeners = []\r\n    }\r\n\r\n    onHashChange() {\r\n        window.blueLayoutRef.initMatch()\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            expandSidebar: false,\r\n            hideSidebarMenu: false,\r\n            unrouteable: false,\r\n            disableTitleSet: false,\r\n            sidebarToggleIconComponent: <span className=\"bi-menu\" />,\r\n            statusIcons: {\r\n                danger: <span className=\"bi-error\" />,\r\n                info: <span className=\"bi-information\" />,\r\n                success: <span className=\"bi-check\" />,\r\n                warning: <span className=\"bi-sign_warning\" />\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const me = this\r\n\r\n        document.addEventListener(\r\n            \"toggleSidebar\",\r\n            () => {\r\n                this.toggleSidebar(undefined)\r\n            },\r\n            false\r\n        )\r\n\r\n        this.initMatch()\r\n\r\n        document.addEventListener(\"touchstart\", (event) => {\r\n            const xPos = event.touches[0].pageX\r\n\r\n            if (xPos < 5) {\r\n                me.toggleSidebar(event)\r\n            } else if (me.state.sidebarIn && xPos > 20) {\r\n                me.toggleSidebar(event)\r\n            }\r\n        })\r\n\r\n        window.addEventListener(\"hashchange\", this.onHashChange)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"hashchange\", this.onHashChange)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: LayoutProps, prevState: LayoutState) {\r\n        if (prevProps.blockRouting !== this.props.blockRouting && this.props.blockRouting !== this.state.blockRouting) {\r\n            this.setState({ blockRouting: this.props.blockRouting })\r\n        }\r\n\r\n        this.eventListeners.forEach((eventListener) => {\r\n            if (eventListener[0] === \"componentDidUpdate\") {\r\n                eventListener[1](prevProps, prevState)\r\n            }\r\n\r\n            if (eventListener[0] === \"pageDidShowAgain\") {\r\n                let pageId = eventListener[1]\r\n                let callback = eventListener[2]\r\n\r\n                if (prevState.hash !== this.state.hash && this.state.match[0] === pageId) {\r\n                    callback(prevProps, prevState)\r\n                }\r\n            }\r\n\r\n            if (eventListener[0] === \"pageDidHide\") {\r\n                let pageId = eventListener[1]\r\n                let callback = eventListener[2]\r\n\r\n                if (prevState.hash !== this.state.hash && prevState.match[0] === pageId) {\r\n                    callback(prevProps, prevState)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleSidebar(event: any) {\r\n        if (this.state.sidebarIn) {\r\n            this.hideSidebar(event)\r\n        }\r\n        this.setState({ sidebarIn: true })\r\n    }\r\n\r\n    hideSidebar(e: any) {\r\n        if (\r\n            !(\r\n                Utilities.hasClass(e.target, \"blue-open-menu\") ||\r\n                Utilities.hasClass(e.target, \"bi-menu\") ||\r\n                Utilities.hasClass(e.target, \"blue-search\") ||\r\n                Utilities.hasClass(e.target, \"blue-search-control\") ||\r\n                Utilities.hasClass(e.target, \"blue-search-btn\") ||\r\n                Utilities.hasClass(e.target, \"blue-search-btn-icon\") ||\r\n                Utilities.hasClass(e.target, \"blue-menu-item-dropdown-toggle\") ||\r\n                Utilities.hasClass(e.target, \"blue-menu-item-dropdown-caret\") ||\r\n                Utilities.hasClass(e.target, \"blue-menu-item-dropdown-icon\") ||\r\n                Utilities.hasClass(e.target, \"blue-sidebar-exception\")\r\n            )\r\n        ) {\r\n            this.setState({ sidebarIn: false })\r\n        }\r\n    }\r\n\r\n    initMatch() {\r\n        let newMatch\r\n\r\n        if (window.location.hash && window.location.hash !== \"\" && window.location.hash !== \"#/\") {\r\n            newMatch = window.location.hash\r\n                .replace(\"#\", \"\")\r\n                .split(\"/\")\r\n                .filter((n) => n !== \"\")\r\n        } else {\r\n            newMatch = this.defaultMatch\r\n        }\r\n\r\n        if (this.props.unrouteable) {\r\n            newMatch = this.defaultMatch\r\n        }\r\n\r\n        if (this.state.blockRouting && this.state.blockRouting(newMatch, this.state.match) === true) {\r\n            window.location.hash = this.state.hash\r\n        } else {\r\n            if (!(this.state.history.indexOf(newMatch[0]) > -1)) {\r\n                this.state.history.push(newMatch[0])\r\n            }\r\n\r\n            this.setState({\r\n                match: newMatch,\r\n                history: this.state.history,\r\n                hash: window.location.hash,\r\n                hashHistory: this.state.hashHistory.concat([window.location.hash])\r\n            })\r\n        }\r\n    }\r\n\r\n    addEventListener(param1: any, param2: any, param3: any, listenerId?: string) {\r\n        this.eventListeners.push([param1, param2, param3, listenerId])\r\n        this.removeDuplicatedEventListeners()\r\n    }\r\n\r\n    removeEventListener(type: string, listenerId: string) {\r\n        this.eventListeners = this.eventListeners.filter((param: any[]) => {\r\n            if (param[0] !== type) {\r\n                return param\r\n            } else if (param[0] === type && param[3] !== listenerId) {\r\n                return param\r\n            }\r\n        })\r\n    }\r\n\r\n    removeDuplicatedEventListeners() {\r\n        this.eventListeners = this.eventListeners.filter(\r\n            (value, index, self) => index === self.findIndex((t) => t[3] === value[3] && t[0] === value[0])\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"blue-wrapper\"></div>\r\n                <div\r\n                    id={this.props.id ? this.props.id : \"\"}\r\n                    style={this.props.style ? this.props.style : {}}\r\n                    className={\r\n                        \"blue-layout\" +\r\n                        (this.props.className ? \" \" + this.props.className : \"\") +\r\n                        (this.state.sidebarIn ? \" open\" : \"\") +\r\n                        (this.props.hideSidebarMenu ? \" hasNoSidebarMenu\" : \" hasSidebarMenu\") +\r\n                        (this.props.expandSidebar ? \" expandSidebar\" : \"\") +\r\n                        (this.props.disableHeaders ? \" disableHeaders\" : \"\")\r\n                    }\r\n                    onClick={this.hideSidebar}\r\n                >\r\n                    <div className=\"blue-sidebar-toggler\">\r\n                        {!this.props.hideSidebarMenu ? (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"blue-open-menu blue-menu-item btn\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        sidebarIn: !this.state.sidebarIn\r\n                                    })\r\n                                }}\r\n                            >\r\n                                <div className=\"blue-sidebar-exception position-absolute w-100 h-100\" />\r\n                                {this.props.sidebarToggleIconComponent}\r\n                            </button>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n\r\n                    {this.props.children}\r\n\r\n                    {this.props.pages?.map(\r\n                        (page) =>\r\n                            this.state.history.indexOf(page.name) > -1 && (\r\n                                <div\r\n                                    key={page.name}\r\n                                    className={\"router-page \" + (this.state.match[0] === page.name ? \"active\" : \"\")}\r\n                                >\r\n                                    {page.component}\r\n                                </div>\r\n                            )\r\n                    )}\r\n\r\n                    <div className=\"blue-status-circle blue-loading blue-status-loading\">\r\n                        <div className=\"spinner-bounce-circle\">\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"blue-status-circle blue-status-success\">{this.props.statusIcons!.success}</div>\r\n\r\n                    <div className=\"blue-status-circle blue-status-info\">{this.props.statusIcons!.info}</div>\r\n\r\n                    <div className=\"blue-status-circle blue-status-warning\">{this.props.statusIcons!.warning}</div>\r\n\r\n                    <div className=\"blue-status-circle blue-status-danger\">{this.props.statusIcons!.danger}</div>\r\n\r\n                    <div className=\"blue-status-alert alert\">\r\n                        <button type=\"button\" className=\"btn-close float-end mb-1\" aria-label=\"Close\" />\r\n                        <div className=\"alert-body\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\r\nimport clsx from \"clsx\"\r\n\r\nexport interface PageProps {\r\n    /**\r\n     * Will be set to the document's `<title>` tag.\r\n     */\r\n    title?: string\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Main component for each page.\r\n */\r\nexport default function Page({ children, title }: PageProps) {\r\n    const [hasHeader, setHasHeader] = useState(false)\r\n    const elementRef = useRef(null) as MutableRefObject<any>\r\n\r\n    useEffect(() => {\r\n        if (elementRef && elementRef.current) {\r\n            const headerElement =\r\n                elementRef.current.querySelector(\".blue-header\")\r\n            setHasHeader(headerElement !== null && headerElement !== undefined)\r\n        }\r\n    }, [elementRef])\r\n\r\n    useEffect(() => {\r\n        const titleElement = document.querySelector(\"title\")\r\n        if (title && titleElement) {\r\n            titleElement.innerText = title\r\n        }\r\n    }, [title])\r\n\r\n    return (\r\n        <div\r\n            className={clsx(\"blue-page-wrapper\", { hasHeader: hasHeader })}\r\n            ref={elementRef}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { breakOption } from \"./shared\"\r\n\r\nexport interface BodyProps {\r\n    id?: string\r\n    className?: string\r\n\r\n    /**\r\n     * Class name for the container. More info: https://getbootstrap.com/docs/4.0/layout/overview/#containers\r\n     */\r\n    containerClass?: string\r\n\r\n    /**\r\n     * Set `true` if this page uses `<Actions />`, so this component will get enough padding to avoid overlapping of the content.\r\n     */\r\n    hasActions?: boolean\r\n    break?: breakOption\r\n    onClick?: (event: any) => void\r\n\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Contains the content of the page.\r\n */\r\nexport default function Body({\r\n    id,\r\n    className,\r\n    containerClass,\r\n    hasActions,\r\n    onClick,\r\n    children,\r\n    ...rest\r\n}: BodyProps) {\r\n    const pageBodyClassName = \"blue-page\"\r\n\r\n    return (\r\n        <div\r\n            id={id}\r\n            className={\r\n                className\r\n                    ? pageBodyClassName + \" \" + className\r\n                    : pageBodyClassName +\r\n                    (hasActions ? \" has-actions\" : \"\") +\r\n                    ` break-${rest.break || \"md\"}`\r\n            }\r\n            onClick={onClick}\r\n        >\r\n            <div className={containerClass || \"container-fluid\"}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/blue.0fc1a48f.svg\";","import image from \"./images/blue.svg\"\r\n\r\nexport const logo = image\r\nexport const appTitle = \"Blue\"\r\n","import React from \"react\"\r\n\r\nexport function ReactIcon() {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fillRule=\"evenodd\"\r\n            strokeLinejoin=\"round\"\r\n            strokeMiterlimit=\"2\"\r\n            clipRule=\"evenodd\"\r\n            viewBox=\"0 0 16 16\"\r\n            fill=\"currentColor\"\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n        >\r\n            <path\r\n                fillRule=\"nonzero\"\r\n                d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6z\"\r\n                transform=\"matrix(.03261 0 0 .03261 7.74 7.74) translate(-413 -288.45)\"\r\n            ></path>\r\n            <circle\r\n                cx=\"420.9\"\r\n                cy=\"296.5\"\r\n                r=\"45.7\"\r\n                transform=\"matrix(.03261 0 0 .03261 7.74 7.74) translate(-413 -288.45)\"\r\n            ></circle>\r\n        </svg>\r\n    )\r\n}\r\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\r\nimport { Dropdown } from \"bootstrap\"\r\nimport Outside from \"../../components/Outside\"\r\n\r\nexport function VersionToggle() {\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const toggle = () => setShow(!show)\r\n    const dropdownRef = useRef() as MutableRefObject<HTMLButtonElement>\r\n\r\n    useEffect(() => {\r\n        const myElement = dropdownRef.current as unknown as Element\r\n        let bsDropdown = Dropdown.getInstance(myElement)\r\n\r\n        if (!bsDropdown) {\r\n            bsDropdown = new Dropdown(myElement)\r\n            bsDropdown.hide()\r\n            setShow(false)\r\n        } else {\r\n            show ? bsDropdown.show() : bsDropdown.hide()\r\n        }\r\n    }, [show])\r\n\r\n    return (\r\n        <Outside onClickOutside={() => setShow(false)}>\r\n            <div className=\"dropdown\">\r\n                <button\r\n                    className=\"btn btn-secondary dropdown-toggle\"\r\n                    type=\"button\"\r\n                    onClick={toggle}\r\n                    ref={dropdownRef}\r\n                    title=\"Switch to another version\"\r\n                >\r\n                    /v8\r\n                </button>\r\n                <ul\r\n                    className=\"dropdown-menu dropdown-menu-end\"\r\n                    style={{ minWidth: \"5rem\" }}\r\n                >\r\n                    <li>\r\n                        <a className=\"dropdown-item\" href=\"/blue-react/v7/\">\r\n                            /v7\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a className=\"dropdown-item\" href=\"/blue-react/v6/\">\r\n                            /v6\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </Outside>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\ninterface FooterProps {\r\n    containerClass?: string\r\n}\r\n\r\nexport function Footer({ containerClass = \"container\" }: FooterProps) {\r\n    return (\r\n        <footer className=\"docs-footer mb-1\">\r\n            <div className={`${containerClass} mt-5`}>\r\n                <p className=\"text-muted mb-0\">\r\n                    <small>\r\n                        {`©${\r\n                            new Date().getFullYear() || \"2021\"\r\n                        } Brügmann Software GmbH. `}\r\n                        {\"Licensed under \"}\r\n                        <a\r\n                            href=\"https://github.com/bruegmann/blue-react/blob/master/LICENSE\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            GNU General Public License v3.0\r\n                        </a>\r\n                        {\". \"}\r\n                        <a\r\n                            href=\"https://patorg.de/imprint/\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Imprint\r\n                        </a>\r\n                        {\". \"}\r\n                        <a\r\n                            href=\"https://patorg.de/privacy-policy/\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Privacy Policy\r\n                        </a>\r\n                    </small>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { GitHubContent } from \"../gitHubApiTypes\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\n\r\nexport default function IntroductionSections() {\r\n    const [appCode, setAppCode] = useState<string>(\"\")\r\n    const [pageCode, setPageCode] = useState<string>(\"\")\r\n    const [scssCode, setScssCode] = useState<string>(\"\")\r\n\r\n    const fetchFromGitHub = async (path: string) => {\r\n        const url = `https://api.github.com/repos/bruegmann/cra-template-blue/contents/template/${path}`\r\n        const r = await fetch(`${url}`)\r\n\r\n        const ghContent: GitHubContent = await r.json()\r\n\r\n        if (ghContent.content) {\r\n            const decoded = atob(ghContent.content)\r\n\r\n            return decoded\r\n        }\r\n    }\r\n\r\n    const fetchAppCode = async () => {\r\n        setAppCode((await fetchFromGitHub(\"src/App.tsx\")) || \"\")\r\n        setPageCode((await fetchFromGitHub(\"src/pages/HomePage.tsx\")) || \"\")\r\n        setScssCode((await fetchFromGitHub(\"src/styles/main.scss\")) || \"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAppCode()\r\n    }, [])\r\n\r\n    const sections = [\r\n        {\r\n            title: \"Bootstrap\",\r\n            body: (\r\n                <div>\r\n                    An adapted Bootstrap is mainly used for the stylesheet.\r\n                    <br />\r\n                    Bootstrap documentation is available here:{\" \"}\r\n                    <a href=\"https://getbootstrap.com/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        https://getbootstrap.com/docs/\r\n                    </a>\r\n                    <br />\r\n                    <br />\r\n                    To use Bootstrap components with JavaScript functions in React, you should use a library like{\" \"}\r\n                    <a href=\"https://reactstrap.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        React Bootstrap\r\n                    </a>\r\n                    .\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            title: \"Implementation\",\r\n            body: (\r\n                <div>\r\n                    <p>\r\n                        See the whole project:{\" \"}\r\n                        <a\r\n                            href=\"https://github.com/bruegmann/cra-template-blue/tree/master/template\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            https://github.com/bruegmann/cra-template-blue/tree/master/template\r\n                        </a>\r\n                    </p>\r\n\r\n                    <h2>App (app.tsx)</h2>\r\n                    <SyntaxHighlighter style={syntaxHighlighterStyle} language=\"javascript\">\r\n                        {appCode}\r\n                    </SyntaxHighlighter>\r\n\r\n                    <h2 className=\"mt-3\">Page (pages/HomePage.tsx)</h2>\r\n                    <SyntaxHighlighter style={syntaxHighlighterStyle} language=\"javascript\">\r\n                        {pageCode}\r\n                    </SyntaxHighlighter>\r\n\r\n                    <h2 className=\"mt-3\">CSS (main.scss)</h2>\r\n                    <SyntaxHighlighter style={syntaxHighlighterStyle} language=\"scss\">\r\n                        {scssCode}\r\n                    </SyntaxHighlighter>\r\n                </div>\r\n            )\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                {sections.map((s, i) => (\r\n                    <article key={i} id={\"section-\" + encodeURIComponent(s.title)}>\r\n                        <h1 className=\"page-header\">{s.title}</h1>\r\n                        {s.body}\r\n                    </article>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/stackblitz.f72cfdf8.png\";","import { useState } from \"react\"\r\nimport { PencilSquare, PlayFill } from \"react-bootstrap-icons\"\r\nimport image from \"../images/stackblitz.png\"\r\n\r\nexport default function StackblitzEmbed() {\r\n    const [loadIframe, setLoadIframe] = useState<boolean>(false)\r\n\r\n    return (\r\n        <>\r\n            {loadIframe ? (\r\n                <div className=\"ratio ratio-16x9 bg-light rounded\">\r\n                    <iframe\r\n                        className=\"rounded\"\r\n                        src=\"https://stackblitz.com/edit/blue-react-app-stackblitz-rr6xeh?embed=1&file=index.tsx&hideExplorer=1\"\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div\r\n                    className=\"bg-primary text-white rounded p-4 d-flex justify-content-between\"\r\n                    style={{ backgroundImage: `url(${image})` }}\r\n                >\r\n                    <div>\r\n                        <h5>\r\n                            Do you want to load external content from\r\n                            Stackblitz?\r\n                        </h5>\r\n                        <p>\r\n                            It will contain a live editor, which lets you edit a\r\n                            demo app with Blue React.\r\n                        </p>\r\n\r\n                        <button\r\n                            className=\"btn btn-white d-inline-flex align-items-center\"\r\n                            onClick={() => setLoadIframe(true)}\r\n                        >\r\n                            <PlayFill className=\"me-1\" /> Load content\r\n                        </button>\r\n                        <a\r\n                            className=\"btn btn-link text-white\"\r\n                            href=\"https://stackblitz.com/edit/blue-react-app-stackblitz-rr6xeh?\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Open content in new tab\r\n                        </a>\r\n                        <a\r\n                            className=\"btn btn-link text-white\"\r\n                            href=\"https://stackblitz.com/privacy-policy\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Privacy Policy by Stackblitz\r\n                        </a>\r\n                    </div>\r\n                    <h1 className=\"display-1\">\r\n                        <PencilSquare />\r\n                    </h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/Body\"\r\nimport { logo, appTitle } from \"../Global\"\r\nimport { Bootstrap, BoxSeam, Code, WindowSidebar } from \"react-bootstrap-icons\"\r\nimport { ReactIcon } from \"../components/ReactIcon\"\r\nimport { VersionToggle } from \"../components/VersionToggle\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport IntroductionSections from \"../components/IntroductionSections\"\r\nimport StackblitzEmbed from \"../components/StackblitzEmbed\"\r\n\r\nconst packageJson = require(\"../../../package.json\")\r\n\r\nexport const HomePage = () => (\r\n    <Page>\r\n        <Body className=\"pt-0\" containerClass=\"no-container d-flex flex-column docs-min-height-100vh\">\r\n            <main className=\"flex-grow-1\">\r\n                <div className=\"welcome-jumbotron pt-5 bg-theme text-white\">\r\n                    <div className=\"container pt-3 pt-md-0\">\r\n                        <section className=\"d-flex justify-content-between\">\r\n                            <div>\r\n                                <h1>React component library based on Bootstrap 5</h1>\r\n                                <h2>\r\n                                    <Bootstrap /> <ReactIcon /> <Code /> <WindowSidebar /> <BoxSeam />\r\n                                </h2>\r\n                                <h3 className=\"d-flex align-content-center gap-3\">\r\n                                    <span className=\"badge bg-white text-theme\">{packageJson.version}</span>\r\n\r\n                                    <VersionToggle />\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h1 className=\"display-1 d-inline-flex align-items-center\">\r\n                                    <img src={logo} alt={appTitle} style={{ height: \"1em\" }} className=\"me-3\" /> Blue\r\n                                </h1>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 rounded-top bg-body\" style={{ height: \"1rem\" }} />\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <StackblitzEmbed />\r\n\r\n                    <h1 className=\"page-header\">Use Blue React</h1>\r\n\r\n                    <h2 className=\"mt-4 mb-3\">Create new project using CRA</h2>\r\n                    <code>\r\n                        npx create-react-app@latest <strong>name-of-my-app</strong> --template blue@8\r\n                    </code>\r\n\r\n                    <h2 className=\"mt-4 mb-3\">Install to existing project</h2>\r\n                    <code>npm i blue-react</code>\r\n\r\n                    <IntroductionSections />\r\n                </div>\r\n            </main>\r\n\r\n            <Footer />\r\n\r\n            <div className=\"RoundedBottom bg-theme pb-1\" style={{ height: \"1rem\" }}>\r\n                <div className=\"rounded-bottom bg-body w-100 h-100\" />\r\n            </div>\r\n        </Body>\r\n    </Page>\r\n)\r\n","import React, { Fragment, useEffect, useState } from \"react\"\r\n\r\nexport interface SidebarMenuProps {\r\n    /**\r\n     * Extends the class name by the sidebar.\r\n     */\r\n    sidebarClass?: string\r\n\r\n    /**\r\n     * Sets the `style` prop by the sidebar.\r\n     */\r\n    sidebarStyle?: object\r\n\r\n    /**\r\n     * Extends the class name by the menu.\r\n     */\r\n    menuClass?: string\r\n\r\n    /**\r\n     * Sets the `style` prop by the menu.\r\n     */\r\n    menuStyle?: object\r\n\r\n    /**\r\n     * Content on top of the menu.\r\n     */\r\n    topContent?: any\r\n\r\n    /**\r\n     * Content for the bottom part of the sidebar.\r\n     */\r\n    bottomContent?: any\r\n\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Sidebar for the `Layout` component.\r\n */\r\nexport default function SidebarMenu(props: SidebarMenuProps) {\r\n    const [hasShadow, setHasShadow] = useState<boolean>(false)\r\n\r\n    const updateDimensions = () => {\r\n        if (window.innerHeight > 500) {\r\n            setHasShadow(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const blueAppSidebar = document.querySelector(\r\n            \".blue-sidebar\"\r\n        ) as HTMLElement\r\n\r\n        window.addEventListener(\"resize\", updateDimensions)\r\n\r\n        if (blueAppSidebar.scrollHeight > blueAppSidebar.clientHeight) {\r\n            setHasShadow(true)\r\n        }\r\n\r\n        blueAppSidebar.addEventListener(\"scroll\", () => {\r\n            if (\r\n                blueAppSidebar.scrollHeight - blueAppSidebar.scrollTop ===\r\n                blueAppSidebar.clientHeight\r\n            ) {\r\n                setHasShadow(false)\r\n            } else {\r\n                setHasShadow(true)\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", updateDimensions)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                \"blue-sidebar \" +\r\n                (props.sidebarClass ? props.sidebarClass : \"\")\r\n            }\r\n            style={props.sidebarStyle ? props.sidebarStyle : {}}\r\n        >\r\n            {props.topContent && (\r\n                <div className=\"blue-sidebar-top\">{props.topContent}</div>\r\n            )}\r\n\r\n            <div\r\n                className={\r\n                    \"blue-menu \" + (props.menuClass ? props.menuClass : \"\")\r\n                }\r\n                style={props.menuStyle ? props.menuStyle : {}}\r\n            >\r\n                {props.children}\r\n            </div>\r\n\r\n            {props.bottomContent && (\r\n                <div\r\n                    className={\r\n                        \"blue-sidebar-bottom \" +\r\n                        (hasShadow ? \" has-shadow\" : \"\")\r\n                    }\r\n                >\r\n                    {props.bottomContent}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Body, { BodyProps } from \"../../components/Body\"\r\n\r\nexport interface BodyRoundedProps extends BodyProps {\r\n    classNameTop?: string\r\n    classNameBottom?: string\r\n}\r\n\r\n/**\r\n * Extended variation of `Body` with rounded elements on top and bottom of the page.\r\n */\r\nexport default function BodyRounded({\r\n    classNameTop,\r\n    classNameBottom,\r\n    children,\r\n    ...bodyProps\r\n}: BodyRoundedProps) {\r\n    return (\r\n        <Body {...bodyProps}>\r\n            <div\r\n                className={\"blue-body-rounded-top bg-theme pt-1 d-none d-md-block \" + classNameTop}\r\n                style={{ height: \"1rem\" }}\r\n            >\r\n                <div className=\"rounded-top bg-body w-100 h-100\" />\r\n            </div>\r\n            {children}\r\n            <div\r\n                className={\"blue-body-rounded-bottom bg-theme pb-1 d-none d-md-block \" + classNameBottom}\r\n                style={{ height: \"1rem\" }}\r\n            >\r\n                <div className=\"rounded-bottom bg-body w-100 h-100\" />\r\n            </div>\r\n        </Body>\r\n    )\r\n}\r\n","import ReactMarkdown from \"react-markdown\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\n\r\nexport interface MarkdownProps {\r\n    children: string\r\n}\r\n\r\nexport default function Markdown({ children }: MarkdownProps) {\r\n    return (\r\n        <ReactMarkdown\r\n            children={children}\r\n            components={{\r\n                code({ node, inline, className, children, ...props }) {\r\n                    const match = /language-(\\w+)/.exec(className || \"\")\r\n                    return !inline && match ? (\r\n                        <SyntaxHighlighter\r\n                            children={String(children).replace(/\\n$/, \"\")}\r\n                            style={syntaxHighlighterStyle as { [key: string]: any }}\r\n                            language={match[1]}\r\n                            PreTag=\"div\"\r\n                            {...props}\r\n                        />\r\n                    ) : (\r\n                        <code className={className} {...props}>\r\n                            {children}\r\n                        </code>\r\n                    )\r\n                }\r\n            }}\r\n            transformImageUri={(src: string) =>\r\n                `https://raw.githubusercontent.com/bruegmann/blue-react/master/recipes/${src}`\r\n            }\r\n        />\r\n    )\r\n}\r\n","import { Component, ComponentClass } from \"react\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Markdown from \"./Markdown\"\r\n\r\nexport interface IComponentDocsProps {\r\n    standalone: boolean\r\n    comp: {\r\n        composes?: string[]\r\n        displayName: string\r\n        description: string\r\n        props: any\r\n        exampleCode?: string\r\n    }\r\n}\r\n\r\nexport class ComponentDocs extends Component<IComponentDocsProps, { ExampleComponent: ComponentClass<any> }> {\r\n    state = {\r\n        ExampleComponent: null as unknown as ComponentClass<any>\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            const { comp } = this.props\r\n            const ExampleComponent = require(`../examples/${comp.displayName}.tsx`)\r\n            this.setState({ ExampleComponent: ExampleComponent[\"default\"] })\r\n        } catch (ex) {\r\n            // console.error(ex)\r\n            // This component has no example\r\n        }\r\n\r\n        try {\r\n            const { comp } = this.props\r\n            const ExampleComponent = require(`../examples/${comp.displayName}.js`)\r\n            this.setState({ ExampleComponent: ExampleComponent[\"default\"] })\r\n        } catch (ex) {\r\n            // console.error(ex)\r\n            // This component has no example\r\n        }\r\n    }\r\n\r\n    prepareForMarkdown(text: string) {\r\n        return text.replace(\"@deprecated\", \"***@deprecated***\")\r\n    }\r\n\r\n    render() {\r\n        const { comp, standalone } = this.props\r\n        const { ExampleComponent } = this.state\r\n\r\n        return (\r\n            <article className=\"pt-5\">\r\n                <h1 className=\"page-header mt-0 blue-opacity-hover\">\r\n                    {comp.displayName}{\" \"}\r\n                    <Link to={`/component/${comp.displayName}`} className=\"blue-opacity-hover-content-active\">\r\n                        #\r\n                    </Link>\r\n                </h1>\r\n\r\n                <Markdown>{this.prepareForMarkdown(comp.description)}</Markdown>\r\n\r\n                {comp.displayName == \"Intro\" && (\r\n                    <p>\r\n                        <Link to=\"/intro-demo\">Take a look at this demo</Link>\r\n                    </p>\r\n                )}\r\n\r\n                {comp.composes && comp.composes.length > 0 && (\r\n                    <>\r\n                        <h2 className=\"mt-4 mb-3\">Extending props</h2>\r\n\r\n                        {comp.composes.map((comp: string, key: number) => (\r\n                            <div key={key}>\r\n                                <code>{comp}</code>\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                )}\r\n\r\n                {comp.props && (\r\n                    <div>\r\n                        <h2 className=\"mt-4 mb-3\">Props</h2>\r\n\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Description</th>\r\n                                    <th>Type</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {comp.props &&\r\n                                    Object.keys(comp.props).map((j) => (\r\n                                        <tr key={j}>\r\n                                            <th>{j}</th>\r\n                                            <td>\r\n                                                <Markdown>\r\n                                                    {this.prepareForMarkdown(comp.props[j].description)}\r\n                                                </Markdown>\r\n\r\n                                                {comp.props[j].defaultValue ? (\r\n                                                    <div>\r\n                                                        <strong>Default:</strong>\r\n                                                        &nbsp;\r\n                                                        <code>{comp.props[j].defaultValue.value}</code>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n                                            </td>\r\n                                            <td>\r\n                                                {comp.props[j].tsType &&\r\n                                                    (comp.props[j].tsType.raw || comp.props[j].tsType.name)}\r\n                                                <code\r\n                                                    className=\"blue-tooltip-start\"\r\n                                                    data-tooltip={comp.props[j].required ? \"Required\" : \"Optional\"}\r\n                                                >\r\n                                                    {comp.props[j].required ? \"!\" : \"?\"}\r\n                                                </code>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        {(ExampleComponent || comp.exampleCode) &&\r\n                            (standalone ? (\r\n                                <div>\r\n                                    <h2 className=\"mt-4 mb-3\">Example</h2>\r\n\r\n                                    {ExampleComponent && (\r\n                                        <div className=\"mb-3\">\r\n                                            <ExampleComponent />\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {comp.exampleCode && (\r\n                                        <SyntaxHighlighter style={syntaxHighlighterStyle} language=\"jsx\">\r\n                                            {comp.exampleCode}\r\n                                        </SyntaxHighlighter>\r\n                                    )}\r\n                                </div>\r\n                            ) : (\r\n                                <Link to={\"/component/\" + comp.displayName} onClick={() => window.scrollTo(0, 0)}>\r\n                                    Show example\r\n                                </Link>\r\n                            ))}\r\n                    </div>\r\n                )}\r\n            </article>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useParams, Link, NavLink } from \"react-router-dom\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../components/BodyRounded\"\r\n\r\nimport docs from \"../data/docs.json\"\r\nimport { ComponentDocs } from \"../components/ComponentDocs\"\r\nimport { IComponent } from \"../types\"\r\nimport Search from \"../../components/Search\"\r\nimport { appTitle } from \"../Global\"\r\nimport { Footer } from \"../components/Footer\"\r\n\r\nconsole.log({ docs })\r\n\r\nexport const ComponentPage = () => {\r\n    const { selectedComponent } = useParams<any>()\r\n\r\n    // State of input Search value\r\n    const [value, setValue] = useState<string>(\"\")\r\n    // Searched & found Components\r\n    const [components, setComponents] = useState<any>([])\r\n\r\n    const array_docs = Object.values(docs) as IComponent[]\r\n\r\n    useEffect(() => {\r\n        const routerPageElement = document.querySelector(\".router-page.active\")\r\n        if (routerPageElement) {\r\n            routerPageElement.scrollTo(0, 0)\r\n        }\r\n    }, [selectedComponent])\r\n\r\n    return (\r\n        <Page\r\n            title={`${selectedComponent ? `${selectedComponent} - ` : \"\"\r\n                }React Components - ${appTitle}`}\r\n        >\r\n            <Body containerClass=\"d-flex flex-column docs-min-height-100vh\">\r\n                <div className=\"container-fluid flex-grow-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"sticky-top\" style={{ zIndex: 0 }}>\r\n                                <div className=\"pt-1 pt-sm-3\">\r\n                                    <Search\r\n                                        body\r\n                                        // onSubmit={(e: any) => { e.preventDefault() }}\r\n                                        onChange={(a: any) => {\r\n                                            setValue(a.target.value)\r\n                                            // Array for the searched & found Components\r\n                                            let arr = []\r\n\r\n                                            for (\r\n                                                let i = 0;\r\n                                                i < array_docs.length;\r\n                                                i++\r\n                                            ) {\r\n                                                const target_value =\r\n                                                    a.target.value.toLowerCase()\r\n                                                if (\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.break !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.checked !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.children !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.className !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.containerClass !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.content !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.disableTitleSet !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.expandSidebar !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.featured !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hasActions !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hideSidebarMenu !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hideToggleAction !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.href !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.icon !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.label !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.light !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.mimeType !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.mirrored !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.navItemClassName !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.onChange !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.onToggle !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.open !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.pages !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.showDocumentLabel !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.sidebarToggleIconComponent !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.src !== \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.unrouteable !==\r\n                                                    \"undefined\"\r\n                                                ) {\r\n                                                    const description =\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].description?.toLowerCase()\r\n                                                    const display_Name =\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].displayName?.toLowerCase()\r\n                                                    const props = Object.keys(\r\n                                                        array_docs[i].props\r\n                                                    )\r\n\r\n                                                    if (\r\n                                                        description?.includes(\r\n                                                            target_value\r\n                                                        ) ||\r\n                                                        display_Name?.includes(\r\n                                                            target_value\r\n                                                        ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        props.some((val) =>\r\n                                                            val\r\n                                                                .toLowerCase()\r\n                                                                .includes(\r\n                                                                    target_value\r\n                                                                )\r\n                                                        ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].exampleCode\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            )\r\n                                                    ) {\r\n                                                        arr.push(array_docs[i])\r\n                                                        setComponents(arr)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                        value={value}\r\n                                        className=\"mb-1 ms-5 ms-md-0 \"\r\n                                        placeholder=\"Search...\"\r\n                                    />\r\n\r\n                                    <div\r\n                                        className=\"overflow-auto\"\r\n                                        style={{\r\n                                            maxHeight: \"calc(100vh - 5rem)\"\r\n                                        }}\r\n                                    >\r\n                                        <nav className=\"nav nav-pills flex-column\">\r\n                                            {components.length > 0 &&\r\n                                                value !== \"\"\r\n                                                ? components.map(\r\n                                                    (\r\n                                                        i: any,\r\n                                                        index: number\r\n                                                    ) => (\r\n                                                        <div key={index}>\r\n                                                            <Link\r\n                                                                to={`/component/${i.displayName}`}\r\n                                                                className=\"nav-link\"\r\n                                                            >\r\n                                                                {\r\n                                                                    i.displayName\r\n                                                                }\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    )\r\n                                                )\r\n                                                : docs &&\r\n                                                Object.values(docs).map(\r\n                                                    (\r\n                                                        i: any,\r\n                                                        index: number\r\n                                                    ) => (\r\n                                                        <div\r\n                                                            key={index}\r\n                                                            className=\"nav-item\"\r\n                                                        >\r\n                                                            <NavLink\r\n                                                                to={`/component/${i.displayName}`}\r\n                                                                className=\"nav-link\"\r\n                                                            >\r\n                                                                {\r\n                                                                    i.displayName\r\n                                                                }\r\n                                                            </NavLink>\r\n                                                        </div>\r\n                                                    )\r\n                                                )}\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-10\">\r\n                            {docs &&\r\n                                Object.values(docs).map(\r\n                                    (i: any, index: number) =>\r\n                                        (!selectedComponent ||\r\n                                            selectedComponent ===\r\n                                            i.displayName) &&\r\n                                        i.props && (\r\n                                            <ComponentDocs\r\n                                                key={index}\r\n                                                comp={i}\r\n                                                standalone={\r\n                                                    selectedComponent\r\n                                                        ? true\r\n                                                        : false\r\n                                                }\r\n                                            />\r\n                                        )\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer containerClass=\"container-fluid\" />\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport interface IntroProps {\r\n    /**\r\n     * Can be an image. Will be placed inside of the `src` attribute.\r\n     */\r\n    logo?: string\r\n\r\n    /**\r\n     * Max width from the logo.\r\n     */\r\n    logoMaxWidth?: string\r\n\r\n    /**\r\n     * Text which will be placed under the logo.\r\n     */\r\n    title?: string\r\n\r\n    /**\r\n     * Content\r\n     */\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Can be used for a sign-in page.\r\n */\r\nexport default function Intro({\r\n    logo,\r\n    logoMaxWidth = \"100px\",\r\n    title,\r\n    children\r\n}: IntroProps) {\r\n    return (\r\n        <div className=\"sign-in-screen\">\r\n            <div className=\"sign-in-container mx-1\">\r\n                <div className=\"bg-body rounded-3 shadow-lg px-4 py-5\">\r\n                    <div className=\"text-center\">\r\n                        <img\r\n                            style={{ maxWidth: logoMaxWidth }}\r\n                            src={logo}\r\n                            alt=\"\"\r\n                        />\r\n                        <h2 className=\"mt-4 mb-3\">{title}</h2>\r\n                    </div>\r\n\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Intro from \"../../components/Intro\"\r\nimport { logo } from \"../Global\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ChevronLeft } from \"react-bootstrap-icons\"\r\n\r\nexport const IntroDemoPage = () => (\r\n    <>\r\n        {/* Changes background and sidebar background when on dark mode. */}\r\n        <style\r\n            type=\"text/css\"\r\n            dangerouslySetInnerHTML={{\r\n                __html: /* css */ `\r\n            @media (prefers-color-scheme: dark) {\r\n                :root {\r\n                    --sidebar-bg: var(--black, #212529);\r\n                }\r\n            }\r\n        `\r\n            }}\r\n        />\r\n        <Intro\r\n            logo={logo}\r\n            logoMaxWidth=\"100px\"\r\n            title=\"Here could be your introduction\"\r\n        >\r\n            <form\r\n                className=\"form-horizontal\"\r\n                onSubmit={(event) => {\r\n                    event.preventDefault()\r\n                }}\r\n            >\r\n                <div className=\"row mb-3\">\r\n                    <label className=\"col-sm-4 col-form-label\">\r\n                        Please sign in\r\n                    </label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter something\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\">\r\n                        Sign in\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            <Link to=\"/component/Intro\">\r\n                <ChevronLeft /> Back to the docs\r\n            </Link>\r\n        </Intro>\r\n    </>\r\n)\r\n","import React, { useState } from \"react\"\r\nimport { Modal, ModalHeader } from \"reactstrap\"\r\n\r\nexport function NormalScrollbarDemo() {\r\n    const [showModal, setShowModal] = useState<boolean>(false)\r\n    const toggleShowModal = () => setShowModal(!showModal)\r\n\r\n    return (\r\n        <>\r\n            <button className=\"btn btn-link p-0 mb-1\" onClick={toggleShowModal}>\r\n                Show demo.\r\n            </button>\r\n\r\n            <Modal isOpen={showModal} toggle={toggleShowModal}>\r\n                <ModalHeader toggle={toggleShowModal}>\r\n                    Scrollbar demo\r\n                </ModalHeader>\r\n                <div className=\"m-3\">\r\n                    <div className=\"mb-3\">\r\n                        <label>\r\n                            Area without <code>.blue-normal-scrollbar</code>\r\n                        </label>\r\n                        <select className=\"form-control\" multiple aria-readonly>\r\n                            <option>one</option>\r\n                            <option>two</option>\r\n                            <option>three</option>\r\n                            <option>four</option>\r\n                            <option>five</option>\r\n                            <option>six</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"blue-normal-scrollbar mb-3\">\r\n                        <label>\r\n                            Area with <code>.blue-normal-scrollbar</code>\r\n                        </label>\r\n                        <select className=\"form-control\" multiple aria-readonly>\r\n                            <option>one</option>\r\n                            <option>two</option>\r\n                            <option>three</option>\r\n                            <option>four</option>\r\n                            <option>five</option>\r\n                            <option>six</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"alert alert-info\">\r\n                        Make sure to put <code>.blue-normal-scrollbar</code> to\r\n                        an parent element and not directly to the element with\r\n                        the overflow.\r\n                    </div>\r\n\r\n                    <div className=\"alert alert-info\">\r\n                        Bootstrap modals with <code>.modal-body</code> already\r\n                        have the rules of <code>.blue-normal-scrollbar</code>,\r\n                        so you don't have to put the class name there yourself.\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import { ReactNode } from \"react\"\r\n\r\nexport interface HashLinkProps {\r\n    children: ReactNode\r\n    id: string\r\n}\r\n\r\nexport default function HashLink({ children, id }: HashLinkProps) {\r\n    return (\r\n        <h5 className=\"blue-opacity-hover\" id={id}>\r\n            {children}{\" \"}\r\n            <a href={`#${id}`} className=\"blue-opacity-hover-content-active\">\r\n                #\r\n            </a>\r\n        </h5>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Utilities from \"../../components/Utilities\"\r\nimport { CheckCircle, CheckCircleFill, PlayFill } from \"react-bootstrap-icons\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../components/BodyRounded\"\r\nimport { NormalScrollbarDemo } from \"../components/NormalScrollbarDemo\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport HashLink from \"../components/HashLink\"\r\n\r\nexport interface UtilitiesPageProps { }\r\n\r\nexport interface UtilitiesPageState {\r\n    content: any\r\n    didScroll: boolean\r\n}\r\n\r\nconst utilitiesFunctions = [\r\n    {\r\n        definition: \"hasClass(el, className)\",\r\n        description: \"Checks if element has a specific class name.\"\r\n    },\r\n    {\r\n        definition: \"addClass(el, className)\",\r\n        description: \"Adds a class name to an element.\"\r\n    },\r\n    {\r\n        definition: \"removeClass(el, className)\",\r\n        description: \"Removes a class name from an element.\"\r\n    },\r\n    {\r\n        definition: \"toggleClass(el, className)\",\r\n        description:\r\n            \"Adds class name to element, if it doesn't it yet. Otherwise it removes it.\"\r\n    },\r\n    {\r\n        definition: \"startLoading()\",\r\n        description: \"Shows loading animation.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.startLoading()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"finishLoading()\",\r\n        description: \"Hides loading animation.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.finishLoading()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"showSuccess()\",\r\n        description: \"Shows success symbol.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.showSuccess()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"hideSuccess()\",\r\n        description: \"Hides success symbol.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.hideSuccess()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"toggleActions()\",\r\n        description: \"Shows action menu or hides it.\"\r\n    },\r\n    {\r\n        definition:\r\n            \"setAlertMessage(message, alertClassName, close, detailText)\",\r\n        description: (\r\n            <span>\r\n                Shows an alert message.\r\n                <br />\r\n                Possible values for alertClassName: <code>loading</code>,{\" \"}\r\n                <code>success</code>, <code>info</code>, <code>warning</code>,{\" \"}\r\n                <code>danger</code>\r\n            </span>\r\n        ),\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() =>\r\n                    Utilities.setAlertMessage(\r\n                        \"Hey, this is a message\",\r\n                        \"danger\",\r\n                        true,\r\n                        `Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \r\n\r\n                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n`\r\n                    )\r\n                }\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"resetAlertMessage(alertClassName)\",\r\n        description: \"Resets alert message and removes it.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.resetAlertMessage(\"danger\")}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"guid()\",\r\n        description: \"Returns string of random characters.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => alert(\"Generated GUID: \" + Utilities.guid())}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"scrollToTop()\",\r\n        description: \"Scrolls to the top of the page.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.scrollToTop()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"fetchData(input, init?, showErrorDetail? = true)\",\r\n        description: (\r\n            <span>\r\n                Uses native <code>fetch</code> function, but adds error handling\r\n                and shows error messages if there are any.\r\n            </span>\r\n        )\r\n        // demo: (<Fragment>\r\n        //     <button className=\"btn btn-light\"\r\n        //     // onClick={() => {\r\n        //     //     const url = \"https://jsonplaceholder.typicode.com/todos/1\"\r\n\r\n        //     //     Utilities.startLoading()\r\n\r\n        //     //     Utilities.fetchData(url)\r\n        //     //         .then((res: any) => {\r\n        //     //             Utilities.finishLoading()\r\n        //     //             return res.json()\r\n        //     //         })\r\n        //     //         .then((json: any) => alert(`Here is the result of ${url}:\\n\\n ${JSON.stringify(json)}`))\r\n        //     // }}\r\n        //     >\r\n        //         <PlayFill />\r\n        //     </button>\r\n        // </Fragment>)\r\n    }\r\n]\r\n\r\nexport class UtilitiesPage extends React.Component<\r\n    UtilitiesPageProps,\r\n    UtilitiesPageState\r\n> {\r\n    constructor(props: UtilitiesPageProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            content: [],\r\n            didScroll: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document\r\n            .querySelector(\".router-page.active\")!\r\n            .addEventListener(\"scroll\", () => {\r\n                if (!this.state.didScroll) {\r\n                    this.setState({ didScroll: true })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const sections = [\r\n            {\r\n                title: \"Utilities\",\r\n                body: (\r\n                    <div>\r\n                        <p>A static class with a few useful helper functions</p>\r\n\r\n                        <h2 className=\"page-header\">Useful CSS classes</h2>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-sidebar-bottom\">\r\n                                <code>.blue-sidebar-bottom</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                With Sidebar Bottom, for example, a registered\r\n                                user can be displayed at the bottom left. Usable\r\n                                within{\" \"}\r\n                                <code>\r\n                                    &lt;SidebarMenu {\"bottomContent={}\"} /&gt;\r\n                                </code>\r\n                                .\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-sidebar-hidden-on-open\">\r\n                                <code>.blue-sidebar-hidden-on-open</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                The element is hidden as long as the sidebar is\r\n                                open.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-sidebar-visible-on-open\">\r\n                                <code>.blue-sidebar-visible-on-open</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                The element is visible as long as the sidebar is\r\n                                open.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-normal-scrollbar\">\r\n                                <code>.blue-normal-scrollbar</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                {\r\n                                    \"Normalizes elements in areas which still should not have the theme colors for their scrollbars. \"\r\n                                }\r\n                                <NormalScrollbarDemo />\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"btn-black\">\r\n                                <code>.btn-black</code>,{\" \"}\r\n                                <code>.btn-outline-black</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Additionally Bootstrap theme variable \"black\"\r\n                                for always black buttons.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"btn-white\">\r\n                                <code>.btn-white</code>,{\" \"}\r\n                                <code>.btn-outline-white</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Additionally Bootstrap theme variable \"white\"\r\n                                for always white buttons.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"form-horizontal\">\r\n                                <code>.form-horizontal</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                To be used together with{\" \"}\r\n                                <a href=\"https://getbootstrap.com/docs/5.1/forms/layout/#horizontal-form\">\r\n                                    Bootstraps solutions\r\n                                </a>\r\n                                . <code>.form-horizontal</code> arranges the\r\n                                labels on the right on larger screens.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"w-bla-sidebar-width\">\r\n                                <code>.w-bla-sidebar-width</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Gives element the width of the sidebar, defined\r\n                                with <code>$bla-sidebar-width</code>.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-tooltip-up\">\r\n                                <code>.blue-tooltip-up</code>,{\" \"}\r\n                                <code>.blue-tooltip-down</code>,{\" \"}\r\n                                <code>.blue-tooltip-start</code>,{\" \"}\r\n                                <code>.blue-tooltip-end</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Data Attribute of element is used as an tooltip.\r\n                                To be used together with{\" \"}\r\n                                <code>data-tooltip</code>.<br />\r\n                                Usage:\r\n                            </p>\r\n                            <strong\r\n                                data-tooltip=\"Put your tooltip text here\"\r\n                                className=\"blue-tooltip-up\"\r\n                            >\r\n                                Hover me!\r\n                            </strong>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<strong data-tooltip=\"Put your tooltip text here\" className=\"blue-tooltip-up\">\r\n    Hover me!\r\n</strong>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-btn-silent\">\r\n                                <code>.blue-btn-silent</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Removes border when the button is in normal\r\n                                state (no hover). Should be used together with{\" \"}\r\n                                <code>.btn-outline-*</code>.<br />\r\n                                Usage:\r\n                            </p>\r\n                            <button className=\"btn btn-outline-secondary blue-btn-silent\">\r\n                                Button\r\n                            </button>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<button className=\"btn btn-outline-secondary blue-btn-silent\">\r\n    Button\r\n</button>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-opacity-hover\">\r\n                                <code>.blue-opacity-hover</code>,{\" \"}\r\n                                <code>.blue-opacity-hover-content-active</code>,{\" \"}\r\n                                <code>.blue-opacity-hover-content-default</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                With <code>.blue-opacity-hover</code> you can\r\n                                hide things by default and let them appear when\r\n                                the user hovers the area around it.\r\n                                <br />\r\n                                This way you can simplify the UI a bit and make\r\n                                controls disappear when they are not needed. On\r\n                                touch screens the elements will always be\r\n                                visible.\r\n                                <br />\r\n                                Usage:\r\n                            </p>\r\n\r\n                            <div className=\"card blue-opacity-hover p-3 flex-row justify-content-between\">\r\n                                <h5 className=\"blue-opacity-hover-content-default\">\r\n                                    Hover here to see a button\r\n                                </h5>\r\n                                <button className=\"btn btn-secondary blue-opacity-hover-content-active\">\r\n                                    Hey there\r\n                                </button>\r\n                            </div>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<div className=\"card blue-opacity-hover p-3 flex-row justify-content-between\">\r\n    <h5 className=\"blue-opacity-hover-content-default\">Hover here to see a button</HashLink>\r\n    <button className=\"btn btn-secondary blue-opacity-hover-content-active\">Hey there</button>\r\n</div>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-d-hover\">\r\n                                <code>.blue-d-hover</code>,{\" \"}\r\n                                <code>.blue-d-hover-content-active</code>,{\" \"}\r\n                                <code>.blue-d-hover-content-default</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                <code>.blue-d-hover</code> is similar to{\" \"}\r\n                                <code>.blue-opacity-hover</code>, but the\r\n                                elements will disappear and appear with the{\" \"}\r\n                                <code>display</code> property.\r\n                                <br />\r\n                                It is ideal if you want to replace something\r\n                                with something else when the user hovers. On the\r\n                                example I used it to change the edit and delete\r\n                                icons from lineout to filled when hovering.\r\n                                <br />\r\n                                Usage:\r\n                            </p>\r\n\r\n                            <button className=\"btn blue-d-hover d-inline-flex align-items-center gap-1\">\r\n                                <CheckCircle className=\"blue-d-hover-content-default\" />\r\n                                <CheckCircleFill className=\"blue-d-hover-content-active\" />{\" \"}\r\n                                Hover to fill the icon\r\n                            </button>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<button className=\"btn blue-d-hover d-inline-flex align-items-center gap-1\">\r\n    <CheckCircle className=\"blue-d-hover-content-default\" />\r\n    <CheckCircleFill className=\"blue-d-hover-content-active\" /> Hover to fill the icon\r\n</button>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <h2 className=\"page-header\">JavaScript Functions</h2>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Definition</th>\r\n                                    <th>Description</th>\r\n                                    <th>Demo</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {utilitiesFunctions\r\n                                    .sort((a, b) =>\r\n                                        a.definition > b.definition\r\n                                            ? 1\r\n                                            : b.definition > a.definition\r\n                                                ? -1\r\n                                                : 0\r\n                                    )\r\n                                    .map((fun, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>\r\n                                                <code>\r\n                                                    Utilities.{fun.definition}\r\n                                                </code>\r\n                                            </td>\r\n                                            <td>{fun.description}</td>\r\n                                            {fun.demo ? (\r\n                                                <td>{fun.demo}</td>\r\n                                            ) : (\r\n                                                <td />\r\n                                            )}\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <h2 className=\"page-header\">Example</h2>\r\n                        <SyntaxHighlighter\r\n                            style={syntaxHighlighterStyle}\r\n                            language=\"javascript\"\r\n                        >{`import { Utilities } from \"blue-react\"\r\n                            \r\nUtilities.startLoading()`}</SyntaxHighlighter>\r\n                    </div>\r\n                )\r\n            }\r\n        ]\r\n        return (\r\n            <Page>\r\n                <Body containerClass=\"no-container pt-5 pt-md-0 d-flex flex-column docs-min-height-100vh\">\r\n                    <div className=\"container flex-grow-1\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                {sections.map((s, i) => (\r\n                                    <article\r\n                                        key={i}\r\n                                        id={\r\n                                            \"section-\" +\r\n                                            encodeURIComponent(s.title)\r\n                                        }\r\n                                    >\r\n                                        <h1 className=\"page-header\">\r\n                                            {s.title}\r\n                                        </h1>\r\n                                        {s.body}\r\n                                    </article>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Footer />\r\n                </Body>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\nexport default UtilitiesPage\r\n","import React, { useEffect } from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface HeaderTitleProps {\r\n    /**\r\n     * Can be an image. Will be placed inside of the `src` attribute.\r\n     */\r\n    logo?: string\r\n\r\n    /**\r\n     * Text next to the logo.\r\n     */\r\n    appTitle?: string\r\n\r\n    /**\r\n     * Disables that the app title will disappear at a specific view width.\r\n     */\r\n    keepAppTitle?: boolean\r\n\r\n    children?: any\r\n\r\n    /**\r\n     * Extends `className` from parent element.\r\n     */\r\n    className?: string\r\n\r\n    /**\r\n     * Is the component used on the sidebar?\r\n     */\r\n    sidebar?: boolean\r\n}\r\n\r\n/**\r\n * The title area at the header bar.\r\n * Depending on its content, the document's title will be set aswell (what will be shown in the browser title bar).\r\n */\r\nexport default function HeaderTitle({\r\n    logo,\r\n    appTitle,\r\n    keepAppTitle,\r\n    children,\r\n    className,\r\n    sidebar\r\n}: HeaderTitleProps) {\r\n    const uniqueId = \"HeaderTitle-\" + Utilities.guid()\r\n\r\n    const setDocumentTitle = () => {\r\n        if (\r\n            window.blueLayoutRef &&\r\n            window.blueLayoutRef.props &&\r\n            window.blueLayoutRef.props.disableTitleSet === false\r\n        ) {\r\n            const element = document.querySelector(\r\n                `#${uniqueId} .blue-header-logo-title-labels`\r\n            ) as HTMLElement\r\n            const titleElement = document.querySelector(\"title\")\r\n            if (element && element.innerText && titleElement) {\r\n                const titlePaths = element.innerText.split(\"/\")\r\n                if (titlePaths.length > 1) {\r\n                    titleElement.innerText = `${titlePaths[\r\n                        titlePaths.length - 1\r\n                    ].trim()} - ${titlePaths[0].trim()}`\r\n                } else {\r\n                    titleElement.innerText = element.innerText\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(setDocumentTitle, [])\r\n    useEffect(setDocumentTitle, [children])\r\n\r\n    return (\r\n        <h3\r\n            id={uniqueId}\r\n            className={\r\n                \"blue-header-logo\" +\r\n                (className ? ` ${className}` : \"\") +\r\n                (sidebar ? \" sidebar\" : \"\")\r\n            }\r\n        >\r\n            <span className=\"blue-header-logo-title\">\r\n                {logo ? (\r\n                    <span>\r\n                        <a href=\"#\">\r\n                            <img\r\n                                src={logo}\r\n                                className=\"blue-header-logo-image\"\r\n                            />\r\n                        </a>\r\n                        &nbsp;\r\n                    </span>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                <span\r\n                    className={\r\n                        \"blue-header-logo-title-labels \" +\r\n                        (keepAppTitle ? \"keep\" : \"\")\r\n                    }\r\n                >\r\n                    {appTitle ? (\r\n                        <span>\r\n                            <a href=\"#\">{appTitle}</a> {children ? \"/\" : \"\"}\r\n                            &nbsp;\r\n                        </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                    {children}\r\n                </span>\r\n            </span>\r\n        </h3>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport Utilities from \"../../components/Utilities\"\r\nimport { GitHubContent } from \"../gitHubApiTypes\"\r\nimport Markdown from \"./Markdown\"\r\n\r\nexport interface RecipeProps {\r\n    recipe: GitHubContent\r\n}\r\n\r\nexport function Recipe({ recipe }: RecipeProps) {\r\n    const [markdown, setMarkdown] = useState<string | null>(null)\r\n\r\n    useEffect(() => {\r\n        fetchRecipe()\r\n    }, [recipe])\r\n\r\n    const fetchRecipe = async () => {\r\n        if (recipe.download_url !== undefined) {\r\n            const r = await fetch(recipe.download_url)\r\n            const text = await r.text()\r\n            setMarkdown(text)\r\n        } else {\r\n            Utilities.setAlertMessage(\"This GitHub file has no download_url\", \"danger\", true)\r\n        }\r\n    }\r\n\r\n    return <>{markdown !== null ? <Markdown>{markdown}</Markdown> : <div>...</div>}</>\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Link, NavLink, useParams } from \"react-router-dom\"\r\nimport Body from \"../components/BodyRounded\"\r\nimport Page from \"../../components/Page\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport { Recipe } from \"../components/Recipe\"\r\nimport { GitHubContent } from \"../gitHubApiTypes\"\r\n\r\nexport function RecipesPage() {\r\n    const [recipes, setRecipes] = useState<GitHubContent[] | null>(null)\r\n    const { active } = useParams<any>()\r\n    const [activeRecipe, setActiveRecipe] = useState<GitHubContent | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (recipes === null) {\r\n            fetchRecipes()\r\n        }\r\n    }, [recipes])\r\n\r\n    useEffect(() => {\r\n        if (active !== undefined && active !== null && recipes !== null) {\r\n            recipes.forEach((recipe: GitHubContent) => {\r\n                if (recipe.name.toLowerCase() === active.toLowerCase()) {\r\n                    setActiveRecipe(recipe)\r\n                }\r\n            })\r\n        } else {\r\n            setActiveRecipe(null)\r\n        }\r\n    }, [active, recipes])\r\n\r\n    const fetchRecipes = async () => {\r\n        const url =\r\n            \"https://api.github.com/repos/bruegmann/blue-react/contents/recipes\"\r\n        const r = await fetch(`${url}`)\r\n\r\n        const contents = (await r.json()) as GitHubContent[]\r\n\r\n        if (contents && Array.isArray(contents)) {\r\n            const recipes = contents.filter(\r\n                (c: GitHubContent) =>\r\n                    c.name.endsWith(\".md\") &&\r\n                    c.name.toLowerCase() !== \"readme.md\"\r\n            )\r\n            setRecipes(recipes)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Page>\r\n            <Body containerClass=\"d-flex flex-column docs-min-height-100vh\">\r\n                <div className=\"container-fluid pt-5 pt-md-0 flex-grow-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"sticky-top\" style={{ zIndex: 0 }}>\r\n                                <div>\r\n                                    <nav className=\"nav nav-pills flex-column mt-3\">\r\n                                        {recipes !== null ? (\r\n                                            recipes.map(\r\n                                                (recipe: GitHubContent) => (\r\n                                                    <div\r\n                                                        key={recipe.sha}\r\n                                                        className=\"nav-item\"\r\n                                                    >\r\n                                                        <NavLink\r\n                                                            to={`/recipes/${recipe.name}`}\r\n                                                            className=\"nav-link\"\r\n                                                        >\r\n                                                            {recipe.name.replace(\r\n                                                                \".md\",\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </NavLink>\r\n                                                    </div>\r\n                                                )\r\n                                            )\r\n                                        ) : (\r\n                                            <div>Loading...</div>\r\n                                        )}\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-10\">\r\n                            {activeRecipe !== null ? (\r\n                                <Recipe recipe={activeRecipe} />\r\n                            ) : (\r\n                                <>\r\n                                    <h1 className=\"page-header\">Recipes</h1>\r\n\r\n                                    <p>\r\n                                        Recipes are short tutorials or\r\n                                        instructions for specific scenarious. On\r\n                                        the side you see a list of all available\r\n                                        recipes.\r\n                                    </p>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer containerClass=\"container-fluid\" />\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface HeaderProps {\r\n    children?: any\r\n}\r\n\r\n/**\r\n * The top of a page.\r\n */\r\nexport default function Header({ children }: HeaderProps) {\r\n    return (\r\n        <div className=\"blue-header blue-header-extension\">\r\n            <div\r\n                className=\"blue-header-wrapper\"\r\n                onClick={Utilities.scrollToTop}\r\n            />\r\n\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport MenuItem from \"./MenuItem\"\r\nimport { breakOption } from \"./shared\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface ActionMenuProps {\r\n    /**\r\n     * Hides the toggle button in mobile view. Can be useful when using multiple ActionMenus and not show the toggle button for each menu.\r\n     */\r\n    hideToggleAction?: boolean\r\n\r\n    children?: any\r\n\r\n    /**\r\n     * Icon component for the toggle icon.\r\n     */\r\n    toggleIcon?: any\r\n\r\n    className?: string\r\n\r\n    /**\r\n     * \"sm\" | \"md\" | \"lg\" | \"xl\" | \"none\"\r\n     */\r\n    break?: breakOption | \"none\"\r\n}\r\n\r\n/**\r\n * The Action Menu on the top right of a page. You can place Actions here which are in context of the current page.\r\n */\r\nexport default function ActionMenu(props: ActionMenuProps) {\r\n    const {\r\n        hideToggleAction,\r\n        children,\r\n        className,\r\n        toggleIcon = \"bi-iconmonstr-menu-7\"\r\n    } = props\r\n    const _break = props.break || \"lg\"\r\n\r\n    const [actionsToggledIn, setActionsToggledIn] = useState<boolean>(false)\r\n\r\n    const toggleActions = () => {\r\n        Utilities.toggleActions()\r\n        initToggleStatus()\r\n    }\r\n\r\n    const initToggleStatus = () => {\r\n        setActionsToggledIn(\r\n            Utilities.hasClass(\r\n                document.querySelector(\".blue-actions\"),\r\n                \"open\"\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        initToggleStatus()\r\n\r\n        const appWrapper = document.querySelector(\r\n            \".blue-wrapper\"\r\n        ) as HTMLElement\r\n        if (appWrapper) {\r\n            appWrapper.onclick = toggleActions\r\n        }\r\n\r\n        document\r\n            .querySelectorAll(\".blue-actions-menu .nav-link\")\r\n            .forEach((link) => {\r\n                link.addEventListener(\"click\", () => {\r\n                    if (actionsToggledIn) {\r\n                        toggleActions()\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className={`blue-actions navbar ${className} navbar-expand${_break !== \"none\" ? `-${_break}` : \"\"\r\n                } ${_break}`}\r\n        >\r\n            <div\r\n                className=\"blue-header-wrapper\"\r\n                onClick={Utilities.scrollToTop}\r\n            />\r\n            <ul className=\"blue-actions-menu nav navbar-nav navbar-right\">\r\n                {!actionsToggledIn && !hideToggleAction ? (\r\n                    <MenuItem\r\n                        className=\"blue-actions-menu-toggle\"\r\n                        onClick={() => toggleActions()}\r\n                        icon={toggleIcon}\r\n                        aria-label=\"Toggle menu\"\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                {children}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Switch, { SwitchProps } from \"./Switch\"\r\n\r\nexport interface ActionMenuSwitchProps extends SwitchProps {\r\n    onChange?: () => void\r\n    label?: any\r\n}\r\n\r\n/**\r\n * @deprecated\r\n * Use a solution with Bootstrap's `.form-check.form-switch` or `MenuItem` with a switch icon.\r\n * Switch for the Action Menu.\r\n */\r\nexport default function ActionMenuSwitch({ label, ...props }: ActionMenuSwitchProps) {\r\n    return (\r\n        <li className=\"nav-item\">\r\n            <a\r\n                href=\"javascript:void(0)\"\r\n                className=\"nav-link blue-actions-menu-item\"\r\n                onClick={() => {\r\n                    if (props.onChange) props.onChange()\r\n                }}\r\n            >\r\n                <Switch {...props} elementType=\"span\" />\r\n\r\n                {label && <span className=\"blue-actions-label\">&nbsp;{label}</span>}\r\n            </a>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/Body\"\r\nimport Header from \"../../components/Header\"\r\nimport MenuItem from \"../../components/MenuItem\"\r\nimport HeaderTitle from \"../../components/HeaderTitle\"\r\nimport ActionMenu from \"../../components/ActionMenu\"\r\nimport { CloudSleet, ThreeDotsVertical } from \"react-bootstrap-icons\"\r\nimport { breakOption } from \"../../components/shared\"\r\nimport ActionMenuSwitch from \"../../components/ActionMenuSwitch\"\r\n\r\nexport const ActionMenuExamplePage = () => {\r\n    const [breakProp, setBreakProp] = useState<breakOption | \"none\">(\"md\")\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    return (\r\n        <Page>\r\n            <Header>\r\n                <HeaderTitle appTitle=\"My app with an action menu\" />\r\n\r\n                <ActionMenu toggleIcon={<ThreeDotsVertical />} break={breakProp}>\r\n                    <MenuItem label=\"I'm a MenuItem\" />\r\n\r\n                    <div>\r\n                        <MenuItem label=\"I'm a MenuItem with children\" supportOutside icon={<CloudSleet />}>\r\n                            <MenuItem label=\"I'm a MenuItem\" />\r\n                            <MenuItem label=\"Another one\" />\r\n                        </MenuItem>\r\n                    </div>\r\n\r\n                    <ActionMenuSwitch label=\"Click me\" checked={checked} onChange={() => setChecked(!checked)} />\r\n                </ActionMenu>\r\n            </Header>\r\n            <Body className=\"mt-5\">\r\n                <label className=\"my-1 me-2\" htmlFor=\"ActionMenuExamplePage-breakProp\">\r\n                    <code>break</code> prop\r\n                </label>\r\n                <select\r\n                    className=\"form-select my-1 me-sm-2\"\r\n                    id=\"ActionMenuExamplePage-breakProp\"\r\n                    value={breakProp}\r\n                    onChange={({ target }) => setBreakProp(target.value as any)}\r\n                >\r\n                    <option value=\"sm\">sm</option>\r\n                    <option value=\"md\">md</option>\r\n                    <option value=\"lg\">lg</option>\r\n                    <option value=\"xl\">xl</option>\r\n                    <option value=\"none\">none</option>\r\n                </select>\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route, NavLink, Link } from \"react-router-dom\"\r\nimport Layout from \"../components/Layout\"\r\n\r\nimport \"./docs.scss\"\r\nimport { HomePage } from \"./pages/HomePage\"\r\nimport SidebarMenu from \"../components/SidebarMenu\"\r\nimport MenuItem from \"../components/MenuItem\"\r\n\r\nimport {\r\n    List,\r\n    House,\r\n    CodeSquare,\r\n    Puzzle,\r\n    Tools,\r\n    XCircleFill,\r\n    InfoCircleFill,\r\n    CheckCircleFill,\r\n    ExclamationCircleFill,\r\n    Palette2,\r\n    HouseFill,\r\n    PuzzleFill,\r\n    Stickies,\r\n    StickiesFill\r\n} from \"react-bootstrap-icons\"\r\n\r\nimport { ComponentPage } from \"./pages/ComponentPage\"\r\nimport { IntroDemoPage } from \"./pages/IntroDemoPage\"\r\nimport UtilitiesPage from \"./pages/UtilitiesPage\"\r\nimport HeaderTitle from \"../components/HeaderTitle\"\r\nimport { appTitle, logo } from \"./Global\"\r\nimport { RecipesPage } from \"./pages/RecipesPage\"\r\nimport { ActionMenuExamplePage } from \"./pages/ActionMenuExamplePage\"\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Layout\r\n                pages={[]}\r\n                unrouteable\r\n                expandSidebar\r\n                sidebarToggleIconComponent={<List />}\r\n                statusIcons={{\r\n                    danger: <XCircleFill />,\r\n                    info: <InfoCircleFill />,\r\n                    success: <CheckCircleFill />,\r\n                    warning: <ExclamationCircleFill />\r\n                }}\r\n                disableHeaders\r\n            >\r\n                <HeaderTitle sidebar>\r\n                    <Link to=\"/\">\r\n                        <img src={logo} className=\"blue-header-logo-image\" alt=\"B\" />\r\n                    </Link>{\" \"}\r\n                    <Link to=\"/\">{appTitle}</Link>\r\n                </HeaderTitle>\r\n\r\n                <SidebarMenu\r\n                    bottomContent={\r\n                        <>\r\n                            <MenuItem\r\n                                href=\"https://bruegmann.github.io/themify\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                label=\"Customize with Themify\"\r\n                                icon={<Palette2 />}\r\n                            />\r\n\r\n                            <MenuItem\r\n                                href=\"https://github.com/bruegmann/blue-react\"\r\n                                icon={<CodeSquare />}\r\n                                label=\"Code on GitHub\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            />\r\n                        </>\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        icon={<House />}\r\n                        iconForActive={<HouseFill />}\r\n                        label=\"Start\"\r\n                        elementType={NavLink}\r\n                        exact\r\n                        to=\"/\"\r\n                    />\r\n                    <MenuItem icon={<Tools />} label=\"Utilities\" elementType={NavLink} to=\"/utilities\" />\r\n                    <MenuItem\r\n                        icon={<Puzzle />}\r\n                        iconForActive={<PuzzleFill />}\r\n                        label=\"React Components\"\r\n                        elementType={NavLink}\r\n                        to=\"/component\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Stickies />}\r\n                        iconForActive={<StickiesFill />}\r\n                        label=\"Recipes\"\r\n                        elementType={NavLink}\r\n                        to=\"/recipes\"\r\n                    />\r\n                </SidebarMenu>\r\n\r\n                <div className=\"router-page active\">\r\n                    <Switch>\r\n                        <Route path=\"/utilities\">\r\n                            <UtilitiesPage />\r\n                        </Route>\r\n                        <Route path=\"/component/:selectedComponent?\">\r\n                            <ComponentPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/intro-demo\">\r\n                            <IntroDemoPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/action-menu-example\">\r\n                            <ActionMenuExamplePage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/recipes/:active?\">\r\n                            <RecipesPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/\">\r\n                            <HomePage />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Layout>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It\"s the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\")\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can\"t reload the page.\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" }\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\")\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister()\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { createRoot } from \"react-dom/client\"\r\nimport App from \"./docs/App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nconst root = createRoot(document.getElementById(\"root\")!)\r\n\r\nroot.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","export type breakOption = \"sm\" | \"md\" | \"lg\" | \"xl\"\r\nexport type ModalType = \"ask\" | \"tell\" | \"verify\"\r\n\r\nexport type StatusType = null | \"loading\" | \"success\" | \"info\" | \"warning\" | \"danger\"\r\nexport interface StatusAlert {\r\n    title?: string\r\n    alertClassName?: string\r\n    close?: boolean\r\n    detailText?: string\r\n    status?: StatusType\r\n}\r\n\r\ninterface Phrases {\r\n    [key: string]: string[]\r\n}\r\n\r\nconst phrases: Phrases = {\r\n    Cancel: [\"Cancel\", \"Abbrechen\"],\r\n    Yes: [\"Yes\", \"Ja\"],\r\n    No: [\"No\", \"Nein\"],\r\n    Message: [\"Message\", \"Nachricht\"]\r\n}\r\n\r\nexport function getPhrase(\r\n    keyword: string,\r\n    countryCode: string | undefined = undefined,\r\n    _phrases: Phrases | undefined = undefined\r\n) {\r\n    countryCode =\r\n        countryCode || navigator.language.toLowerCase().indexOf(\"de\") > -1\r\n            ? \"de-DE\"\r\n            : \"en-US\"\r\n    _phrases = _phrases || phrases\r\n\r\n    if (_phrases[keyword]) {\r\n        if (countryCode.indexOf(\"de-\") > -1) {\r\n            return _phrases[keyword][1]\r\n        } else {\r\n            return _phrases[keyword][0]\r\n        }\r\n    } else {\r\n        return keyword\r\n    }\r\n}\r\n","import React, { FormEvent, useEffect, useState, MutableRefObject, useRef } from \"react\"\r\nimport { Modal as BootstrapModal } from \"bootstrap\"\r\nimport { getPhrase, ModalType } from \"./shared\"\r\n\r\nexport interface ModalProps {\r\n    modalContent?: string\r\n    modalTitle?: string\r\n    unSetModalContent: (modalContent?: string) => void\r\n\r\n    /**\r\n     * Type of `input` depends on `type` prop and which action occured.\r\n     * When it's a string, the user entered something. When it's a boolean, the user clicked \"Yes\" or \"No\".\r\n     * When it's `null`, the user cancelled the modal.\r\n     */\r\n    onSubmit?: (input: string | boolean | null) => void\r\n    defaultInput?: string\r\n\r\n    /**\r\n     * `\"ask\"` | `\"tell\"` | `\"verify\"`\r\n     */\r\n    type: ModalType\r\n}\r\n\r\n/**\r\n * Simple modal/dialog. Designed to work as an alternative to JavaScript's native `alert()`, `prompt()` and `confirm()` functions.\r\n * It uses Bootstrap's Modal components.\r\n *\r\n * For easy use, you should use the hook `useModal` together with `ModalProvider`. See the example there.\r\n */\r\nexport default function Modal({\r\n    modalContent,\r\n    modalTitle,\r\n    unSetModalContent,\r\n    onSubmit,\r\n    defaultInput,\r\n    type\r\n}: ModalProps) {\r\n    const modalRef = useRef() as MutableRefObject<HTMLDivElement>\r\n    const [input, setInput] = useState<string>(defaultInput || \"\")\r\n    const cancel = () => {\r\n        unSetModalContent()\r\n        if (onSubmit) {\r\n            onSubmit(null)\r\n        }\r\n    }\r\n    const sayNo = () => {\r\n        unSetModalContent()\r\n        if (onSubmit) {\r\n            onSubmit(false)\r\n        }\r\n    }\r\n    const submit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        if (onSubmit) {\r\n            onSubmit(input || true)\r\n        }\r\n    }\r\n    const btnStyle = { maxWidth: \"10rem\" }\r\n\r\n    const focusFirstControl = () => {\r\n        const myModal = modalRef.current as unknown as Element\r\n        myModal.removeEventListener(\"shown.bs.modal\", focusFirstControl)\r\n        const firstControl = myModal.querySelector(\".btn, .form-control\") as HTMLElement | null\r\n        if (firstControl) {\r\n            firstControl.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setInput(defaultInput || \"\")\r\n    }, [defaultInput])\r\n\r\n    useEffect(() => {\r\n        const myModal = modalRef.current as unknown as Element\r\n        let bsModal = BootstrapModal.getInstance(myModal)\r\n\r\n        if (!bsModal) {\r\n            bsModal = new BootstrapModal(myModal)\r\n            bsModal.hide()\r\n\r\n            // When the user clicks on underlay to close the modal\r\n            myModal.addEventListener(\"hidden.bs.modal\", () => {\r\n                cancel()\r\n            })\r\n        } else {\r\n            modalContent !== undefined ? bsModal.show() : bsModal.hide()\r\n\r\n            // Will focus first button or text field inside of modal when it is shown.\r\n            // For accessibility: This way you can control the modal actions with a keyboard.\r\n            myModal.addEventListener(\"shown.bs.modal\", focusFirstControl)\r\n        }\r\n    }, [modalContent])\r\n\r\n    return (\r\n        <div className=\"modal\" ref={modalRef} tabIndex={-1}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <form onSubmit={submit}>\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">{modalTitle || getPhrase(\"Message\")}</h5>\r\n                            <button type=\"button\" className=\"btn-close\" onClick={cancel} />\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\" style={{ whiteSpace: \"pre-wrap\" }}>\r\n                            {modalContent}\r\n                            {type === \"ask\" && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mt-1\"\r\n                                    value={input}\r\n                                    onChange={({ target }) => setInput(target.value)}\r\n                                    autoFocus\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"submit\" className=\"btn btn-primary d-block w-100\" style={btnStyle}>\r\n                                {type === \"verify\" ? getPhrase(\"Yes\") : \"OK\"}\r\n                            </button>\r\n                            {(type === \"ask\" || type === \"verify\") &&\r\n                                (type === \"verify\" ? (\r\n                                    <button\r\n                                        className=\"btn btn-outline-primary d-block w-100\"\r\n                                        style={btnStyle}\r\n                                        onClick={sayNo}\r\n                                    >\r\n                                        {getPhrase(\"No\")}\r\n                                    </button>\r\n                                ) : (\r\n                                    <button\r\n                                        className=\"btn btn-outline-primary d-block w-100\"\r\n                                        style={btnStyle}\r\n                                        onClick={cancel}\r\n                                    >\r\n                                        {getPhrase(\"Cancel\")}\r\n                                    </button>\r\n                                ))}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { createContext, ReactNode, useCallback, useContext, useState } from \"react\"\r\nimport { ModalType } from \"./shared\"\r\nimport Modal from \"./Modal\"\r\n\r\nconst ModalContext = createContext({\r\n    ask: undefined as unknown as (text: string, title?: string) => Promise<string | boolean>,\r\n    tell: undefined as unknown as (text: string, title?: string) => Promise<boolean>,\r\n    verify: undefined as unknown as (text: string, title?: string) => Promise<boolean>\r\n})\r\n\r\nexport interface ModalProviderProps {\r\n    children?: ReactNode\r\n}\r\n\r\nconst ModalProvider = ({ children, ...rest }: ModalProviderProps) => {\r\n    const [type, setType] = useState<ModalType>(\"tell\")\r\n    const [modalContent, setModalContent] = useState<string | undefined>()\r\n    const [modalTitle, setModalTitle] = useState<string | undefined>()\r\n    const [defaultInput, setDefaultInput] = useState<string | undefined>()\r\n    const unSetModalContent = useCallback(() => {\r\n        setModalContent(undefined)\r\n    }, [setModalContent])\r\n\r\n    const [onSubmit, setOnSubmit] = useState<((input: string | boolean | null) => void) | undefined>()\r\n\r\n    const ask = (text: string, title?: string) => {\r\n        return new Promise((resolve: (input: string | boolean) => void) => {\r\n            setType(\"ask\")\r\n            setModalContent(text)\r\n            setModalTitle(title)\r\n            setDefaultInput(\"\")\r\n            setOnSubmit(() => (input: string | boolean) => {\r\n                resolve(input)\r\n                setModalContent(undefined)\r\n                setDefaultInput(undefined)\r\n            })\r\n        })\r\n    }\r\n\r\n    const tell = (text: string, title?: string) => {\r\n        return new Promise((resolve: (input: boolean) => void) => {\r\n            setType(\"tell\")\r\n            setModalContent(text)\r\n            setModalTitle(title)\r\n            setOnSubmit(() => (input: string | boolean) => {\r\n                resolve(input ? true : false)\r\n                setModalContent(undefined)\r\n            })\r\n        })\r\n    }\r\n\r\n    const verify = (text: string, title?: string) => {\r\n        return new Promise((resolve: (input: boolean) => void) => {\r\n            setType(\"verify\")\r\n            setModalContent(text)\r\n            setModalTitle(title)\r\n            setOnSubmit(() => (input: string | boolean) => {\r\n                resolve(input ? true : false)\r\n                setModalContent(undefined)\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ModalContext.Provider\r\n            value={{\r\n                ask,\r\n                tell,\r\n                verify\r\n            }}\r\n            {...rest}\r\n        >\r\n            {children}\r\n            <Modal\r\n                modalContent={modalContent}\r\n                modalTitle={modalTitle}\r\n                unSetModalContent={unSetModalContent}\r\n                onSubmit={onSubmit}\r\n                defaultInput={defaultInput}\r\n                type={type}\r\n            />\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nconst useModal = () => {\r\n    const context = useContext(ModalContext)\r\n    if (context === undefined) {\r\n        throw new Error(\"useModal must be used within a ModalProvider\")\r\n    }\r\n    return context\r\n}\r\n\r\nexport { ModalProvider, useModal }\r\n","import { ModalProvider, useModal } from \"../../components/ModalProvider\"\r\n\r\nfunction InsideComp() {\r\n    // Use the `useModal` hook.\r\n    const { tell, verify, ask } = useModal()\r\n\r\n    return (\r\n        <>\r\n            <p>\r\n                Allowed params for the functions <code>tell</code>, <code>verify</code> and <code>ask</code>:<br />\r\n                <code>(text: string, title?: string)</code>\r\n            </p>\r\n\r\n            <div className=\"d-flex gap-2\">\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={() => {\r\n                        tell(\"Hey, what's up\")\r\n                    }}\r\n                >\r\n                    tell\r\n                </button>\r\n\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={\r\n                        // Make sure to make your function \"async\" when using \"await\"\r\n                        async () => {\r\n                            // Use \"await\" to wait until the user enters something\r\n                            const answer = await ask(\"What is 1 + 1?\", \"Tell me the correct answer\")\r\n                            if (answer && parseInt(answer.toString()) === 2) {\r\n                                tell(\"That's correct!\")\r\n                            } else {\r\n                                tell(\"Wrong!\")\r\n                            }\r\n                        }\r\n                    }\r\n                >\r\n                    ask\r\n                </button>\r\n\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={async () => {\r\n                        const answer = await verify(\"Are you sure?\", \"Say yes or no\")\r\n                        console.log({ answer })\r\n                        if (answer === true) {\r\n                            tell(\"So, you're sure\")\r\n                        }\r\n                    }}\r\n                >\r\n                    verify\r\n                </button>\r\n\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={async () => {\r\n                        const name = await ask(\"What is your name?\")\r\n                        console.log(name)\r\n                        if (name) {\r\n                            const retVal = await tell(\"Hello, \" + name)\r\n                            console.log(retVal)\r\n\r\n                            if (await verify(\"Is everything alright?\")) {\r\n                                await tell(\"Oh, nice\")\r\n                            } else {\r\n                                await tell(\"Oh no :(\")\r\n                            }\r\n                        }\r\n                    }}\r\n                >\r\n                    Start a conversation\r\n                </button>\r\n\r\n                <br />\r\n\r\n                <button\r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={() => {\r\n                        alert(\"Hello there!\")\r\n                        if (window.confirm(\"Everything okay?\")) {\r\n                            alert(\"Alright\")\r\n                        }\r\n                    }}\r\n                >\r\n                    How a native <code>alert()</code> would look like\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n/**\r\n * Your component where you use `useModal` has to be wrapped around `<ModalProvider></ModalProvider>`.\r\n * Best practice is to wrap it around your root component.\r\n */\r\nexport default function ModalProviderExample() {\r\n    return (\r\n        <ModalProvider>\r\n            <InsideComp />\r\n        </ModalProvider>\r\n    )\r\n}\r\n","import React, { ReactNode } from \"react\"\r\nimport clsx from \"clsx\"\r\nimport { StatusAlert, StatusType } from \"./shared\"\r\n\r\nexport interface StatusProps {\r\n    alert?: StatusAlert\r\n    onUnsetAlert?: () => void\r\n    successIcon?: ReactNode\r\n    infoIcon?: ReactNode\r\n    warningIcon?: ReactNode\r\n    dangerIcon?: ReactNode\r\n    status?: StatusType\r\n}\r\n\r\nexport default function Status({\r\n    alert,\r\n    onUnsetAlert,\r\n    successIcon = \"✔\",\r\n    infoIcon = \"ℹ️\",\r\n    warningIcon = \"⚠️\",\r\n    dangerIcon = \"❌\",\r\n    status = null\r\n}: StatusProps) {\r\n    return (\r\n        <>\r\n            <div\r\n                className={clsx(\r\n                    \"blue-status-circle blue-loading blue-status-loading\",\r\n                    {\r\n                        \"d-block\": status === \"loading\" || alert && alert.status === \"loading\"\r\n                    }\r\n                )}\r\n            >\r\n                <div className=\"spinner-bounce-circle\">\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                className={clsx(\"blue-status-circle blue-status-success\", {\r\n                    \"d-flex\": status === \"success\" || alert && alert.status === \"success\"\r\n                })}\r\n            >\r\n                {successIcon}\r\n            </div>\r\n\r\n            <div\r\n                className={clsx(\"blue-status-circle blue-status-info\", {\r\n                    \"d-flex\": status === \"info\" || alert && alert.status === \"info\"\r\n                })}\r\n            >\r\n                {infoIcon}\r\n            </div>\r\n\r\n            <div\r\n                className={clsx(\"blue-status-circle blue-status-warning\", {\r\n                    \"d-flex\": status === \"warning\" || alert && alert.status === \"warning\"\r\n                })}\r\n            >\r\n                {warningIcon}\r\n            </div>\r\n\r\n            <div\r\n                className={clsx(\"blue-status-circle blue-status-danger\", {\r\n                    \"d-flex\": status === \"danger\" || alert && alert.status === \"danger\"\r\n                })}\r\n            >\r\n                {dangerIcon}\r\n            </div>\r\n\r\n            <div className=\"blue-status-alert alert\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn-close float-end mb-1\"\r\n                    aria-label=\"Close\"\r\n                />\r\n                <div className=\"alert-body\" />\r\n            </div>\r\n\r\n            {alert && (\r\n                <div\r\n                    className={clsx(\r\n                        \"blue-status-alert alert d-block\",\r\n                        alert.alertClassName,\r\n                        alert.status && `alert-${alert.status}`\r\n                    )}\r\n                >\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-close float-end mb-1 d-inline-block\"\r\n                        aria-label=\"Close\"\r\n                        onClick={onUnsetAlert}\r\n                    />\r\n                    <div className=\"alert-body\">\r\n                        {alert.title && <h2>{alert.title}</h2>}\r\n                        {alert.detailText && <span>{alert.detailText}</span>}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, { createContext, ReactNode, useContext, useState } from \"react\"\r\nimport { StatusAlert, StatusType } from \"./shared\"\r\nimport Status from \"./Status\"\r\n\r\nconst StatusContext = createContext({\r\n    setAlert: undefined as unknown as (alert: StatusAlert | null) => void,\r\n    setStatus: undefined as unknown as (status: StatusType) => void\r\n})\r\n\r\nexport interface StatusProviderProps {\r\n    children?: ReactNode\r\n    successIcon?: ReactNode\r\n    infoIcon?: ReactNode\r\n    warningIcon?: ReactNode\r\n    dangerIcon?: ReactNode\r\n}\r\n\r\nconst StatusProvider = ({\r\n    children,\r\n    successIcon,\r\n    infoIcon,\r\n    warningIcon,\r\n    dangerIcon,\r\n    ...rest\r\n}: StatusProviderProps) => {\r\n    const [alert, setAlert] = useState<StatusAlert | null>(null)\r\n    const [status, setStatus] = useState<StatusType>(null)\r\n\r\n    return (\r\n        <StatusContext.Provider\r\n            value={{\r\n                setAlert,\r\n                setStatus\r\n            }}\r\n            {...rest}\r\n        >\r\n            {children}\r\n            <Status\r\n                alert={alert || undefined}\r\n                onUnsetAlert={() => setAlert(null)}\r\n                successIcon={successIcon}\r\n                infoIcon={infoIcon}\r\n                warningIcon={warningIcon}\r\n                dangerIcon={dangerIcon}\r\n                status={status}\r\n            />\r\n        </StatusContext.Provider>\r\n    )\r\n}\r\n\r\nconst useStatus = () => {\r\n    const context = useContext(StatusContext)\r\n    if (context === undefined) {\r\n        throw new Error(\"useStatus must be used within a StatusProvider\")\r\n    }\r\n    return context\r\n}\r\n\r\nexport { useStatus, StatusProvider }\r\n","import {\r\n    CheckCircleFill,\r\n    ExclamationCircleFill,\r\n    InfoCircleFill,\r\n    XCircleFill\r\n} from \"react-bootstrap-icons\"\r\nimport { StatusProvider, useStatus } from \"../../components/StatusProvider\"\r\n\r\nfunction InsideComp() {\r\n    const { setAlert, setStatus } = useStatus()\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-1 d-flex gap-1\">\r\n                <button\r\n                    className=\"btn btn-light\"\r\n                    onClick={() =>\r\n                        setAlert({\r\n                            title: \"Hello World\",\r\n                            status: \"success\"\r\n                        })\r\n                    }\r\n                >\r\n                    Set alert\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-light\"\r\n                    onClick={() =>\r\n                        setAlert({\r\n                            title: \"Hello World\",\r\n                            status: \"danger\",\r\n                            detailText: `Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n\r\n                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.`\r\n                        })\r\n                    }\r\n                >\r\n                    Set full alert\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-light\"\r\n                    onClick={() => setAlert(null)}\r\n                >\r\n                    Unset alert\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"mb-1 d-flex gap-1\">\r\n                <button\r\n                    className=\"btn btn-light\"\r\n                    onClick={() => setStatus(\"loading\")}\r\n                >\r\n                    Show loading\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-success\"\r\n                    onClick={() => setStatus(\"success\")}\r\n                >\r\n                    Show success\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={() => setStatus(\"info\")}\r\n                >\r\n                    Show info\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-warning\"\r\n                    onClick={() => setStatus(\"warning\")}\r\n                >\r\n                    Show warning\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={() => setStatus(\"danger\")}\r\n                >\r\n                    Show danger\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"mb-1 d-flex gap-1\">\r\n                <button\r\n                    className=\"btn btn-light\"\r\n                    onClick={() => setStatus(null)}\r\n                >\r\n                    Hide status\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function StatusExample() {\r\n    return (\r\n        <StatusProvider\r\n            successIcon={<CheckCircleFill />}\r\n            infoIcon={<InfoCircleFill />}\r\n            warningIcon={<ExclamationCircleFill />}\r\n            dangerIcon={<XCircleFill />}\r\n        >\r\n            <InsideComp />\r\n        </StatusProvider>\r\n    )\r\n}\r\n","import React, { createElement, ReactNode } from \"react\"\r\n\r\nexport interface SwitchProps {\r\n    className?: string\r\n    checked?: boolean\r\n    onChange?: (event: React.ChangeEvent) => void\r\n\r\n    /**\r\n     * Sets label inside of the switch. If you set this, you should also set the className \"lg\" to make the switch larger.\r\n     */\r\n    sliderLabel?: string\r\n\r\n    /**\r\n     * You can change the type of the wrapper element. If you do, the `onChange` event might not be triggered.\r\n     */\r\n    elementType?: string\r\n\r\n    disabled?: boolean\r\n\r\n    /**\r\n     * Set prop to use the older look and feel. Will disappear in future releases.\r\n     */\r\n    legacy?: boolean\r\n\r\n    label?: ReactNode | string\r\n}\r\n\r\n/**\r\n * @deprecated\r\n * Use Bootstrap's `.form-check.form-switch` instead:\r\n * https://getbootstrap.com/docs/5.2/forms/checks-radios/#switches\r\n *\r\n * For now, this component acts as proxy for Bootstrap's Switch.\r\n * To place a label next to the switch, use the new `label` prop.\r\n *\r\n * Migrate to Blue React 8.4.0 and use legacy support: Set the `label` with a string. Or set the `legacy` prop to use the previous look and behaviour.\r\n */\r\nexport default function Switch({\r\n    className,\r\n    checked,\r\n    onChange,\r\n    sliderLabel,\r\n    disabled,\r\n    elementType = \"label\",\r\n    legacy = false,\r\n    label\r\n}: SwitchProps) {\r\n    if (legacy === true) {\r\n        return createElement(\r\n            elementType,\r\n            {\r\n                className: \"switch \" + (disabled ? \"disabled \" : \"\") + className\r\n            },\r\n            <>\r\n                <input type=\"checkbox\" checked={checked} onChange={onChange} disabled={disabled} role=\"switch\" />\r\n                <span className=\"slider round\" data-label={sliderLabel} />\r\n            </>\r\n        )\r\n    } else {\r\n        return createElement(\r\n            elementType,\r\n            {\r\n                className: \"form-check form-switch \" + (disabled ? \"disabled \" : \"\") + className\r\n            },\r\n            <>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    role=\"switch\"\r\n                    className=\"form-check-input\"\r\n                    checked={checked}\r\n                    onChange={onChange}\r\n                    disabled={disabled}\r\n                />\r\n                <span className=\"form-check-label\">{label}</span>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface DocumentViewProps {\r\n    /**\r\n     * Source of the content (URL)\r\n     */\r\n    src?: string\r\n\r\n    /**\r\n     * Instead of a source, you can also set the content directly (HTML)\r\n     */\r\n    content?: string\r\n\r\n    /**\r\n     * MIME type of the content (e.g. \"application/pdf\")\r\n     */\r\n    mimeType: string\r\n\r\n    /**\r\n     * Label for the button to display\r\n     */\r\n    showDocumentLabel: string\r\n}\r\n\r\n/**\r\n * Tries to display content in an iframe. When the content can't displayed in an iframe, it will show a download button instead.\r\n */\r\nexport default function DocumentView({\r\n    content,\r\n    mimeType,\r\n    src = \"about:blank\",\r\n    showDocumentLabel = \"Show document\"\r\n}: DocumentViewProps) {\r\n    const uniqueId = \"document-view-\" + Utilities.guid()\r\n\r\n    const supportsIframe = () =>\r\n        mimeType === \"application/pdf\" ||\r\n        mimeType === \"image/png\" ||\r\n        mimeType === \"image/jpeg\" ||\r\n        mimeType === \"image/gif\" ||\r\n        mimeType === \"image/tiff\" ||\r\n        mimeType === \"image/bmp\" ||\r\n        mimeType === \"image/x-bmp\" ||\r\n        mimeType === \"image/x-ms-bmp\" ||\r\n        mimeType === \"text/plain\" ||\r\n        mimeType === \"text/html\"\r\n\r\n    useEffect(() => {\r\n        if (supportsIframe()) {\r\n            Utilities.startLoading()\r\n\r\n            if (content) {\r\n                let iframe = document.getElementById(\r\n                    uniqueId\r\n                ) as HTMLIFrameElement\r\n\r\n                if (iframe && iframe.contentWindow) {\r\n                    iframe.contentWindow.document.open()\r\n                    iframe.contentWindow.document.write(content)\r\n                    iframe.contentWindow.document.close()\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {supportsIframe() ? (\r\n                <iframe\r\n                    id={uniqueId}\r\n                    className=\"document-view-iframe\"\r\n                    src={src}\r\n                    onLoad={({ target }: any) => {\r\n                        Utilities.finishLoading()\r\n\r\n                        const iframeContent =\r\n                            target.contentDocument ||\r\n                            target.contentWindow.document\r\n\r\n                        if (mimeType.indexOf(\"image/\") > -1) {\r\n                            let image = iframeContent.querySelector(\"img\")\r\n\r\n                            if (image) {\r\n                                if (image.offsetWidth > image.offsetHeight) {\r\n                                    image.style.width = \"100%\"\r\n                                } else {\r\n                                    image.style.height = \"100%\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            ) : (\r\n                <a href={src} className=\"btn btn-secondary btn-lg d-block\">\r\n                    {showDocumentLabel}\r\n                </a>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport DocumentView from \"../../components/DocumentView\"\r\n\r\nclass DocumentViewExample extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DocumentView\r\n                    src=\"/blue-react/v8/example-document.pdf\"\r\n                    mimeType=\"application/pdf\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DocumentViewExample\r\n","let Utilities = {}\r\n\r\nUtilities.hasClass = function (el, className) {\r\n    if (el.classList) return el.classList.contains(className)\r\n    else return !!el.className.match(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"))\r\n}\r\n\r\nUtilities.addClass = function (el, className) {\r\n    if (el.classList) el.classList.add(className)\r\n    else if (!Utilities.hasClass(el, className)) el.className += \" \" + className\r\n}\r\n\r\nUtilities.removeClass = function (el, className) {\r\n    if (el.classList) el.classList.remove(className)\r\n    else if (Utilities.hasClass(el, className))\r\n        el.className = el.className.replace(new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"), \" \")\r\n}\r\n\r\nUtilities.toggleClass = function (element, className) {\r\n    if (!element || !className) {\r\n        return\r\n    }\r\n\r\n    var classString = element.className,\r\n        nameIndex = classString.indexOf(className)\r\n    if (nameIndex === -1) {\r\n        classString += \" \" + className\r\n    } else {\r\n        classString = classString.substr(0, nameIndex) + classString.substr(nameIndex + className.length)\r\n    }\r\n    element.className = classString\r\n}\r\n\r\nUtilities.startLoading = function () {\r\n    document.querySelectorAll(\".blue-loading\")[0].style.display = \"block\"\r\n}\r\n\r\nUtilities.finishLoading = function () {\r\n    document.querySelectorAll(\".blue-loading\")[0].style.display = \"\"\r\n}\r\n\r\nUtilities.showSuccess = function () {\r\n    document.querySelectorAll(\".blue-status-success\")[0].style.display = \"flex\"\r\n}\r\n\r\nUtilities.hideSuccess = function () {\r\n    document.querySelectorAll(\".blue-status-success\")[0].style.display = \"\"\r\n}\r\n\r\nUtilities.toggleActions = function () {\r\n    this.toggleClass(document.querySelector(\".blue-wrapper\"), \"active\")\r\n    this.toggleClass(document.querySelector(\".blue-layout\"), \"wrapper-in\")\r\n\r\n    var els = document.querySelectorAll(\".blue-actions\")\r\n    for (var i = 0; i < els.length; i++) {\r\n        this.toggleClass(els[i], \"open\")\r\n    }\r\n}\r\n\r\nUtilities.resetAlertMessage = function (alertClassName = \"info\") {\r\n    const alertElement = document.querySelectorAll(\".blue-status-alert\")[0]\r\n    document.querySelectorAll(\".blue-status-\" + alertClassName)[0].style.display = \"\"\r\n    alertElement.style.display = \"\"\r\n    this.removeClass(alertElement, \"alert-\" + (alertClassName === \"loading\" ? \"info\" : alertClassName))\r\n}\r\n\r\nUtilities.setAlertMessage = function (message, alertClassName = \"info\", close, detailText) {\r\n    const alertElement = document.querySelectorAll(\".blue-status-alert\")[0]\r\n\r\n    if (alertClassName.indexOf(\"alert-\") > -1) {\r\n        alertClassName = alertClassName.replace(\"alert-\", \"\")\r\n    }\r\n\r\n    document.querySelectorAll(\".blue-status-\" + alertClassName)[0].style.display = \"flex\"\r\n    alertElement.style.display = \"block\"\r\n    this.addClass(alertElement, \"alert-\" + (alertClassName === \"loading\" ? \"info\" : alertClassName))\r\n\r\n    alertElement.querySelector(\".alert-body\").innerHTML = `<h2>` + message + `</h2>`\r\n    if (detailText) {\r\n        alertElement.querySelector(\".alert-body\").innerHTML += `<span>` + detailText + `</span>`\r\n    }\r\n\r\n    if (close) {\r\n        alertElement.querySelector(\".btn-close\").style.display = \"inline-block\"\r\n        alertElement.querySelector(\".btn-close\").onclick = () => {\r\n            this.resetAlertMessage(alertClassName)\r\n        }\r\n    } else {\r\n        alertElement.querySelector(\".btn-close\").style.display = \"none\"\r\n    }\r\n}\r\n\r\nUtilities.guid = function () {\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1)\r\n    }\r\n    return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4()\r\n}\r\n\r\nUtilities.scrollToTop = () => {\r\n    const routerPage = document.querySelector(\".router-page.active\")\r\n\r\n    routerPage.scroll({\r\n        behavior: \"smooth\",\r\n        left: 0,\r\n        top: 0\r\n    })\r\n}\r\n\r\nUtilities.fetchData = function (input, init = undefined, showErrorDetail = true, onError = undefined) {\r\n    return fetch(input, init)\r\n        .then((response) => {\r\n            if (!response.ok) throw response\r\n            return response\r\n        })\r\n        .catch((reason) => {\r\n            if (reason.text) {\r\n                reason.text().then((errorMessage) => {\r\n                    Utilities.setAlertMessage(\r\n                        `${reason.status} - ${reason.statusText}`,\r\n                        \"danger\",\r\n                        true,\r\n                        showErrorDetail ? errorMessage : undefined\r\n                    )\r\n\r\n                    if (onError) {\r\n                        onError(errorMessage, reason)\r\n                    }\r\n                })\r\n            }\r\n            throw reason\r\n        })\r\n}\r\n\r\nexport default Utilities\r\n","import React, { MutableRefObject, useEffect, useRef } from \"react\"\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nexport function useOutside(\r\n    ref: MutableRefObject<any>,\r\n    callback?: (event: MouseEvent) => void\r\n) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (\r\n                ref.current &&\r\n                !ref.current.contains(event.target) &&\r\n                callback\r\n            ) {\r\n                callback(event)\r\n            }\r\n        }\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside)\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside)\r\n        }\r\n    }, [ref])\r\n}\r\n\r\nexport interface OutsideProps {\r\n    children: any\r\n    className?: string\r\n    onClickOutside?: (event: MouseEvent) => void\r\n}\r\n\r\n/**\r\n * Component that fires an event if you click outside of it\r\n */\r\nexport default function Outside({\r\n    children,\r\n    className,\r\n    onClickOutside\r\n}: OutsideProps) {\r\n    const wrapperRef = useRef(null)\r\n    useOutside(wrapperRef, onClickOutside)\r\n\r\n    return (\r\n        <div ref={wrapperRef} className={className}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport interface CaretProps {\r\n    /**\r\n     * Indicates if open or not.\r\n     */\r\n    open?: boolean\r\n\r\n    /**\r\n     * By default the caret points to the right when closed. Set mirrored and it will point to the left.\r\n     */\r\n    mirrored?: boolean\r\n\r\n    className?: string\r\n}\r\n\r\n/**\r\n * Caret icon component.\r\n */\r\nexport default function Caret({ open, mirrored, className }: CaretProps) {\r\n    return (\r\n        <span\r\n            className={\r\n                \"caret \" +\r\n                (open ? \" caret-open \" : \"\") +\r\n                (mirrored ? \" caret-mirrored \" : \"\") +\r\n                className\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React, { ReactNode, useEffect, useState } from \"react\"\r\nimport MenuItem from \"./MenuItem\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface SearchProps {\r\n    autoFocus?: boolean\r\n\r\n    /**\r\n     * Is component inside of a page?\r\n     */\r\n    body?: boolean\r\n\r\n    className?: string\r\n    icon?: any\r\n    onChange?: (event: React.ChangeEvent) => void\r\n    onSubmit?: (event: React.FormEvent) => void\r\n    placeholder?: string\r\n\r\n    /**\r\n     * Allow reset?\r\n     */\r\n    reset?: boolean\r\n\r\n    /**\r\n     * Define custom icon for the reset button.\r\n     */\r\n    resetIcon?: any\r\n\r\n    /**\r\n     * Is component inside of the sidebar?\r\n     */\r\n    sidebar?: boolean\r\n\r\n    value?: string\r\n\r\n    children?: ReactNode\r\n    id?: string\r\n}\r\n\r\n/**\r\n * A search bar that can be placed to the sidebar or on a page.\r\n */\r\nexport default function Search(props: SearchProps) {\r\n    const { autoFocus, body, className, icon, onChange, onSubmit, placeholder, reset, resetIcon, sidebar, id } = props\r\n    const SearchControlId = id || \"blue-search-control-\" + Utilities.guid()\r\n\r\n    const [value, setValue] = useState<string>(props.value || \"\")\r\n    const [focus, setFocus] = useState<boolean>(false)\r\n\r\n    const toggleSidebar = () => {\r\n        if (sidebar) {\r\n            document.dispatchEvent(window.toggleSidebarEvent)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.value) setValue(props.value)\r\n    }, [props.value])\r\n\r\n    return (\r\n        <form\r\n            className={\r\n                \"blue-search \" +\r\n                (body ? \"blue-search-body \" : \"\") +\r\n                (focus ? \"focus \" : \"\") +\r\n                (sidebar ? \"blue-search-sidebar \" : \"\") +\r\n                className\r\n            }\r\n            onSubmit={(event) => {\r\n                event.preventDefault()\r\n                toggleSidebar()\r\n                if (onSubmit) onSubmit(event)\r\n            }}\r\n        >\r\n            <div className=\"blue-search-input-group input-group\">\r\n                <span className=\"input-group-text\" onClick={() => document.getElementById(SearchControlId)?.focus()}>\r\n                    {icon || (\r\n                        <span>\r\n                            <svg\r\n                                width=\"1em\"\r\n                                height=\"1em\"\r\n                                viewBox=\"0 0 16 16\"\r\n                                className=\"bi bi-search mt-n1\"\r\n                                fill=\"currentColor\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"\r\n                                />\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"\r\n                                />\r\n                            </svg>\r\n                        </span>\r\n                    )}\r\n                </span>\r\n\r\n                {props.children || (\r\n                    <input\r\n                        type=\"search\"\r\n                        value={value}\r\n                        onChange={(event) => {\r\n                            setValue(event.target.value)\r\n                            if (onChange) onChange(event)\r\n                        }}\r\n                        id={SearchControlId}\r\n                        className=\"blue-search-control form-control default input-lg\"\r\n                        placeholder={placeholder}\r\n                        autoFocus={autoFocus}\r\n                        style={{\r\n                            zIndex: body ? 0 : undefined\r\n                        }}\r\n                        onFocus={() => setFocus(true)}\r\n                        onBlur={() => setFocus(false)}\r\n                    />\r\n                )}\r\n\r\n                {reset && value.length > 0 && (\r\n                    <div className=\"input-group-btn\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"blue-search-reset-btn btn btn-link\"\r\n                            onClick={() => {\r\n                                setValue(\"\")\r\n                                document.getElementById(SearchControlId)?.focus()\r\n                                if (onChange)\r\n                                    onChange({\r\n                                        target: {\r\n                                            value: \"\"\r\n                                        }\r\n                                    } as any)\r\n                            }}\r\n                        >\r\n                            {resetIcon || (\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"1em\"\r\n                                    height=\"1em\"\r\n                                    fill=\"currentColor\"\r\n                                    className=\"bi bi-x mt-n1\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                >\r\n                                    <path d=\"M4.646 4.646a.5.5 0 01.708 0L8 7.293l2.646-2.647a.5.5 0 01.708.708L8.707 8l2.647 2.646a.5.5 0 01-.708.708L8 8.707l-2.646 2.647a.5.5 0 01-.708-.708L7.293 8 4.646 5.354a.5.5 0 010-.708z\"></path>\r\n                                </svg>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {sidebar && (\r\n                <MenuItem\r\n                    href=\"#\"\r\n                    className=\"blue-search-btn\"\r\n                    icon={icon}\r\n                    onClick={(event) => {\r\n                        event.preventDefault()\r\n                        toggleSidebar()\r\n                        setTimeout(() => {\r\n                            ;(document.querySelector(\".blue-search-control\") as HTMLInputElement | null)?.select()\r\n                        }, 200)\r\n                    }}\r\n                />\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n"],"sourceRoot":""}