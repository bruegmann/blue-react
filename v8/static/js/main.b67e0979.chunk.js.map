{"version":3,"sources":["components/MenuItem.tsx","docs/examples sync /^/.*/.tsx$","docs/examples sync /^/.*/.js$","docs/examples/ActionMenu.js","docs/examples/Caret.js","docs/examples/Search.js","docs/examples/Switch.js","components/Outside.tsx","components/Layout.tsx","components/Page.tsx","components/Body.tsx","docs/images/blue.svg","docs/Global.ts","docs/components/ReactIcon.tsx","docs/components/VersionToggle.tsx","docs/components/Footer.tsx","docs/components/IntroductionSections.tsx","docs/images/stackblitz.png","docs/components/StackblitzEmbed.tsx","docs/pages/HomePage.tsx","components/SidebarMenu.tsx","docs/components/BodyRounded.tsx","docs/components/ComponentDocs.tsx","docs/pages/ComponentPage.tsx","components/Intro.tsx","docs/pages/IntroDemoPage.tsx","docs/components/NormalScrollbarDemo.tsx","docs/components/HashLink.tsx","docs/pages/UtilitiesPage.tsx","components/HeaderTitle.tsx","docs/components/Recipe.tsx","docs/pages/RecipesPage.tsx","components/Header.tsx","components/ActionMenu.tsx","docs/pages/ActionMenuExamplePage.tsx","docs/App.tsx","serviceWorker.ts","index.tsx","components/shared.ts","components/Modal.tsx","components/ModalProvider.tsx","docs/examples/ModalProvider.tsx","components/Status.tsx","components/StatusProvider.tsx","docs/examples/Status.tsx","components/DocumentView.tsx","docs/examples/DocumentView.js","components/Caret.tsx","components/Switch.tsx","components/Utilities.js","components/Search.tsx"],"names":["MenuItem","props","useState","showDropdown","setShowDropdown","active","setActive","checkActive","href","window","location","hash","indexOf","isHome","useEffect","addEventListener","undefined","icon","iconForActive","className","isActive","children","passingProps","id","Utilities","guid","removeFromAttrs","Object","keys","forEach","key","includes","createElement","elementType","label","onClick","event","preventDefault","scrollToTop","onClickAttached","clsx","hasIconForActive","open","mirrored","supportOutside","dropdownClassName","onClickOutside","target","hasClass","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","ActionMenuExample","isChecked","setIsChecked","style","width","innerWidth","checked","onChange","sliderLabel","to","rel","src","process","title","CaretExample","state","isOpen","setState","this","React","Component","SearchExample","search","body","value","onSubmit","alert","placeholder","reset","SwitchExample","Outside","ref","callback","wrapperRef","useRef","handleClickOutside","current","contains","document","removeEventListener","toggleSidebarEvent","CustomEvent","Layout","defaultMatch","eventListeners","blueLayoutRef","sidebarIn","match","history","hashHistory","blockRouting","hideSidebar","bind","initMatch","me","toggleSidebar","xPos","touches","pageX","onHashChange","prevProps","prevState","eventListener","pageId","newMatch","replace","split","filter","n","unrouteable","push","concat","param1","param2","param3","hideSidebarMenu","expandSidebar","disableHeaders","type","sidebarToggleIconComponent","pages","page","name","component","statusIcons","success","info","warning","danger","disableTitleSet","Page","hasHeader","setHasHeader","elementRef","headerElement","querySelector","titleElement","innerText","Body","containerClass","hasActions","rest","pageBodyClassName","break","logo","appTitle","ReactIcon","xmlns","fillRule","strokeLinejoin","strokeMiterlimit","clipRule","viewBox","fill","height","d","transform","cx","cy","r","VersionToggle","show","setShow","dropdownRef","myElement","bsDropdown","Dropdown","getInstance","hide","minWidth","Footer","Date","getFullYear","IntroductionSections","appCode","setAppCode","pageCode","setPageCode","scssCode","setScssCode","fetchFromGitHub","path","a","url","fetch","json","ghContent","content","decoded","atob","fetchAppCode","sections","syntaxHighlighterStyle","language","s","i","encodeURIComponent","StackblitzEmbed","loadIframe","setLoadIframe","backgroundImage","image","packageJson","require","HomePage","version","alt","SidebarMenu","hasShadow","setHasShadow","updateDimensions","innerHeight","blueAppSidebar","scrollHeight","clientHeight","scrollTop","sidebarClass","sidebarStyle","topContent","menuClass","menuStyle","bottomContent","BodyRounded","classNameTop","classNameBottom","bodyProps","ComponentDocs","ExampleComponent","comp","displayName","ex","text","standalone","prepareForMarkdown","description","j","defaultValue","tsType","raw","exampleCode","scrollTo","console","log","docs","ComponentPage","selectedComponent","useParams","setValue","components","setComponents","array_docs","values","routerPageElement","zIndex","Search","arr","target_value","toLowerCase","featured","hideToggleAction","light","mimeType","navItemClassName","onToggle","showDocumentLabel","display_Name","some","val","length","maxHeight","index","Intro","logoMaxWidth","maxWidth","IntroDemoPage","dangerouslySetInnerHTML","__html","NormalScrollbarDemo","showModal","setShowModal","toggleShowModal","Modal","toggle","ModalHeader","multiple","HashLink","utilitiesFunctions","definition","demo","startLoading","finishLoading","showSuccess","hideSuccess","setAlertMessage","resetAlertMessage","UtilitiesPage","didScroll","sort","b","fun","HeaderTitle","keepAppTitle","sidebar","uniqueId","setDocumentTitle","element","titlePaths","trim","renderers","Recipe","recipe","markdown","setMarkdown","fetchRecipe","download_url","source","sourceUri","html_url","transformImageUri","uri","github","org","repo","filename","RecipesPage","recipes","setRecipes","activeRecipe","setActiveRecipe","fetchRecipes","contents","Array","isArray","c","endsWith","sha","Header","ActionMenu","toggleIcon","_break","actionsToggledIn","setActionsToggledIn","toggleActions","initToggleStatus","appWrapper","onclick","querySelectorAll","link","ActionMenuExamplePage","breakProp","setBreakProp","htmlFor","App","basename","NavLink","exact","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","phrases","Cancel","Yes","No","Message","getPhrase","keyword","countryCode","_phrases","modalContent","unSetModalContent","defaultInput","modalRef","input","setInput","cancel","btnStyle","myModal","bsModal","BootstrapModal","tabIndex","autoFocus","ModalContext","createContext","ask","tell","verify","ModalProvider","setType","setModalContent","setDefaultInput","useCallback","setOnSubmit","Provider","Promise","InsideComp","context","useContext","useModal","answer","parseInt","toString","retVal","ModalProviderExample","Status","onUnsetAlert","successIcon","infoIcon","warningIcon","dangerIcon","status","alertClassName","detailText","StatusContext","setAlert","setStatus","StatusProvider","useStatus","StatusExample","DocumentView","supportsIframe","iframe","contentWindow","write","close","onLoad","iframeContent","contentDocument","offsetWidth","offsetHeight","DocumentViewExample","Caret","Switch","disabled","el","classList","RegExp","add","remove","classString","nameIndex","substr","display","toggleClass","els","alertElement","removeClass","addClass","innerHTML","s4","Math","floor","random","substring","scroll","behavior","left","top","init","showErrorDetail","onError","response","ok","reason","errorMessage","statusText","resetIcon","SearchControlId","focus","setFocus","dispatchEvent","onFocus","onBlur","setTimeout","select"],"mappings":"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","file":"static/js/main.b67e0979.chunk.js","sourcesContent":["import clsx from \"clsx\"\r\nimport React, { createElement, useEffect, useState } from \"react\"\r\nimport Caret from \"./Caret\"\r\nimport Outside from \"./Outside\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface MenuItemProps {\r\n    /**\r\n     * Sets `to` prop, e.g. when you use the `NavLink` component from React Router.\r\n     */\r\n    to?: string\r\n\r\n    /**\r\n     * Prop for components by React Router.\r\n     */\r\n    exact?: boolean\r\n\r\n    href?: string\r\n    onClick?: (event: React.MouseEvent) => void\r\n\r\n    /**\r\n     * Will be fired after `onClick`\r\n     */\r\n    onClickAttached?: (event: React.MouseEvent) => void\r\n\r\n    /**\r\n     * Icon component or a class name.\r\n     */\r\n    icon?: any\r\n\r\n    /**\r\n     * Icon component or a class name when the MenuItem is active.\r\n     */\r\n    iconForActive?: any\r\n\r\n    /**\r\n     * Label of the link.\r\n     */\r\n    label?: any\r\n\r\n    /**\r\n     * Should be set as active.\r\n     */\r\n    isActive?: boolean\r\n\r\n    /**\r\n     * When using Blue React's routing system: define this link as home page link.\r\n     */\r\n    isHome?: boolean\r\n\r\n    /**\r\n     * Extends class name of the dropdown menu.\r\n     */\r\n    dropdownClassName?: string\r\n\r\n    /**\r\n     * Set children to create a nested `MenuItem` as a dropdown.\r\n     */\r\n    children?: any\r\n\r\n    /**\r\n     * Defines class name.\r\n     */\r\n    className?: any\r\n\r\n    /**\r\n     * Defines dropdown status from outside.\r\n     */\r\n    showDropdown?: boolean\r\n\r\n    /**\r\n     * Close on click outside.\r\n     */\r\n    supportOutside?: boolean\r\n\r\n    /**\r\n     * By default, MenuItem is a `\"button\"</button>. If you set a `href`, it's a `\"a\"`.\r\n     * If you want to have it another type, you can pass a component reference with this prop (e.g. `Link`).\r\n     */\r\n    elementType?: any\r\n\r\n    target?: string\r\n    rel?: string\r\n    title?: string\r\n}\r\n\r\n/**\r\n * Link, button or custom component for Sidebar, Actions or ActionMenu\r\n */\r\nexport default function MenuItem(props: MenuItemProps) {\r\n    const [showDropdown, setShowDropdown] = useState<boolean>(false)\r\n    const [active, setActive] = useState<boolean>(false)\r\n\r\n    const checkActive = () => {\r\n        setActive(\r\n            (props.href && window.location.hash.indexOf(props.href) > -1) ||\r\n                (props.isHome &&\r\n                    (window.location.hash === \"\" ||\r\n                        window.location.hash === \"#/\"))\r\n                ? true\r\n                : false\r\n        )\r\n    }\r\n\r\n    const onClick = (event: MouseEvent) => {\r\n        if (props.href === \"#\") {\r\n            event.preventDefault()\r\n        }\r\n\r\n        if (props.onClick) {\r\n            props.onClick(event as any)\r\n        }\r\n\r\n        if (props.children) {\r\n            setShowDropdown(!showDropdown)\r\n        }\r\n\r\n        // When user clicks again on active menu item, scroll to top of page\r\n        if (props.href && props.href === window.location.hash) {\r\n            Utilities.scrollToTop()\r\n        }\r\n\r\n        if (props.onClickAttached !== undefined) {\r\n            props.onClickAttached(event as any)\r\n        }\r\n    }\r\n\r\n    const onClickOutside = ({ target }: MouseEvent) => {\r\n        // Don't trigger when clicking on MenuItem\r\n        if (\r\n            !Utilities.hasClass(target, \"blue-menu-item-dropdown-toggle\") &&\r\n            !Utilities.hasClass(target, \"blue-menu-item-label\")\r\n        ) {\r\n            setShowDropdown(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkActive()\r\n        window.addEventListener(\"hashchange\", () => {\r\n            checkActive()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.showDropdown !== undefined)\r\n            setShowDropdown(props.showDropdown)\r\n    }, [props.showDropdown])\r\n\r\n    const className =\r\n        \"blue-menu-item btn\" +\r\n        (props.isActive ? \" active\" : \"\") +\r\n        (props.className ? \" \" + props.className : \"\") +\r\n        (props.children ? \" blue-menu-item-dropdown-toggle\" : \"\")\r\n\r\n    let icon, iconForActive\r\n\r\n    if (typeof props.icon === \"string\") {\r\n        // is className\r\n        icon = (\r\n            <span\r\n                className={\r\n                    props.icon +\r\n                    (props.children ? \" blue-menu-item-dropdown-icon\" : \"\")\r\n                }\r\n            />\r\n        )\r\n    } else {\r\n        // is element / component\r\n        icon = props.icon\r\n    }\r\n\r\n    if (typeof props.iconForActive === \"string\") {\r\n        // is className\r\n        iconForActive = (\r\n            <span\r\n                className={\r\n                    props.iconForActive +\r\n                    (props.children ? \" blue-menu-item-dropdown-icon\" : \"\")\r\n                }\r\n            />\r\n        )\r\n    } else {\r\n        // is element / component\r\n        iconForActive = props.iconForActive\r\n    }\r\n\r\n    let passingProps = {\r\n        id: \"blue-action-menu-item-\" + Utilities.guid()\r\n    } as { [key: string]: any }\r\n\r\n    const removeFromAttrs = [\r\n        \"isActive\",\r\n        \"isHome\",\r\n        \"children\",\r\n        \"dropdownClassName\",\r\n        \"showDropdown\",\r\n        \"supportOutside\",\r\n        \"elementType\"\r\n    ]\r\n\r\n    Object.keys(props).forEach((key) => {\r\n        if (!removeFromAttrs.includes(key)) {\r\n            passingProps[key] = (props as { [key: string]: any })[key]\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {createElement(\r\n                props.elementType || (props.href ? \"a\" : \"button\"),\r\n                {\r\n                    ...passingProps,\r\n                    className:\r\n                        className +\r\n                        (props.isActive || active ? \" active\" : \"\") +\r\n                        (props.label ? \" has-label\" : \"\"),\r\n                    onClick\r\n                },\r\n                <>\r\n                    <span\r\n                        className={clsx(\"blue-menu-item-icon\", {\r\n                            hasIconForActive: iconForActive\r\n                        })}\r\n                    >\r\n                        {icon}\r\n                    </span>\r\n                    {iconForActive && (\r\n                        <span className=\"blue-menu-item-icon iconForActive\">\r\n                            {iconForActive}\r\n                        </span>\r\n                    )}\r\n                    {props.label && (\r\n                        <span className=\"blue-menu-item-label text-truncate\">\r\n                            {props.label}\r\n                        </span>\r\n                    )}\r\n                    {props.children && (\r\n                        <Caret\r\n                            open={showDropdown}\r\n                            mirrored\r\n                            className=\"blue-menu-item-dropdown-caret mt-2\"\r\n                        />\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            {showDropdown &&\r\n                (props.supportOutside ? (\r\n                    <Outside\r\n                        className={`blue-menu-item-dropdown ${props.dropdownClassName}`}\r\n                        onClickOutside={onClickOutside}\r\n                    >\r\n                        {props.children}\r\n                    </Outside>\r\n                ) : (\r\n                    <div\r\n                        className={`blue-menu-item-dropdown ${props.dropdownClassName}`}\r\n                    >\r\n                        {props.children}\r\n                    </div>\r\n                ))}\r\n        </>\r\n    )\r\n}\r\n","var map = {\n\t\"./ModalProvider.tsx\": 477,\n\t\"./Status.tsx\": 478\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 462;","var map = {\n\t\"./ActionMenu.js\": 464,\n\t\"./Caret.js\": 466,\n\t\"./DocumentView.js\": 479,\n\t\"./Search.js\": 467,\n\t\"./Switch.js\": 468\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 463;","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Switch from \"../../components/Switch\"\n\nfunction ActionMenuExample() {\n    const [isChecked, setIsChecked] = useState(false)\n    const toggleIsChecked = () => setIsChecked(!isChecked)\n\n    const style = {\n        width: isChecked && window.innerWidth > 600 ? \"600px\" : \"\"\n    }\n\n    return (\n        <div>\n            <Switch\n                className=\"lg me-3\"\n                checked={isChecked}\n                onChange={toggleIsChecked}\n                sliderLabel={isChecked ? \"Mobile\" : \"PC\"}\n            />\n\n            <p>\n                <Link\n                    to=\"/action-menu-example\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Open in new tab\n                </Link>\n            </p>\n\n            <div className=\"ratio ratio-16x9\">\n                <iframe\n                    src={`${process.env.PUBLIC_URL}/action-menu-example`}\n                    style={style}\n                    title=\"Actions Demo page\"\n                />\n                {/**\n                     * This is how the Code looks like: \n                    import React from \"react\"\n                    import {Page, Body, Header, Actions, MenuItem} from \"blue-react\"\n                    \n                    export const ActionMenuExamplePage = () => {\n                        return (\n                            <Page hasActions={true}>\n                                <Header>\n                                </Header>\n                                <Actions>\n                                    <MenuItem\n                                        icon={\n                                            <svg\n                                                width=\"1em\"\n                                                height=\"1em\"\n                                                viewBox=\"0 0 16 16\"\n                                                className=\"bi bi-bag-fill\"\n                                                fill=\"currentColor\"\n                                                xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path\n                                                    d=\"M1 4h14v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4zm7-2.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\"\n                                                />\n                                            </svg>\n                                        }\n                                        label=\"Test\"\n                                    ></MenuItem>\n                                    <MenuItem\n                                        icon={\n                                            <svg\n                                                width=\"1em\"\n                                                height=\"1em\"\n                                                viewBox=\"0 0 16 16\"\n                                                className=\"bi bi-bell-fill\"\n                                                fill=\"currentColor\"\n                                                xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path\n                                                    d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"\n                                                />\n                                            </svg>\n                                        }\n                                        label=\"Test2\"\n                                    >  </MenuItem>\n                                </Actions>\n                                <Body>...</Body>\n                            </Page>\n                        )\n                    }\n                    */}\n            </div>\n        </div>\n    )\n}\n\nexport default ActionMenuExample\n","import React from \"react\"\nimport Caret from \"../../components/Caret\"\n\nclass CaretExample extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <button\n                    className=\"btn btn-secondary\"\n                    onClick={() =>\n                        this.setState({ isOpen: !this.state.isOpen })\n                    }\n                >\n                    <Caret open={this.state.isOpen} />{\" \"}\n                    <span>Click to toggle the caret</span>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CaretExample\n","import React from \"react\"\nimport Search from \"../../components/Search\"\n\nclass SearchExample extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            search: \"\"\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Search\n                    body\n                    className=\"w-50\"\n                    onChange={({ target }) =>\n                        this.setState({ search: target.value })\n                    }\n                    onSubmit={() => alert(\"Do form submit now!\")}\n                    placeholder=\"Begin typing...\"\n                    reset\n                    value={this.state.search}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SearchExample\n","import React from \"react\"\nimport Switch from \"../../components/Switch\"\n\nclass SwitchExample extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            isChecked: true\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Switch\n                    className=\"lg\"\n                    checked={this.state.isChecked}\n                    onChange={() =>\n                        this.setState({ isChecked: !this.state.isChecked })\n                    }\n                    sliderLabel={this.state.isChecked ? \"Yay🎉\" : \"😒\"}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SwitchExample\n","import React, { MutableRefObject, useEffect, useRef } from \"react\"\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nexport function useOutside(\n    ref: MutableRefObject<any>,\n    callback?: (event: MouseEvent) => void\n) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event: MouseEvent) {\n            if (\n                ref.current &&\n                !ref.current.contains(event.target) &&\n                callback\n            ) {\n                callback(event)\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside)\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    }, [ref])\n}\n\nexport interface OutsideProps {\n    children: any\n    className?: string\n    onClickOutside?: (event: MouseEvent) => void\n}\n\n/**\n * Component that fires an event if you click outside of it\n */\nexport default function Outside({\n    children,\n    className,\n    onClickOutside\n}: OutsideProps) {\n    const wrapperRef = useRef(null)\n    useOutside(wrapperRef, onClickOutside)\n\n    return (\n        <div ref={wrapperRef} className={className}>\n            {children}\n        </div>\n    )\n}\n","import React, { Component, CSSProperties } from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\ndeclare global {\r\n    interface Window {\r\n        blueLayoutRef: any\r\n        toggleSidebarEvent: any\r\n    }\r\n}\r\n\r\nwindow.toggleSidebarEvent = new CustomEvent(\"toggleSidebar\")\r\n\r\nexport interface LayoutProps {\r\n    id?: string\r\n    sidebarIn?: boolean\r\n    style?: CSSProperties\r\n    /**\r\n     * Sidebar is automatically expanded on wider views.\r\n     */\r\n    expandSidebar?: boolean\r\n\r\n    /**\r\n     * Disables sidebar.\r\n     */\r\n    hideSidebarMenu?: boolean\r\n\r\n    /**\r\n     * Registers pages for the built-in routing system. Example: `[{name: \"home\", component: <HomePage />}]`\r\n     */\r\n    pages?: { name: string; component: JSX.Element }[]\r\n\r\n    /**\r\n     * When `true`, always the \"home\" route will be rendered.\r\n     */\r\n    unrouteable?: boolean\r\n\r\n    /**\r\n     * Extends `className`.\r\n     */\r\n    className?: string\r\n\r\n    /**\r\n     * By default, the document title will automatically set. Set this prop to `true` to disable this behaviour.\r\n     */\r\n    disableTitleSet?: boolean\r\n\r\n    /**\r\n     * If you don't use blueicon, you can define another icon element for the sidebar toggle button.\r\n     */\r\n    sidebarToggleIconComponent?: any\r\n\r\n    /**\r\n     * Will replace status icons with custom ones. This will also overwrite the `useBlueicons` option.\r\n     * This can be a SVG component or a normal element component.\r\n     */\r\n    statusIcons?: {\r\n        danger: any\r\n        info: any\r\n        success: any\r\n        warning: any\r\n    }\r\n\r\n    /**\r\n     * Disables the header bars on pages.\r\n     */\r\n    disableHeaders?: boolean\r\n\r\n    /**\r\n     * Define a function, that will be fired when switching routes. When your function returns `true`, the default route behaviour will be blocked.\r\n     * You can use something like `window.blueLayoutRef.setState({ blockRouting: onHashChange })` globally to set the value from anywhere in your app.\r\n     */\r\n    blockRouting?: (\r\n        newMatch: string[],\r\n        currentMatch: string[]\r\n    ) => void | boolean\r\n}\r\n\r\nexport interface LayoutState {\r\n    sidebarIn?: boolean\r\n    match: any\r\n    history: string[]\r\n    hash: string\r\n    hashHistory: string[]\r\n    blockRouting?: (\r\n        newMatch: string[],\r\n        currentMatch: string[]\r\n    ) => void | boolean\r\n}\r\n\r\n/**\r\n * The main component. As soon this component is mounted, it is globally available under `window.blueLayoutRef`.\r\n * Also you can append your own event listeners with `blueLayoutRef.addEventListener(eventName, (prevProps, prevState) => { })`.\r\n *\r\n * Allowed event listeners:\r\n *\r\n * * **componentDidUpdate** - Component was updated.\r\n *   Example: `blueLayoutRef.addEventListener(\"componentDidUpdate\", (prevProps, prevState) => { })`\r\n * * **pageDidShowAgain** - Page appeared again with the same old state. In the callback function you can reinitialize things.\r\n *   Example: `blueLayoutRef.addEventListener(\"pageDidShowAgain\", \"home\", (prevProps, prevState) => { })`\r\n * * **pageDidHide** - This page disappeared and another page appears instead.\r\n *   Example: `blueLayoutRef.addEventListener(\"pageDidHide\", \"home\", (prevProps, prevState) => { })`\r\n */\r\nexport default class Layout extends Component<LayoutProps, LayoutState> {\r\n    defaultMatch: string[]\r\n    eventListeners: any[]\r\n    constructor(props: LayoutProps) {\r\n        super(props)\r\n\r\n        window.blueLayoutRef = this\r\n\r\n        this.defaultMatch = [\"home\"]\r\n\r\n        this.state = {\r\n            sidebarIn: props.sidebarIn,\r\n            match: null,\r\n            history: [],\r\n            hash: window.location.hash,\r\n            hashHistory: [],\r\n            blockRouting: props.blockRouting || undefined\r\n        }\r\n\r\n        this.hideSidebar = this.hideSidebar.bind(this)\r\n\r\n        this.eventListeners = []\r\n    }\r\n\r\n    onHashChange() {\r\n        window.blueLayoutRef.initMatch()\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            expandSidebar: false,\r\n            hideSidebarMenu: false,\r\n            unrouteable: false,\r\n            disableTitleSet: false,\r\n            sidebarToggleIconComponent: <span className=\"bi-menu\" />,\r\n            statusIcons: {\r\n                danger: <span className=\"bi-error\" />,\r\n                info: <span className=\"bi-information\" />,\r\n                success: <span className=\"bi-check\" />,\r\n                warning: <span className=\"bi-sign_warning\" />\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const me = this\r\n\r\n        document.addEventListener(\r\n            \"toggleSidebar\",\r\n            () => {\r\n                this.toggleSidebar(undefined)\r\n            },\r\n            false\r\n        )\r\n\r\n        this.initMatch()\r\n\r\n        document.addEventListener(\"touchstart\", (event) => {\r\n            const xPos = event.touches[0].pageX\r\n\r\n            if (xPos < 5) {\r\n                me.toggleSidebar(event)\r\n            } else if (me.state.sidebarIn && xPos > 20) {\r\n                me.toggleSidebar(event)\r\n            }\r\n        })\r\n\r\n        window.addEventListener(\"hashchange\", this.onHashChange)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"hashchange\", this.onHashChange)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: LayoutProps, prevState: LayoutState) {\r\n        if (\r\n            prevProps.blockRouting !== this.props.blockRouting &&\r\n            this.props.blockRouting !== this.state.blockRouting\r\n        ) {\r\n            this.setState({ blockRouting: this.props.blockRouting })\r\n        }\r\n\r\n        this.eventListeners.forEach((eventListener) => {\r\n            if (eventListener[0] === \"componentDidUpdate\") {\r\n                eventListener[1](prevProps, prevState)\r\n            }\r\n\r\n            if (eventListener[0] === \"pageDidShowAgain\") {\r\n                let pageId = eventListener[1]\r\n                let callback = eventListener[2]\r\n\r\n                if (\r\n                    prevState.hash !== this.state.hash &&\r\n                    this.state.match[0] === pageId\r\n                ) {\r\n                    callback(prevProps, prevState)\r\n                }\r\n            }\r\n\r\n            if (eventListener[0] === \"pageDidHide\") {\r\n                let pageId = eventListener[1]\r\n                let callback = eventListener[2]\r\n\r\n                if (\r\n                    prevState.hash !== this.state.hash &&\r\n                    prevState.match[0] === pageId\r\n                ) {\r\n                    callback(prevProps, prevState)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleSidebar(event: any) {\r\n        if (this.state.sidebarIn) {\r\n            this.hideSidebar(event)\r\n        }\r\n        this.setState({ sidebarIn: true })\r\n    }\r\n\r\n    hideSidebar(e: any) {\r\n        if (\r\n            !(\r\n                Utilities.hasClass(e.target, \"blue-open-menu\") ||\r\n                Utilities.hasClass(e.target, \"bi-menu\") ||\r\n                Utilities.hasClass(e.target, \"blue-search\") ||\r\n                Utilities.hasClass(e.target, \"blue-search-control\") ||\r\n                Utilities.hasClass(e.target, \"blue-search-btn\") ||\r\n                Utilities.hasClass(e.target, \"blue-search-btn-icon\") ||\r\n                Utilities.hasClass(\r\n                    e.target,\r\n                    \"blue-menu-item-dropdown-toggle\"\r\n                ) ||\r\n                Utilities.hasClass(\r\n                    e.target,\r\n                    \"blue-menu-item-dropdown-caret\"\r\n                ) ||\r\n                Utilities.hasClass(\r\n                    e.target,\r\n                    \"blue-menu-item-dropdown-icon\"\r\n                ) ||\r\n                Utilities.hasClass(e.target, \"blue-sidebar-exception\")\r\n            )\r\n        ) {\r\n            this.setState({ sidebarIn: false })\r\n        }\r\n    }\r\n\r\n    initMatch() {\r\n        let newMatch\r\n\r\n        if (\r\n            window.location.hash &&\r\n            window.location.hash !== \"\" &&\r\n            window.location.hash !== \"#/\"\r\n        ) {\r\n            newMatch = window.location.hash\r\n                .replace(\"#\", \"\")\r\n                .split(\"/\")\r\n                .filter((n) => n !== \"\")\r\n        } else {\r\n            newMatch = this.defaultMatch\r\n        }\r\n\r\n        if (this.props.unrouteable) {\r\n            newMatch = this.defaultMatch\r\n        }\r\n\r\n        if (\r\n            this.state.blockRouting &&\r\n            this.state.blockRouting(newMatch, this.state.match) === true\r\n        ) {\r\n            window.location.hash = this.state.hash\r\n        } else {\r\n            if (!(this.state.history.indexOf(newMatch[0]) > -1)) {\r\n                this.state.history.push(newMatch[0])\r\n            }\r\n\r\n            this.setState({\r\n                match: newMatch,\r\n                history: this.state.history,\r\n                hash: window.location.hash,\r\n                hashHistory: this.state.hashHistory.concat([\r\n                    window.location.hash\r\n                ])\r\n            })\r\n        }\r\n    }\r\n\r\n    addEventListener(param1: any, param2: any, param3: any) {\r\n        this.eventListeners.push([param1, param2, param3])\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"blue-wrapper\"></div>\r\n                <div\r\n                    id={this.props.id ? this.props.id : \"\"}\r\n                    style={this.props.style ? this.props.style : {}}\r\n                    className={\r\n                        \"blue-layout\" +\r\n                        (this.props.className\r\n                            ? \" \" + this.props.className\r\n                            : \"\") +\r\n                        (this.state.sidebarIn ? \" open\" : \"\") +\r\n                        (this.props.hideSidebarMenu\r\n                            ? \" hasNoSidebarMenu\"\r\n                            : \" hasSidebarMenu\") +\r\n                        (this.props.expandSidebar ? \" expandSidebar\" : \"\") +\r\n                        (this.props.disableHeaders ? \" disableHeaders\" : \"\")\r\n                    }\r\n                    onClick={this.hideSidebar}\r\n                >\r\n                    <div className=\"blue-sidebar-toggler\">\r\n                        {!this.props.hideSidebarMenu ? (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"blue-open-menu blue-menu-item btn\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        sidebarIn: !this.state.sidebarIn\r\n                                    })\r\n                                }}\r\n                            >\r\n                                <div className=\"blue-sidebar-exception position-absolute w-100 h-100\" />\r\n                                {this.props.sidebarToggleIconComponent}\r\n                            </button>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n\r\n                    {this.props.children}\r\n\r\n                    {this.props.pages?.map(\r\n                        (page) =>\r\n                            this.state.history.indexOf(page.name) > -1 && (\r\n                                <div\r\n                                    key={page.name}\r\n                                    className={\r\n                                        \"router-page \" +\r\n                                        (this.state.match[0] === page.name\r\n                                            ? \"active\"\r\n                                            : \"\")\r\n                                    }\r\n                                >\r\n                                    {page.component}\r\n                                </div>\r\n                            )\r\n                    )}\r\n\r\n                    <div className=\"blue-status-circle blue-loading blue-status-loading\">\r\n                        <div className=\"spinner-bounce-circle\">\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"blue-status-circle blue-status-success\">\r\n                        {this.props.statusIcons!.success}\r\n                    </div>\r\n\r\n                    <div className=\"blue-status-circle blue-status-info\">\r\n                        {this.props.statusIcons!.info}\r\n                    </div>\r\n\r\n                    <div className=\"blue-status-circle blue-status-warning\">\r\n                        {this.props.statusIcons!.warning}\r\n                    </div>\r\n\r\n                    <div className=\"blue-status-circle blue-status-danger\">\r\n                        {this.props.statusIcons!.danger}\r\n                    </div>\r\n\r\n                    <div className=\"blue-status-alert alert\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn-close float-end mb-1\"\r\n                            aria-label=\"Close\"\r\n                        />\r\n                        <div className=\"alert-body\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\nimport clsx from \"clsx\"\n\nexport interface PageProps {\n    /**\n     * Will be set to the document's `<title>` tag.\n     */\n    title?: string\n    children?: any\n}\n\n/**\n * Main component for each page.\n */\nexport default function Page({ children, title }: PageProps) {\n    const [hasHeader, setHasHeader] = useState(false)\n    const elementRef = useRef(null) as MutableRefObject<any>\n\n    useEffect(() => {\n        if (elementRef && elementRef.current) {\n            const headerElement =\n                elementRef.current.querySelector(\".blue-header\")\n            setHasHeader(headerElement !== null && headerElement !== undefined)\n        }\n    }, [elementRef])\n\n    useEffect(() => {\n        const titleElement = document.querySelector(\"title\")\n        if (title && titleElement) {\n            titleElement.innerText = title\n        }\n    }, [title])\n\n    return (\n        <div\n            className={clsx(\"blue-page-wrapper\", { hasHeader: hasHeader })}\n            ref={elementRef}\n        >\n            {children}\n        </div>\n    )\n}\n","import React from \"react\"\r\nimport { breakOption } from \"./shared\"\r\n\r\nexport interface BodyProps {\r\n    id?: string\r\n    className?: string\r\n\r\n    /**\r\n     * Class name for the container. More info: https://getbootstrap.com/docs/4.0/layout/overview/#containers\r\n     */\r\n    containerClass?: string\r\n\r\n    /**\r\n     * Set `true` if this page uses `<Actions />`, so this component will get enough padding to avoid overlapping of the content.\r\n     */\r\n    hasActions?: boolean\r\n    break?: breakOption\r\n    onClick?: (event: any) => void\r\n\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Contains the content of the page.\r\n */\r\nexport default function Body({\r\n    id,\r\n    className,\r\n    containerClass,\r\n    hasActions,\r\n    onClick,\r\n    children,\r\n    ...rest\r\n}: BodyProps) {\r\n    const pageBodyClassName = \"blue-page\"\r\n\r\n    return (\r\n        <div\r\n            id={id}\r\n            className={\r\n                className\r\n                    ? pageBodyClassName + \" \" + className\r\n                    : pageBodyClassName +\r\n                    (hasActions ? \" has-actions\" : \"\") +\r\n                    ` break-${rest.break || \"md\"}`\r\n            }\r\n            onClick={onClick}\r\n        >\r\n            <div className={containerClass || \"container-fluid\"}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/blue.101f7419.svg\";","import image from \"./images/blue.svg\"\n\nexport const logo = image\nexport const appTitle = \"Blue\"\n","import React from \"react\"\n\nexport function ReactIcon() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fillRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit=\"2\"\n            clipRule=\"evenodd\"\n            viewBox=\"0 0 16 16\"\n            fill=\"currentColor\"\n            width=\"1em\"\n            height=\"1em\"\n        >\n            <path\n                fillRule=\"nonzero\"\n                d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6z\"\n                transform=\"matrix(.03261 0 0 .03261 7.74 7.74) translate(-413 -288.45)\"\n            ></path>\n            <circle\n                cx=\"420.9\"\n                cy=\"296.5\"\n                r=\"45.7\"\n                transform=\"matrix(.03261 0 0 .03261 7.74 7.74) translate(-413 -288.45)\"\n            ></circle>\n        </svg>\n    )\n}\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\nimport { Dropdown } from \"bootstrap\"\nimport Outside from \"../../components/Outside\"\n\nexport function VersionToggle() {\n    const [show, setShow] = useState<boolean>(false)\n    const toggle = () => setShow(!show)\n    const dropdownRef = useRef() as MutableRefObject<HTMLButtonElement>\n\n    useEffect(() => {\n        const myElement = dropdownRef.current as unknown as Element\n        let bsDropdown = Dropdown.getInstance(myElement)\n\n        if (!bsDropdown) {\n            bsDropdown = new Dropdown(myElement)\n            bsDropdown.hide()\n            setShow(false)\n        } else {\n            show ? bsDropdown.show() : bsDropdown.hide()\n        }\n    }, [show])\n\n    return (\n        <Outside onClickOutside={() => setShow(false)}>\n            <div className=\"dropdown\">\n                <button\n                    className=\"btn btn-secondary dropdown-toggle\"\n                    type=\"button\"\n                    onClick={toggle}\n                    ref={dropdownRef}\n                    title=\"Switch to another version\"\n                >\n                    /v8\n                </button>\n                <ul\n                    className=\"dropdown-menu dropdown-menu-end\"\n                    style={{ minWidth: \"5rem\" }}\n                >\n                    <li>\n                        <a className=\"dropdown-item\" href=\"/blue-react/v7/\">\n                            /v7\n                        </a>\n                    </li>\n                    <li>\n                        <a className=\"dropdown-item\" href=\"/blue-react/v6/\">\n                            /v6\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </Outside>\n    )\n}\n","import React from \"react\"\r\n\r\ninterface FooterProps {\r\n    containerClass?: string\r\n}\r\n\r\nexport function Footer({ containerClass = \"container\" }: FooterProps) {\r\n    return (\r\n        <footer className=\"docs-footer mb-1\">\r\n            <div className={`${containerClass} mt-5`}>\r\n                <p className=\"text-muted mb-0\">\r\n                    <small>\r\n                        {`©${\r\n                            new Date().getFullYear() || \"2021\"\r\n                        } Brügmann Software GmbH. `}\r\n                        {\"Licensed under \"}\r\n                        <a\r\n                            href=\"https://github.com/bruegmann/blue-react/blob/master/LICENSE\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            GNU General Public License v3.0\r\n                        </a>\r\n                        {\". \"}\r\n                        <a\r\n                            href=\"https://patorg.de/imprint/\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Imprint\r\n                        </a>\r\n                        {\". \"}\r\n                        <a\r\n                            href=\"https://patorg.de/privacy-policy/\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Privacy Policy\r\n                        </a>\r\n                    </small>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\nimport { GitHubContent } from \"../gitHubApiTypes\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\n\nexport default function IntroductionSections() {\n    const [appCode, setAppCode] = useState<string>(\"\")\n    const [pageCode, setPageCode] = useState<string>(\"\")\n    const [scssCode, setScssCode] = useState<string>(\"\")\n\n    const fetchFromGitHub = async (path: string) => {\n        const url = `https://api.github.com/repos/bruegmann/cra-template-ts-blue/contents/template/${path}`\n        const r = await fetch(`${url}`)\n\n        const ghContent: GitHubContent = await r.json()\n\n        if (ghContent.content) {\n            const decoded = atob(ghContent.content)\n\n            return decoded\n        }\n    }\n\n    const fetchAppCode = async () => {\n        setAppCode((await fetchFromGitHub(\"src/App.tsx\")) || \"\")\n        setPageCode((await fetchFromGitHub(\"src/pages/HomePage.tsx\")) || \"\")\n        setScssCode((await fetchFromGitHub(\"src/styles/main.scss\")) || \"\")\n    }\n\n    useEffect(() => {\n        fetchAppCode()\n    }, [])\n\n    const sections = [\n        {\n            title: \"Bootstrap\",\n            body: (\n                <div>\n                    An adapted Bootstrap is mainly used for the stylesheet.\n                    <br />\n                    Bootstrap documentation is available here:{\" \"}\n                    <a\n                        href=\"https://getbootstrap.com/docs/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        https://getbootstrap.com/docs/\n                    </a>\n                    <br />\n                    <br />\n                    To use Bootstrap components with JavaScript functions in\n                    React, you should use a library like{\" \"}\n                    <a\n                        href=\"https://reactstrap.github.io/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        React Bootstrap\n                    </a>\n                    .\n                </div>\n            )\n        },\n        {\n            title: \"Implementation\",\n            body: (\n                <div>\n                    <p>\n                        See the whole project:{\" \"}\n                        <a\n                            href=\"https://github.com/bruegmann/cra-template-ts-blue/tree/master/template\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            https://github.com/bruegmann/cra-template-ts-blue/tree/master/template\n                        </a>\n                    </p>\n\n                    <h2>App (app.tsx)</h2>\n                    <SyntaxHighlighter\n                        style={syntaxHighlighterStyle}\n                        language=\"javascript\"\n                    >\n                        {appCode}\n                    </SyntaxHighlighter>\n\n                    <h2 className=\"mt-3\">Page (pages/HomePage.tsx)</h2>\n                    <SyntaxHighlighter\n                        style={syntaxHighlighterStyle}\n                        language=\"javascript\"\n                    >\n                        {pageCode}\n                    </SyntaxHighlighter>\n\n                    <h2 className=\"mt-3\">CSS (main.scss)</h2>\n                    <SyntaxHighlighter\n                        style={syntaxHighlighterStyle}\n                        language=\"scss\"\n                    >\n                        {scssCode}\n                    </SyntaxHighlighter>\n                </div>\n            )\n        }\n    ]\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                {sections.map((s, i) => (\n                    <article\n                        key={i}\n                        id={\"section-\" + encodeURIComponent(s.title)}\n                    >\n                        <h1 className=\"page-header\">{s.title}</h1>\n                        {s.body}\n                    </article>\n                ))}\n            </div>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/stackblitz.f72cfdf8.png\";","import { useState } from \"react\"\r\nimport { PencilSquare, PlayFill } from \"react-bootstrap-icons\"\r\nimport image from \"../images/stackblitz.png\"\r\n\r\nexport default function StackblitzEmbed() {\r\n    const [loadIframe, setLoadIframe] = useState<boolean>(false)\r\n\r\n    return (\r\n        <>\r\n            {loadIframe ? (\r\n                <div className=\"ratio ratio-16x9 bg-light rounded\">\r\n                    <iframe\r\n                        className=\"rounded\"\r\n                        src=\"https://stackblitz.com/edit/blue-react-app-stackblitz-rr6xeh?embed=1&file=index.tsx&hideExplorer=1\"\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div\r\n                    className=\"bg-primary text-white rounded p-4 d-flex justify-content-between\"\r\n                    style={{ backgroundImage: `url(${image})` }}\r\n                >\r\n                    <div>\r\n                        <h5>\r\n                            Do you want to load external content from\r\n                            Stackblitz?\r\n                        </h5>\r\n                        <p>\r\n                            It will contain a live editor, which lets you edit a\r\n                            demo app with Blue React.\r\n                        </p>\r\n\r\n                        <button\r\n                            className=\"btn btn-white d-inline-flex align-items-center\"\r\n                            onClick={() => setLoadIframe(true)}\r\n                        >\r\n                            <PlayFill className=\"me-1\" /> Load content\r\n                        </button>\r\n                        <a\r\n                            className=\"btn btn-link text-white\"\r\n                            href=\"https://stackblitz.com/edit/blue-react-app-stackblitz-rr6xeh?\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Open content in new tab\r\n                        </a>\r\n                        <a\r\n                            className=\"btn btn-link text-white\"\r\n                            href=\"https://stackblitz.com/privacy-policy\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Privacy Policy by Stackblitz\r\n                        </a>\r\n                    </div>\r\n                    <h1 className=\"display-1\">\r\n                        <PencilSquare />\r\n                    </h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/Body\"\r\nimport { logo, appTitle } from \"../Global\"\r\nimport { Bootstrap, BoxSeam, Code, WindowSidebar } from \"react-bootstrap-icons\"\r\nimport { ReactIcon } from \"../components/ReactIcon\"\r\nimport { VersionToggle } from \"../components/VersionToggle\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport IntroductionSections from \"../components/IntroductionSections\"\r\nimport StackblitzEmbed from \"../components/StackblitzEmbed\"\r\n\r\nconst packageJson = require(\"../../../package.json\")\r\n\r\nexport const HomePage = () => (\r\n    <Page>\r\n        <Body\r\n            className=\"pt-0\"\r\n            containerClass=\"no-container d-flex flex-column docs-min-height-100vh\"\r\n        >\r\n            <main className=\"flex-grow-1\">\r\n                <div className=\"welcome-jumbotron pt-5 bg-theme text-white\">\r\n                    <div className=\"container pt-3 pt-md-0\">\r\n                        <section className=\"d-flex justify-content-between\">\r\n                            <div>\r\n                                <h1>\r\n                                    React component library based on Bootstrap 5\r\n                                </h1>\r\n                                <h2>\r\n                                    <Bootstrap /> <ReactIcon /> <Code />{\" \"}\r\n                                    <WindowSidebar /> <BoxSeam />\r\n                                </h2>\r\n                                <h3 className=\"d-flex align-content-center gap-3\">\r\n                                    <span className=\"badge bg-white text-theme\">\r\n                                        {packageJson.version}\r\n                                    </span>\r\n\r\n                                    <VersionToggle />\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h1 className=\"display-1 d-inline-flex align-items-center\">\r\n                                    <img\r\n                                        src={logo}\r\n                                        alt={appTitle}\r\n                                        style={{ height: \"1em\" }}\r\n                                        className=\"me-3\"\r\n                                    />{\" \"}\r\n                                    Blue\r\n                                </h1>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"mt-5 rounded-top bg-body\"\r\n                        style={{ height: \"1rem\" }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <StackblitzEmbed />\r\n\r\n                    <h1 className=\"page-header\">Use Blue React</h1>\r\n\r\n                    <h2 className=\"mt-4 mb-3\">Create new project using CRA</h2>\r\n                    <code>\r\n                        npx create-react-app <strong>name-of-my-app</strong>{\" \"}\r\n                        --template blue\r\n                    </code>\r\n\r\n                    <div className=\"mt-3\">\r\n                        Or if you want to use TypeScript:\r\n                    </div>\r\n                    <code>\r\n                        npx create-react-app <strong>name-of-my-app</strong>{\" \"}\r\n                        --template ts-blue\r\n                    </code>\r\n\r\n                    <h2 className=\"mt-4 mb-3\">Install to existing project</h2>\r\n                    <code>npm i blue-react</code>\r\n\r\n                    <IntroductionSections />\r\n                </div>\r\n            </main>\r\n\r\n            <Footer />\r\n\r\n            <div\r\n                className=\"RoundedBottom bg-theme pb-1\"\r\n                style={{ height: \"1rem\" }}\r\n            >\r\n                <div className=\"rounded-bottom bg-body w-100 h-100\" />\r\n            </div>\r\n        </Body>\r\n    </Page>\r\n)\r\n","import React, { Fragment, useEffect, useState } from \"react\"\n\nexport interface SidebarMenuProps {\n    /**\n     * Extends the class name by the sidebar.\n     */\n    sidebarClass?: string\n\n    /**\n     * Sets the `style` prop by the sidebar.\n     */\n    sidebarStyle?: object\n\n    /**\n     * Extends the class name by the menu.\n     */\n    menuClass?: string\n\n    /**\n     * Sets the `style` prop by the menu.\n     */\n    menuStyle?: object\n\n    /**\n     * Content on top of the menu.\n     */\n    topContent?: any\n\n    /**\n     * Content for the bottom part of the sidebar.\n     */\n    bottomContent?: any\n\n    children?: any\n}\n\n/**\n * Sidebar for the `Layout` component.\n */\nexport default function SidebarMenu(props: SidebarMenuProps) {\n    const [hasShadow, setHasShadow] = useState<boolean>(false)\n\n    const updateDimensions = () => {\n        if (window.innerHeight > 500) {\n            setHasShadow(false)\n        }\n    }\n\n    useEffect(() => {\n        const blueAppSidebar = document.querySelector(\n            \".blue-sidebar\"\n        ) as HTMLElement\n\n        window.addEventListener(\"resize\", updateDimensions)\n\n        if (blueAppSidebar.scrollHeight > blueAppSidebar.clientHeight) {\n            setHasShadow(true)\n        }\n\n        blueAppSidebar.addEventListener(\"scroll\", () => {\n            if (\n                blueAppSidebar.scrollHeight - blueAppSidebar.scrollTop ===\n                blueAppSidebar.clientHeight\n            ) {\n                setHasShadow(false)\n            } else {\n                setHasShadow(true)\n            }\n        })\n\n        return () => {\n            window.removeEventListener(\"resize\", updateDimensions)\n        }\n    }, [])\n\n    return (\n        <div\n            className={\n                \"blue-sidebar \" +\n                (props.sidebarClass ? props.sidebarClass : \"\")\n            }\n            style={props.sidebarStyle ? props.sidebarStyle : {}}\n        >\n            {props.topContent && (\n                <div className=\"blue-sidebar-top\">{props.topContent}</div>\n            )}\n\n            <div\n                className={\n                    \"blue-menu \" + (props.menuClass ? props.menuClass : \"\")\n                }\n                style={props.menuStyle ? props.menuStyle : {}}\n            >\n                {props.children}\n            </div>\n\n            {props.bottomContent && (\n                <div\n                    className={\n                        \"blue-sidebar-bottom \" +\n                        (hasShadow ? \" has-shadow\" : \"\")\n                    }\n                >\n                    {props.bottomContent}\n                </div>\n            )}\n        </div>\n    )\n}\n","import React from \"react\"\r\nimport Body, { BodyProps } from \"../../components/Body\"\r\n\r\nexport interface BodyRoundedProps extends BodyProps {\r\n    classNameTop?: string\r\n    classNameBottom?: string\r\n}\r\n\r\n/**\r\n * Extended variation of `Body` with rounded elements on top and bottom of the page.\r\n */\r\nexport default function BodyRounded({\r\n    classNameTop,\r\n    classNameBottom,\r\n    children,\r\n    ...bodyProps\r\n}: BodyRoundedProps) {\r\n    return (\r\n        <Body {...bodyProps}>\r\n            <div\r\n                className={\"blue-body-rounded-top bg-theme pt-1 d-none d-md-block \" + classNameTop}\r\n                style={{ height: \"1rem\" }}\r\n            >\r\n                <div className=\"rounded-top bg-body w-100 h-100\" />\r\n            </div>\r\n            {children}\r\n            <div\r\n                className={\"blue-body-rounded-bottom bg-theme pb-1 d-none d-md-block \" + classNameBottom}\r\n                style={{ height: \"1rem\" }}\r\n            >\r\n                <div className=\"rounded-bottom bg-body w-100 h-100\" />\r\n            </div>\r\n        </Body>\r\n    )\r\n}\r\n","import React, { Component, ComponentClass } from \"react\"\nimport MarkdownGitHub from \"react-markdown-github\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\nimport { Link } from \"react-router-dom\"\n\nexport interface IComponentDocsProps {\n    standalone: boolean\n    comp: {\n        displayName: string\n        description: string\n        props: any\n        exampleCode?: string\n    }\n}\n\nexport class ComponentDocs extends Component<\n    IComponentDocsProps,\n    { ExampleComponent: ComponentClass<any> }\n> {\n    state = {\n        ExampleComponent: null as unknown as ComponentClass<any>\n    }\n\n    componentDidMount() {\n        try {\n            const { comp } = this.props\n            const ExampleComponent = require(`../examples/${comp.displayName}.tsx`)\n            this.setState({ ExampleComponent: ExampleComponent[\"default\"] })\n        } catch (ex) {\n            // console.error(ex)\n            // This component has no example\n        }\n\n        try {\n            const { comp } = this.props\n            const ExampleComponent = require(`../examples/${comp.displayName}.js`)\n            this.setState({ ExampleComponent: ExampleComponent[\"default\"] })\n        } catch (ex) {\n            // console.error(ex)\n            // This component has no example\n        }\n    }\n\n    prepareForMarkdown(text: string) {\n        return text.replace(\"@deprecated\", \"***@deprecated***\")\n    }\n\n    render() {\n        const { comp, standalone } = this.props\n        const { ExampleComponent } = this.state\n\n        return (\n            <article className=\"pt-5\">\n                <h1 className=\"page-header mt-0 blue-opacity-hover\">\n                    {comp.displayName}{\" \"}\n                    <Link\n                        to={`/component/${comp.displayName}`}\n                        className=\"blue-opacity-hover-content-active\"\n                    >\n                        #\n                    </Link>\n                </h1>\n\n                <MarkdownGitHub>\n                    {this.prepareForMarkdown(comp.description)}\n                </MarkdownGitHub>\n\n                {comp.displayName == \"Intro\" && (\n                    <p>\n                        <Link to=\"/intro-demo\">Take a look at this demo</Link>\n                    </p>\n                )}\n\n                {comp.props && (\n                    <div>\n                        <h2 className=\"mt-4 mb-3\">Props</h2>\n\n                        <table className=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Description</th>\n                                    <th>Type</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {comp.props &&\n                                    Object.keys(comp.props).map((j) => (\n                                        <tr key={j}>\n                                            <th>{j}</th>\n                                            <td>\n                                                <MarkdownGitHub>\n                                                    {this.prepareForMarkdown(\n                                                        comp.props[j]\n                                                            .description\n                                                    )}\n                                                </MarkdownGitHub>\n\n                                                {comp.props[j].defaultValue ? (\n                                                    <div>\n                                                        <strong>\n                                                            Default:\n                                                        </strong>\n                                                        &nbsp;\n                                                        <code>\n                                                            {\n                                                                comp.props[j]\n                                                                    .defaultValue\n                                                                    .value\n                                                            }\n                                                        </code>\n                                                    </div>\n                                                ) : (\n                                                    \"\"\n                                                )}\n                                            </td>\n                                            <td>\n                                                {comp.props[j].tsType &&\n                                                    (comp.props[j].tsType.raw ||\n                                                        comp.props[j].tsType\n                                                            .name)}\n                                            </td>\n                                        </tr>\n                                    ))}\n                            </tbody>\n                        </table>\n\n                        {(ExampleComponent || comp.exampleCode) &&\n                            (standalone ? (\n                                <div>\n                                    <h2 className=\"mt-4 mb-3\">Example</h2>\n\n                                    {ExampleComponent && (\n                                        <div className=\"mb-3\">\n                                            <ExampleComponent />\n                                        </div>\n                                    )}\n\n                                    {comp.exampleCode && (\n                                        <SyntaxHighlighter\n                                            style={syntaxHighlighterStyle}\n                                            language=\"jsx\"\n                                        >\n                                            {comp.exampleCode}\n                                        </SyntaxHighlighter>\n                                    )}\n                                </div>\n                            ) : (\n                                <Link\n                                    to={\"/component/\" + comp.displayName}\n                                    onClick={() => window.scrollTo(0, 0)}\n                                >\n                                    Show example\n                                </Link>\n                            ))}\n                    </div>\n                )}\n            </article>\n        )\n    }\n}\n","import React, { useEffect, useState } from \"react\"\r\nimport { useParams, Link, NavLink } from \"react-router-dom\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../components/BodyRounded\"\r\n\r\nimport docs from \"../data/docs.json\"\r\nimport { ComponentDocs } from \"../components/ComponentDocs\"\r\nimport { IComponent } from \"../types\"\r\nimport Search from \"../../components/Search\"\r\nimport { appTitle } from \"../Global\"\r\nimport { Footer } from \"../components/Footer\"\r\n\r\nconsole.log({ docs })\r\n\r\nexport const ComponentPage = () => {\r\n    const { selectedComponent } = useParams<any>()\r\n\r\n    // State of input Search value\r\n    const [value, setValue] = useState<string>(\"\")\r\n    // Searched & found Components\r\n    const [components, setComponents] = useState<any>([])\r\n\r\n    const array_docs = Object.values(docs) as IComponent[]\r\n\r\n    useEffect(() => {\r\n        const routerPageElement = document.querySelector(\".router-page.active\")\r\n        if (routerPageElement) {\r\n            routerPageElement.scrollTo(0, 0)\r\n        }\r\n    }, [selectedComponent])\r\n\r\n    return (\r\n        <Page\r\n            title={`${selectedComponent ? `${selectedComponent} - ` : \"\"\r\n                }React Components - ${appTitle}`}\r\n        >\r\n            <Body containerClass=\"d-flex flex-column docs-min-height-100vh\">\r\n                <div className=\"container-fluid flex-grow-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"sticky-top\" style={{ zIndex: 0 }}>\r\n                                <div className=\"pt-1 pt-sm-3\">\r\n                                    <Search\r\n                                        body\r\n                                        // onSubmit={(e: any) => { e.preventDefault() }}\r\n                                        onChange={(a: any) => {\r\n                                            setValue(a.target.value)\r\n                                            // Array for the searched & found Components\r\n                                            let arr = []\r\n\r\n                                            for (\r\n                                                let i = 0;\r\n                                                i < array_docs.length;\r\n                                                i++\r\n                                            ) {\r\n                                                const target_value =\r\n                                                    a.target.value.toLowerCase()\r\n                                                if (\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.break !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.checked !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.children !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.className !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.containerClass !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.content !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.disableTitleSet !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.expandSidebar !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.featured !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hasActions !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hideSidebarMenu !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hideToggleAction !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.href !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.icon !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.label !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.light !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.mimeType !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.mirrored !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.navItemClassName !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.onChange !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.onToggle !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.open !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.pages !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.showDocumentLabel !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.sidebarToggleIconComponent !==\r\n                                                    \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.src !== \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.unrouteable !==\r\n                                                    \"undefined\"\r\n                                                ) {\r\n                                                    const description =\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].description?.toLowerCase()\r\n                                                    const display_Name =\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].displayName?.toLowerCase()\r\n                                                    const props = Object.keys(\r\n                                                        array_docs[i].props\r\n                                                    )\r\n\r\n                                                    if (\r\n                                                        description?.includes(\r\n                                                            target_value\r\n                                                        ) ||\r\n                                                        display_Name?.includes(\r\n                                                            target_value\r\n                                                        ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        props.some((val) =>\r\n                                                            val\r\n                                                                .toLowerCase()\r\n                                                                .includes(\r\n                                                                    target_value\r\n                                                                )\r\n                                                        ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].exampleCode\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            )\r\n                                                    ) {\r\n                                                        arr.push(array_docs[i])\r\n                                                        setComponents(arr)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                        value={value}\r\n                                        className=\"mb-1 ms-5 ms-md-0 \"\r\n                                        placeholder=\"Search...\"\r\n                                    />\r\n\r\n                                    <div\r\n                                        className=\"overflow-auto\"\r\n                                        style={{\r\n                                            maxHeight: \"calc(100vh - 5rem)\"\r\n                                        }}\r\n                                    >\r\n                                        <nav className=\"nav nav-pills flex-column\">\r\n                                            {components.length > 0 &&\r\n                                                value !== \"\"\r\n                                                ? components.map(\r\n                                                    (\r\n                                                        i: any,\r\n                                                        index: number\r\n                                                    ) => (\r\n                                                        <div key={index}>\r\n                                                            <Link\r\n                                                                to={`/component/${i.displayName}`}\r\n                                                                className=\"nav-link\"\r\n                                                            >\r\n                                                                {\r\n                                                                    i.displayName\r\n                                                                }\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    )\r\n                                                )\r\n                                                : docs &&\r\n                                                Object.values(docs).map(\r\n                                                    (\r\n                                                        i: any,\r\n                                                        index: number\r\n                                                    ) => (\r\n                                                        <div\r\n                                                            key={index}\r\n                                                            className=\"nav-item\"\r\n                                                        >\r\n                                                            <NavLink\r\n                                                                to={`/component/${i.displayName}`}\r\n                                                                className=\"nav-link\"\r\n                                                            >\r\n                                                                {\r\n                                                                    i.displayName\r\n                                                                }\r\n                                                            </NavLink>\r\n                                                        </div>\r\n                                                    )\r\n                                                )}\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-10\">\r\n                            {docs &&\r\n                                Object.values(docs).map(\r\n                                    (i: any, index: number) =>\r\n                                        (!selectedComponent ||\r\n                                            selectedComponent ===\r\n                                            i.displayName) &&\r\n                                        i.props && (\r\n                                            <ComponentDocs\r\n                                                key={index}\r\n                                                comp={i}\r\n                                                standalone={\r\n                                                    selectedComponent\r\n                                                        ? true\r\n                                                        : false\r\n                                                }\r\n                                            />\r\n                                        )\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer containerClass=\"container-fluid\" />\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React from \"react\"\n\nexport interface IntroProps {\n    /**\n     * Can be an image. Will be placed inside of the `src` attribute.\n     */\n    logo?: string\n\n    /**\n     * Max width from the logo.\n     */\n    logoMaxWidth?: string\n\n    /**\n     * Text which will be placed under the logo.\n     */\n    title?: string\n\n    /**\n     * Content\n     */\n    children?: any\n}\n\n/**\n * Can be used for a sign-in page.\n */\nexport default function Intro({\n    logo,\n    logoMaxWidth = \"100px\",\n    title,\n    children\n}: IntroProps) {\n    return (\n        <div className=\"sign-in-screen\">\n            <div className=\"sign-in-container mx-1\">\n                <div className=\"bg-body rounded-3 shadow-lg px-4 py-5\">\n                    <div className=\"text-center\">\n                        <img\n                            style={{ maxWidth: logoMaxWidth }}\n                            src={logo}\n                            alt=\"\"\n                        />\n                        <h2 className=\"mt-4 mb-3\">{title}</h2>\n                    </div>\n\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport Intro from \"../../components/Intro\"\nimport { logo } from \"../Global\"\nimport { Link } from \"react-router-dom\"\nimport { ChevronLeft } from \"react-bootstrap-icons\"\n\nexport const IntroDemoPage = () => (\n    <>\n        {/* Changes background and sidebar background when on dark mode. */}\n        <style\n            type=\"text/css\"\n            dangerouslySetInnerHTML={{\n                __html: /* css */ `\n            @media (prefers-color-scheme: dark) {\n                :root {\n                    --sidebar-bg: var(--black, #212529);\n                }\n            }\n        `\n            }}\n        />\n        <Intro\n            logo={logo}\n            logoMaxWidth=\"100px\"\n            title=\"Here could be your introduction\"\n        >\n            <form\n                className=\"form-horizontal\"\n                onSubmit={(event) => {\n                    event.preventDefault()\n                }}\n            >\n                <div className=\"row mb-3\">\n                    <label className=\"col-sm-4 col-form-label\">\n                        Please sign in\n                    </label>\n                    <div className=\"col-sm-8\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Enter something\"\n                        />\n                    </div>\n                </div>\n\n                <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\">\n                        Sign in\n                    </button>\n                </div>\n            </form>\n\n            <Link to=\"/component/Intro\">\n                <ChevronLeft /> Back to the docs\n            </Link>\n        </Intro>\n    </>\n)\n","import React, { useState } from \"react\"\nimport { Modal, ModalHeader } from \"reactstrap\"\n\nexport function NormalScrollbarDemo() {\n    const [showModal, setShowModal] = useState<boolean>(false)\n    const toggleShowModal = () => setShowModal(!showModal)\n\n    return (\n        <>\n            <button className=\"btn btn-link p-0 mb-1\" onClick={toggleShowModal}>\n                Show demo.\n            </button>\n\n            <Modal isOpen={showModal} toggle={toggleShowModal}>\n                <ModalHeader toggle={toggleShowModal}>\n                    Scrollbar demo\n                </ModalHeader>\n                <div className=\"m-3\">\n                    <div className=\"mb-3\">\n                        <label>\n                            Area without <code>.blue-normal-scrollbar</code>\n                        </label>\n                        <select className=\"form-control\" multiple aria-readonly>\n                            <option>one</option>\n                            <option>two</option>\n                            <option>three</option>\n                            <option>four</option>\n                            <option>five</option>\n                            <option>six</option>\n                        </select>\n                    </div>\n\n                    <div className=\"blue-normal-scrollbar mb-3\">\n                        <label>\n                            Area with <code>.blue-normal-scrollbar</code>\n                        </label>\n                        <select className=\"form-control\" multiple aria-readonly>\n                            <option>one</option>\n                            <option>two</option>\n                            <option>three</option>\n                            <option>four</option>\n                            <option>five</option>\n                            <option>six</option>\n                        </select>\n                    </div>\n\n                    <div className=\"alert alert-info\">\n                        Make sure to put <code>.blue-normal-scrollbar</code> to\n                        an parent element and not directly to the element with\n                        the overflow.\n                    </div>\n\n                    <div className=\"alert alert-info\">\n                        Bootstrap modals with <code>.modal-body</code> already\n                        have the rules of <code>.blue-normal-scrollbar</code>,\n                        so you don't have to put the class name there yourself.\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n","import { ReactNode } from \"react\"\n\nexport interface HashLinkProps {\n    children: ReactNode\n    id: string\n}\n\nexport default function HashLink({ children, id }: HashLinkProps) {\n    return (\n        <h5 className=\"blue-opacity-hover\" id={id}>\n            {children}{\" \"}\n            <a href={`#${id}`} className=\"blue-opacity-hover-content-active\">\n                #\n            </a>\n        </h5>\n    )\n}\n","import React from \"react\"\r\nimport Utilities from \"../../components/Utilities\"\r\nimport { CheckCircle, CheckCircleFill, PlayFill } from \"react-bootstrap-icons\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../components/BodyRounded\"\r\nimport { NormalScrollbarDemo } from \"../components/NormalScrollbarDemo\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport HashLink from \"../components/HashLink\"\r\n\r\nexport interface UtilitiesPageProps { }\r\n\r\nexport interface UtilitiesPageState {\r\n    content: any\r\n    didScroll: boolean\r\n}\r\n\r\nconst utilitiesFunctions = [\r\n    {\r\n        definition: \"hasClass(el, className)\",\r\n        description: \"Checks if element has a specific class name.\"\r\n    },\r\n    {\r\n        definition: \"addClass(el, className)\",\r\n        description: \"Adds a class name to an element.\"\r\n    },\r\n    {\r\n        definition: \"removeClass(el, className)\",\r\n        description: \"Removes a class name from an element.\"\r\n    },\r\n    {\r\n        definition: \"toggleClass(el, className)\",\r\n        description:\r\n            \"Adds class name to element, if it doesn't it yet. Otherwise it removes it.\"\r\n    },\r\n    {\r\n        definition: \"startLoading()\",\r\n        description: \"Shows loading animation.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.startLoading()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"finishLoading()\",\r\n        description: \"Hides loading animation.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.finishLoading()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"showSuccess()\",\r\n        description: \"Shows success symbol.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.showSuccess()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"hideSuccess()\",\r\n        description: \"Hides success symbol.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.hideSuccess()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"toggleActions()\",\r\n        description: \"Shows action menu or hides it.\"\r\n    },\r\n    {\r\n        definition:\r\n            \"setAlertMessage(message, alertClassName, close, detailText)\",\r\n        description: (\r\n            <span>\r\n                Shows an alert message.\r\n                <br />\r\n                Possible values for alertClassName: <code>loading</code>,{\" \"}\r\n                <code>success</code>, <code>info</code>, <code>warning</code>,{\" \"}\r\n                <code>danger</code>\r\n            </span>\r\n        ),\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() =>\r\n                    Utilities.setAlertMessage(\r\n                        \"Hey, this is a message\",\r\n                        \"danger\",\r\n                        true,\r\n                        `Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \r\n\r\n                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n`\r\n                    )\r\n                }\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"resetAlertMessage(alertClassName)\",\r\n        description: \"Resets alert message and removes it.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.resetAlertMessage(\"danger\")}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"guid()\",\r\n        description: \"Returns string of random characters.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => alert(\"Generated GUID: \" + Utilities.guid())}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"scrollToTop()\",\r\n        description: \"Scrolls to the top of the page.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.scrollToTop()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"fetchData(input, init?, showErrorDetail? = true)\",\r\n        description: (\r\n            <span>\r\n                Uses native <code>fetch</code> function, but adds error handling\r\n                and shows error messages if there are any.\r\n            </span>\r\n        )\r\n        // demo: (<Fragment>\r\n        //     <button className=\"btn btn-light\"\r\n        //     // onClick={() => {\r\n        //     //     const url = \"https://jsonplaceholder.typicode.com/todos/1\"\r\n\r\n        //     //     Utilities.startLoading()\r\n\r\n        //     //     Utilities.fetchData(url)\r\n        //     //         .then((res: any) => {\r\n        //     //             Utilities.finishLoading()\r\n        //     //             return res.json()\r\n        //     //         })\r\n        //     //         .then((json: any) => alert(`Here is the result of ${url}:\\n\\n ${JSON.stringify(json)}`))\r\n        //     // }}\r\n        //     >\r\n        //         <PlayFill />\r\n        //     </button>\r\n        // </Fragment>)\r\n    }\r\n]\r\n\r\nexport class UtilitiesPage extends React.Component<\r\n    UtilitiesPageProps,\r\n    UtilitiesPageState\r\n> {\r\n    constructor(props: UtilitiesPageProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            content: [],\r\n            didScroll: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document\r\n            .querySelector(\".router-page.active\")!\r\n            .addEventListener(\"scroll\", () => {\r\n                if (!this.state.didScroll) {\r\n                    this.setState({ didScroll: true })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const sections = [\r\n            {\r\n                title: \"Utilities\",\r\n                body: (\r\n                    <div>\r\n                        <p>A static class with a few useful helper functions</p>\r\n\r\n                        <h2 className=\"page-header\">Useful CSS classes</h2>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-sidebar-bottom\">\r\n                                <code>.blue-sidebar-bottom</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                With Sidebar Bottom, for example, a registered\r\n                                user can be displayed at the bottom left. Usable\r\n                                within{\" \"}\r\n                                <code>\r\n                                    &lt;SidebarMenu {\"bottomContent={}\"} /&gt;\r\n                                </code>\r\n                                .\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-sidebar-hidden-on-open\">\r\n                                <code>.blue-sidebar-hidden-on-open</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                The element is hidden as long as the sidebar is\r\n                                open.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-sidebar-visible-on-open\">\r\n                                <code>.blue-sidebar-visible-on-open</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                The element is visible as long as the sidebar is\r\n                                open.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-normal-scrollbar\">\r\n                                <code>.blue-normal-scrollbar</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                {\r\n                                    \"Normalizes elements in areas which still should not have the theme colors for their scrollbars. \"\r\n                                }\r\n                                <NormalScrollbarDemo />\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"btn-black\">\r\n                                <code>.btn-black</code>,{\" \"}\r\n                                <code>.btn-outline-black</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Additionally Bootstrap theme variable \"black\"\r\n                                for always black buttons.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"btn-white\">\r\n                                <code>.btn-white</code>,{\" \"}\r\n                                <code>.btn-outline-white</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Additionally Bootstrap theme variable \"white\"\r\n                                for always white buttons.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"form-horizontal\">\r\n                                <code>.form-horizontal</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                To be used together with{\" \"}\r\n                                <a href=\"https://getbootstrap.com/docs/5.1/forms/layout/#horizontal-form\">\r\n                                    Bootstraps solutions\r\n                                </a>\r\n                                . <code>.form-horizontal</code> arranges the\r\n                                labels on the right on larger screens.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"w-bla-sidebar-width\">\r\n                                <code>.w-bla-sidebar-width</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Gives element the width of the sidebar, defined\r\n                                with <code>$bla-sidebar-width</code>.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-tooltip-up\">\r\n                                <code>.blue-tooltip-up</code>,{\" \"}\r\n                                <code>.blue-tooltip-down</code>,{\" \"}\r\n                                <code>.blue-tooltip-start</code>,{\" \"}\r\n                                <code>.blue-tooltip-end</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Data Attribute of element is used as an tooltip.\r\n                                To be used together with{\" \"}\r\n                                <code>data-tooltip</code>.<br />\r\n                                Usage:\r\n                            </p>\r\n                            <strong\r\n                                data-tooltip=\"Put your tooltip text here\"\r\n                                className=\"blue-tooltip-up\"\r\n                            >\r\n                                Hover me!\r\n                            </strong>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<strong data-tooltip=\"Put your tooltip text here\" className=\"blue-tooltip-up\">\r\n    Hover me!\r\n</strong>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-btn-silent\">\r\n                                <code>.blue-btn-silent</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Removes border when the button is in normal\r\n                                state (no hover). Should be used together with{\" \"}\r\n                                <code>.btn-outline-*</code>.<br />\r\n                                Usage:\r\n                            </p>\r\n                            <button className=\"btn btn-outline-secondary blue-btn-silent\">\r\n                                Button\r\n                            </button>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<button className=\"btn btn-outline-secondary blue-btn-silent\">\r\n    Button\r\n</button>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-opacity-hover\">\r\n                                <code>.blue-opacity-hover</code>,{\" \"}\r\n                                <code>.blue-opacity-hover-content-active</code>,{\" \"}\r\n                                <code>.blue-opacity-hover-content-default</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                With <code>.blue-opacity-hover</code> you can\r\n                                hide things by default and let them appear when\r\n                                the user hovers the area around it.\r\n                                <br />\r\n                                This way you can simplify the UI a bit and make\r\n                                controls disappear when they are not needed. On\r\n                                touch screens the elements will always be\r\n                                visible.\r\n                                <br />\r\n                                Usage:\r\n                            </p>\r\n\r\n                            <div className=\"card blue-opacity-hover p-3 flex-row justify-content-between\">\r\n                                <h5 className=\"blue-opacity-hover-content-default\">\r\n                                    Hover here to see a button\r\n                                </h5>\r\n                                <button className=\"btn btn-secondary blue-opacity-hover-content-active\">\r\n                                    Hey there\r\n                                </button>\r\n                            </div>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<div className=\"card blue-opacity-hover p-3 flex-row justify-content-between\">\r\n    <h5 className=\"blue-opacity-hover-content-default\">Hover here to see a button</HashLink>\r\n    <button className=\"btn btn-secondary blue-opacity-hover-content-active\">Hey there</button>\r\n</div>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-d-hover\">\r\n                                <code>.blue-d-hover</code>,{\" \"}\r\n                                <code>.blue-d-hover-content-active</code>,{\" \"}\r\n                                <code>.blue-d-hover-content-default</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                <code>.blue-d-hover</code> is similar to{\" \"}\r\n                                <code>.blue-opacity-hover</code>, but the\r\n                                elements will disappear and appear with the{\" \"}\r\n                                <code>display</code> property.\r\n                                <br />\r\n                                It is ideal if you want to replace something\r\n                                with something else when the user hovers. On the\r\n                                example I used it to change the edit and delete\r\n                                icons from lineout to filled when hovering.\r\n                                <br />\r\n                                Usage:\r\n                            </p>\r\n\r\n                            <button className=\"btn blue-d-hover d-inline-flex align-items-center gap-1\">\r\n                                <CheckCircle className=\"blue-d-hover-content-default\" />\r\n                                <CheckCircleFill className=\"blue-d-hover-content-active\" />{\" \"}\r\n                                Hover to fill the icon\r\n                            </button>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<button className=\"btn blue-d-hover d-inline-flex align-items-center gap-1\">\r\n    <CheckCircle className=\"blue-d-hover-content-default\" />\r\n    <CheckCircleFill className=\"blue-d-hover-content-active\" /> Hover to fill the icon\r\n</button>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <h2 className=\"page-header\">JavaScript Functions</h2>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Definition</th>\r\n                                    <th>Description</th>\r\n                                    <th>Demo</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {utilitiesFunctions\r\n                                    .sort((a, b) =>\r\n                                        a.definition > b.definition\r\n                                            ? 1\r\n                                            : b.definition > a.definition\r\n                                                ? -1\r\n                                                : 0\r\n                                    )\r\n                                    .map((fun, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>\r\n                                                <code>\r\n                                                    Utilities.{fun.definition}\r\n                                                </code>\r\n                                            </td>\r\n                                            <td>{fun.description}</td>\r\n                                            {fun.demo ? (\r\n                                                <td>{fun.demo}</td>\r\n                                            ) : (\r\n                                                <td />\r\n                                            )}\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <h2 className=\"page-header\">Example</h2>\r\n                        <SyntaxHighlighter\r\n                            style={syntaxHighlighterStyle}\r\n                            language=\"javascript\"\r\n                        >{`import { Utilities } from \"blue-react\"\r\n                            \r\nUtilities.startLoading()`}</SyntaxHighlighter>\r\n                    </div>\r\n                )\r\n            }\r\n        ]\r\n        return (\r\n            <Page>\r\n                <Body containerClass=\"no-container pt-5 pt-md-0 d-flex flex-column docs-min-height-100vh\">\r\n                    <div className=\"container flex-grow-1\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                {sections.map((s, i) => (\r\n                                    <article\r\n                                        key={i}\r\n                                        id={\r\n                                            \"section-\" +\r\n                                            encodeURIComponent(s.title)\r\n                                        }\r\n                                    >\r\n                                        <h1 className=\"page-header\">\r\n                                            {s.title}\r\n                                        </h1>\r\n                                        {s.body}\r\n                                    </article>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Footer />\r\n                </Body>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\nexport default UtilitiesPage\r\n","import React, { useEffect } from \"react\"\nimport Utilities from \"./Utilities\"\n\nexport interface HeaderTitleProps {\n    /**\n     * Can be an image. Will be placed inside of the `src` attribute.\n     */\n    logo?: string\n\n    /**\n     * Text next to the logo.\n     */\n    appTitle?: string\n\n    /**\n     * Disables that the app title will disappear at a specific view width.\n     */\n    keepAppTitle?: boolean\n\n    children?: any\n\n    /**\n     * Extends `className` from parent element.\n     */\n    className?: string\n\n    /**\n     * Is the component used on the sidebar?\n     */\n    sidebar?: boolean\n}\n\n/**\n * The title area at the header bar.\n * Depending on its content, the document's title will be set aswell (what will be shown in the browser title bar).\n */\nexport default function HeaderTitle({\n    logo,\n    appTitle,\n    keepAppTitle,\n    children,\n    className,\n    sidebar\n}: HeaderTitleProps) {\n    const uniqueId = \"HeaderTitle-\" + Utilities.guid()\n\n    const setDocumentTitle = () => {\n        if (\n            window.blueLayoutRef &&\n            window.blueLayoutRef.props &&\n            window.blueLayoutRef.props.disableTitleSet === false\n        ) {\n            const element = document.querySelector(\n                `#${uniqueId} .blue-header-logo-title-labels`\n            ) as HTMLElement\n            const titleElement = document.querySelector(\"title\")\n            if (element && element.innerText && titleElement) {\n                const titlePaths = element.innerText.split(\"/\")\n                if (titlePaths.length > 1) {\n                    titleElement.innerText = `${titlePaths[\n                        titlePaths.length - 1\n                    ].trim()} - ${titlePaths[0].trim()}`\n                } else {\n                    titleElement.innerText = element.innerText\n                }\n            }\n        }\n    }\n\n    useEffect(setDocumentTitle, [])\n    useEffect(setDocumentTitle, [children])\n\n    return (\n        <h3\n            id={uniqueId}\n            className={\n                \"blue-header-logo\" +\n                (className ? ` ${className}` : \"\") +\n                (sidebar ? \" sidebar\" : \"\")\n            }\n        >\n            <span className=\"blue-header-logo-title\">\n                {logo ? (\n                    <span>\n                        <a href=\"#\">\n                            <img\n                                src={logo}\n                                className=\"blue-header-logo-image\"\n                            />\n                        </a>\n                        &nbsp;\n                    </span>\n                ) : (\n                    \"\"\n                )}\n                <span\n                    className={\n                        \"blue-header-logo-title-labels \" +\n                        (keepAppTitle ? \"keep\" : \"\")\n                    }\n                >\n                    {appTitle ? (\n                        <span>\n                            <a href=\"#\">{appTitle}</a> {children ? \"/\" : \"\"}\n                            &nbsp;\n                        </span>\n                    ) : (\n                        \"\"\n                    )}\n                    {children}\n                </span>\n            </span>\n        </h3>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport MarkdownGitHub from \"react-markdown-github\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\nimport Utilities from \"../../components/Utilities\"\nimport { GitHubContent } from \"../gitHubApiTypes\"\n\nconst renderers = {\n    code: ({ language, value }: any) => {\n        return (\n            <SyntaxHighlighter\n                style={syntaxHighlighterStyle}\n                language={language}\n                children={value}\n            />\n        )\n    }\n}\n\nexport interface RecipeProps {\n    recipe: GitHubContent\n}\n\nexport function Recipe({ recipe }: RecipeProps) {\n    const [markdown, setMarkdown] = useState<string | null>(null)\n\n    useEffect(() => {\n        fetchRecipe()\n    }, [recipe])\n\n    const fetchRecipe = async () => {\n        if (recipe.download_url !== undefined) {\n            const r = await fetch(recipe.download_url)\n            const text = await r.text()\n            setMarkdown(text)\n        } else {\n            Utilities.setAlertMessage(\n                \"This GitHub file has no download_url\",\n                \"danger\",\n                true\n            )\n        }\n    }\n\n    const transformImageUri = ({ uri, github, org, repo, filename }: any) => {\n        // console.log(uri, github, org, repo, filename)\n        return `https://raw.githubusercontent.com/bruegmann/blue-react/master/recipes/${uri}`\n    }\n\n    return (\n        <>\n            {markdown !== null ? (\n                <MarkdownGitHub\n                    source={markdown}\n                    sourceUri={recipe.html_url}\n                    transformImageUri={transformImageUri}\n                    renderers={renderers}\n                    className=\"recipe-markdown\"\n                />\n            ) : (\n                <div>...</div>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\r\nimport { Link, NavLink, useParams } from \"react-router-dom\"\r\nimport Body from \"../components/BodyRounded\"\r\nimport Page from \"../../components/Page\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport { Recipe } from \"../components/Recipe\"\r\nimport { GitHubContent } from \"../gitHubApiTypes\"\r\n\r\nexport function RecipesPage() {\r\n    const [recipes, setRecipes] = useState<GitHubContent[] | null>(null)\r\n    const { active } = useParams<any>()\r\n    const [activeRecipe, setActiveRecipe] = useState<GitHubContent | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (recipes === null) {\r\n            fetchRecipes()\r\n        }\r\n    }, [recipes])\r\n\r\n    useEffect(() => {\r\n        if (active !== undefined && active !== null && recipes !== null) {\r\n            recipes.forEach((recipe: GitHubContent) => {\r\n                if (recipe.name.toLowerCase() === active.toLowerCase()) {\r\n                    setActiveRecipe(recipe)\r\n                }\r\n            })\r\n        } else {\r\n            setActiveRecipe(null)\r\n        }\r\n    }, [active, recipes])\r\n\r\n    const fetchRecipes = async () => {\r\n        const url =\r\n            \"https://api.github.com/repos/bruegmann/blue-react/contents/recipes\"\r\n        const r = await fetch(`${url}`)\r\n\r\n        const contents = (await r.json()) as GitHubContent[]\r\n\r\n        if (contents && Array.isArray(contents)) {\r\n            const recipes = contents.filter(\r\n                (c: GitHubContent) =>\r\n                    c.name.endsWith(\".md\") &&\r\n                    c.name.toLowerCase() !== \"readme.md\"\r\n            )\r\n            setRecipes(recipes)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Page>\r\n            <Body containerClass=\"d-flex flex-column docs-min-height-100vh\">\r\n                <div className=\"container-fluid pt-5 pt-md-0 flex-grow-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"sticky-top\" style={{ zIndex: 0 }}>\r\n                                <div>\r\n                                    <nav className=\"nav nav-pills flex-column mt-3\">\r\n                                        {recipes !== null ? (\r\n                                            recipes.map(\r\n                                                (recipe: GitHubContent) => (\r\n                                                    <div\r\n                                                        key={recipe.sha}\r\n                                                        className=\"nav-item\"\r\n                                                    >\r\n                                                        <NavLink\r\n                                                            to={`/recipes/${recipe.name}`}\r\n                                                            className=\"nav-link\"\r\n                                                        >\r\n                                                            {recipe.name.replace(\r\n                                                                \".md\",\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </NavLink>\r\n                                                    </div>\r\n                                                )\r\n                                            )\r\n                                        ) : (\r\n                                            <div>Loading...</div>\r\n                                        )}\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-10\">\r\n                            {activeRecipe !== null ? (\r\n                                <Recipe recipe={activeRecipe} />\r\n                            ) : (\r\n                                <>\r\n                                    <h1 className=\"page-header\">Recipes</h1>\r\n\r\n                                    <p>\r\n                                        Recipes are short tutorials or\r\n                                        instructions for specific scenarious. On\r\n                                        the side you see a list of all available\r\n                                        recipes.\r\n                                    </p>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer containerClass=\"container-fluid\" />\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React from \"react\"\nimport Utilities from \"./Utilities\"\n\nexport interface HeaderProps {\n    children?: any\n}\n\n/**\n * The top of a page.\n */\nexport default function Header({ children }: HeaderProps) {\n    return (\n        <div className=\"blue-header blue-header-extension\">\n            <div\n                className=\"blue-header-wrapper\"\n                onClick={Utilities.scrollToTop}\n            />\n\n            {children}\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\r\nimport MenuItem from \"./MenuItem\"\r\nimport { breakOption } from \"./shared\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface ActionMenuProps {\r\n    /**\r\n     * Hides the toggle button in mobile view. Can be useful when using multiple ActionMenus and not show the toggle button for each menu.\r\n     */\r\n    hideToggleAction?: boolean\r\n\r\n    children?: any\r\n\r\n    /**\r\n     * Icon component for the toggle icon.\r\n     */\r\n    toggleIcon?: any\r\n\r\n    className?: string\r\n\r\n    /**\r\n     * \"sm\" | \"md\" | \"lg\" | \"xl\" | \"none\"\r\n     */\r\n    break?: breakOption | \"none\"\r\n}\r\n\r\n/**\r\n * The Action Menu on the top right of a page. You can place Actions here which are in context of the current page.\r\n */\r\nexport default function ActionMenu(props: ActionMenuProps) {\r\n    const {\r\n        hideToggleAction,\r\n        children,\r\n        className,\r\n        toggleIcon = \"bi-iconmonstr-menu-7\"\r\n    } = props\r\n    const _break = props.break || \"lg\"\r\n\r\n    const [actionsToggledIn, setActionsToggledIn] = useState<boolean>(false)\r\n\r\n    const toggleActions = () => {\r\n        Utilities.toggleActions()\r\n        initToggleStatus()\r\n    }\r\n\r\n    const initToggleStatus = () => {\r\n        setActionsToggledIn(\r\n            Utilities.hasClass(\r\n                document.querySelector(\".blue-actions\"),\r\n                \"open\"\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        initToggleStatus()\r\n\r\n        const appWrapper = document.querySelector(\r\n            \".blue-wrapper\"\r\n        ) as HTMLElement\r\n        if (appWrapper) {\r\n            appWrapper.onclick = toggleActions\r\n        }\r\n\r\n        document\r\n            .querySelectorAll(\".blue-actions-menu .nav-link\")\r\n            .forEach((link) => {\r\n                link.addEventListener(\"click\", () => {\r\n                    if (actionsToggledIn) {\r\n                        toggleActions()\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className={`blue-actions navbar ${className} navbar-expand${_break !== \"none\" ? `-${_break}` : \"\"\r\n                } ${_break}`}\r\n        >\r\n            <div\r\n                className=\"blue-header-wrapper\"\r\n                onClick={Utilities.scrollToTop}\r\n            />\r\n            <ul className=\"blue-actions-menu nav navbar-nav navbar-right\">\r\n                {!actionsToggledIn && !hideToggleAction ? (\r\n                    <MenuItem\r\n                        className=\"blue-actions-menu-toggle\"\r\n                        onClick={() => toggleActions()}\r\n                        icon={toggleIcon}\r\n                        aria-label=\"Toggle menu\"\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                {children}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/Body\"\r\nimport Header from \"../../components/Header\"\r\nimport MenuItem from \"../../components/MenuItem\"\r\nimport HeaderTitle from \"../../components/HeaderTitle\"\r\nimport ActionMenu from \"../../components/ActionMenu\"\r\nimport { CloudSleet, ThreeDotsVertical } from \"react-bootstrap-icons\"\r\nimport { breakOption } from \"../../components/shared\"\r\n\r\nexport const ActionMenuExamplePage = () => {\r\n    const [breakProp, setBreakProp] = useState<breakOption | \"none\">(\"md\")\r\n\r\n    return (\r\n        <Page>\r\n            <Header>\r\n                <HeaderTitle appTitle=\"My app with an action menu\" />\r\n\r\n                <ActionMenu\r\n                    toggleIcon={<ThreeDotsVertical />}\r\n                    break={breakProp}\r\n                >\r\n                    <MenuItem label=\"I'm a MenuItem\" />\r\n\r\n                    <div>\r\n                        <MenuItem\r\n                            label=\"I'm a MenuItem with children\"\r\n                            supportOutside\r\n                            icon={<CloudSleet />}\r\n                        >\r\n                            <MenuItem label=\"I'm a MenuItem\" />\r\n                            <MenuItem label=\"Another one\" />\r\n                        </MenuItem>\r\n                    </div>\r\n                </ActionMenu>\r\n            </Header>\r\n            <Body className=\"mt-5\">\r\n                <label\r\n                    className=\"my-1 me-2\"\r\n                    htmlFor=\"ActionMenuExamplePage-breakProp\"\r\n                >\r\n                    <code>break</code> prop\r\n                </label>\r\n                <select\r\n                    className=\"form-select my-1 me-sm-2\"\r\n                    id=\"ActionMenuExamplePage-breakProp\"\r\n                    value={breakProp}\r\n                    onChange={({ target }) => setBreakProp(target.value as any)}\r\n                >\r\n                    <option value=\"sm\">sm</option>\r\n                    <option value=\"md\">md</option>\r\n                    <option value=\"lg\">lg</option>\r\n                    <option value=\"xl\">xl</option>\r\n                    <option value=\"none\">none</option>\r\n                </select>\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink,\r\n    Link\r\n} from \"react-router-dom\"\r\nimport Layout from \"../components/Layout\"\r\n\r\nimport \"./docs.scss\"\r\nimport { HomePage } from \"./pages/HomePage\"\r\nimport SidebarMenu from \"../components/SidebarMenu\"\r\nimport MenuItem from \"../components/MenuItem\"\r\n\r\nimport {\r\n    List,\r\n    House,\r\n    CodeSquare,\r\n    Puzzle,\r\n    Tools,\r\n    XCircleFill,\r\n    InfoCircleFill,\r\n    CheckCircleFill,\r\n    ExclamationCircleFill,\r\n    Palette2,\r\n    HouseFill,\r\n    PuzzleFill,\r\n    Stickies,\r\n    StickiesFill\r\n} from \"react-bootstrap-icons\"\r\n\r\nimport { ComponentPage } from \"./pages/ComponentPage\"\r\nimport { IntroDemoPage } from \"./pages/IntroDemoPage\"\r\nimport UtilitiesPage from \"./pages/UtilitiesPage\"\r\nimport HeaderTitle from \"../components/HeaderTitle\"\r\nimport { appTitle, logo } from \"./Global\"\r\nimport { RecipesPage } from \"./pages/RecipesPage\"\r\nimport { ActionMenuExamplePage } from \"./pages/ActionMenuExamplePage\"\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Layout\r\n                pages={[]}\r\n                unrouteable\r\n                expandSidebar\r\n                sidebarToggleIconComponent={<List />}\r\n                statusIcons={{\r\n                    danger: <XCircleFill />,\r\n                    info: <InfoCircleFill />,\r\n                    success: <CheckCircleFill />,\r\n                    warning: <ExclamationCircleFill />\r\n                }}\r\n                disableHeaders\r\n            >\r\n                <HeaderTitle sidebar>\r\n                    <Link to=\"/\">\r\n                        <img\r\n                            src={logo}\r\n                            className=\"blue-header-logo-image\"\r\n                            alt=\"B\"\r\n                        />\r\n                    </Link>{\" \"}\r\n                    <Link to=\"/\">{appTitle}</Link>\r\n                </HeaderTitle>\r\n\r\n                <SidebarMenu\r\n                    bottomContent={\r\n                        <>\r\n                            <MenuItem\r\n                                href=\"https://bruegmann.github.io/themify/customize\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                label=\"Customize with Themify\"\r\n                                icon={<Palette2 />}\r\n                            />\r\n\r\n                            <MenuItem\r\n                                href=\"https://github.com/bruegmann/blue-react\"\r\n                                icon={<CodeSquare />}\r\n                                label=\"Code on GitHub\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            />\r\n                        </>\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        icon={<House />}\r\n                        iconForActive={<HouseFill />}\r\n                        label=\"Start\"\r\n                        elementType={NavLink}\r\n                        exact\r\n                        to=\"/\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Tools />}\r\n                        label=\"Utilities\"\r\n                        elementType={NavLink}\r\n                        to=\"/utilities\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Puzzle />}\r\n                        iconForActive={<PuzzleFill />}\r\n                        label=\"React Components\"\r\n                        elementType={NavLink}\r\n                        to=\"/component\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Stickies />}\r\n                        iconForActive={<StickiesFill />}\r\n                        label=\"Recipes\"\r\n                        elementType={NavLink}\r\n                        to=\"/recipes\"\r\n                    />\r\n                </SidebarMenu>\r\n\r\n                <div className=\"router-page active\">\r\n                    <Switch>\r\n                        <Route path=\"/utilities\">\r\n                            <UtilitiesPage />\r\n                        </Route>\r\n                        <Route path=\"/component/:selectedComponent?\">\r\n                            <ComponentPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/intro-demo\">\r\n                            <IntroDemoPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/action-menu-example\">\r\n                            <ActionMenuExamplePage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/recipes/:active?\">\r\n                            <RecipesPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/\">\r\n                            <HomePage />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Layout>\r\n        </Router>\r\n    )\r\n}\r\n\r\nfunction _App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Layout\r\n                pages={[]}\r\n                unrouteable\r\n                expandSidebar\r\n                sidebarToggleIconComponent={<List />}\r\n                statusIcons={{\r\n                    danger: <XCircleFill />,\r\n                    info: <InfoCircleFill />,\r\n                    success: <CheckCircleFill />,\r\n                    warning: <ExclamationCircleFill />\r\n                }}\r\n                disableHeaders\r\n            >\r\n                <HeaderTitle sidebar>\r\n                    <Link to=\"/\">\r\n                        <img\r\n                            src={logo}\r\n                            className=\"blue-header-logo-image\"\r\n                            alt=\"B\"\r\n                        />\r\n                    </Link>{\" \"}\r\n                    <Link to=\"/\">{appTitle}</Link>\r\n                </HeaderTitle>\r\n\r\n                <SidebarMenu\r\n                    bottomContent={\r\n                        <>\r\n                            <MenuItem\r\n                                href=\"https://bruegmann.github.io/themify/customize\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                label=\"Customize with Themify\"\r\n                                icon={<Palette2 />}\r\n                            />\r\n\r\n                            <MenuItem\r\n                                href=\"https://github.com/bruegmann/blue-react\"\r\n                                icon={<CodeSquare />}\r\n                                label=\"Code on GitHub\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            />\r\n                        </>\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        icon={<House />}\r\n                        iconForActive={<HouseFill />}\r\n                        label=\"Start\"\r\n                        elementType={NavLink}\r\n                        exact\r\n                        to=\"/\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Tools />}\r\n                        label=\"Utilities\"\r\n                        elementType={NavLink}\r\n                        to=\"/utilities\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Puzzle />}\r\n                        iconForActive={<PuzzleFill />}\r\n                        label=\"React Components\"\r\n                        elementType={NavLink}\r\n                        to=\"/component\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Stickies />}\r\n                        iconForActive={<StickiesFill />}\r\n                        label=\"Recipes\"\r\n                        elementType={NavLink}\r\n                        to=\"/recipes\"\r\n                    />\r\n                </SidebarMenu>\r\n\r\n                <div className=\"router-page active\">\r\n                    <Switch>\r\n                        <Route path=\"/utilities\">\r\n                            <UtilitiesPage />\r\n                        </Route>\r\n                        <Route path=\"/component/:selectedComponent?\">\r\n                            <ComponentPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/intro-demo\">\r\n                            <IntroDemoPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/action-menu-example\">\r\n                            <ActionMenuExamplePage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/recipes/:active?\">\r\n                            <RecipesPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/\">\r\n                            <HomePage />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Layout>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It\"s the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\")\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can\"t reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\")\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            )\n        })\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister()\n            })\n            .catch((error) => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./docs/App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export type breakOption = \"sm\" | \"md\" | \"lg\" | \"xl\"\nexport type ModalType = \"ask\" | \"tell\" | \"verify\"\n\nexport type StatusType = null | \"loading\" | \"success\" | \"info\" | \"warning\" | \"danger\"\nexport interface StatusAlert {\n    title?: string\n    alertClassName?: string\n    close?: boolean\n    detailText?: string\n    status?: StatusType\n}\n\ninterface Phrases {\n    [key: string]: string[]\n}\n\nconst phrases: Phrases = {\n    Cancel: [\"Cancel\", \"Abbrechen\"],\n    Yes: [\"Yes\", \"Ja\"],\n    No: [\"No\", \"Nein\"],\n    Message: [\"Message\", \"Nachricht\"]\n}\n\nexport function getPhrase(\n    keyword: string,\n    countryCode: string | undefined = undefined,\n    _phrases: Phrases | undefined = undefined\n) {\n    countryCode =\n        countryCode || navigator.language.toLowerCase().indexOf(\"de\") > -1\n            ? \"de-DE\"\n            : \"en-US\"\n    _phrases = _phrases || phrases\n\n    if (_phrases[keyword]) {\n        if (countryCode.indexOf(\"de-\") > -1) {\n            return _phrases[keyword][1]\n        } else {\n            return _phrases[keyword][0]\n        }\n    } else {\n        return keyword\n    }\n}\n","import React, {\r\n    FormEvent,\r\n    useEffect,\r\n    useState,\r\n    MutableRefObject,\r\n    useRef\r\n} from \"react\"\r\nimport { Modal as BootstrapModal } from \"bootstrap\"\r\nimport { getPhrase, ModalType } from \"./shared\"\r\n\r\nexport interface ModalProps {\r\n    modalContent?: string\r\n    unSetModalContent: (modalContent?: string) => void\r\n\r\n    /**\r\n     * Type of `input` depends on `type` prop and which action occured.\r\n     * When it's a string, the user entered something. When it's a boolean, the user clicked \"Yes\" or \"No\".\r\n     * When it's `null`, the user cancelled the modal.\r\n     */\r\n    onSubmit?: (input: string | boolean | null) => void\r\n    defaultInput?: string\r\n\r\n    /**\r\n     * `\"ask\"` | `\"tell\"` | `\"verify\"`\r\n     */\r\n    type: ModalType\r\n}\r\n\r\n/**\r\n * Simple modal/dialog. Designed to work as an alternative to JavaScript's native `alert()`, `prompt()` and `confirm()` functions.\r\n * It uses Bootstrap's Modal components.\r\n *\r\n * For easy use, you should use the hook `useModal` together with `ModalProvider`. See the example below.\r\n */\r\nexport default function Modal({\r\n    modalContent,\r\n    unSetModalContent,\r\n    onSubmit,\r\n    defaultInput,\r\n    type\r\n}: ModalProps) {\r\n    const modalRef = useRef() as MutableRefObject<HTMLDivElement>\r\n    const [input, setInput] = useState<string>(defaultInput || \"\")\r\n    const cancel = () => {\r\n        unSetModalContent()\r\n        if (onSubmit) {\r\n            onSubmit(null)\r\n        }\r\n    }\r\n    const sayNo = () => {\r\n        unSetModalContent()\r\n        if (onSubmit) {\r\n            onSubmit(false)\r\n        }\r\n    }\r\n    const submit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        if (onSubmit) {\r\n            onSubmit(input || true)\r\n        }\r\n    }\r\n    const btnStyle = { maxWidth: \"10rem\" }\r\n    useEffect(() => {\r\n        setInput(defaultInput || \"\")\r\n    }, [defaultInput])\r\n\r\n    useEffect(() => {\r\n        const myModal = modalRef.current as unknown as Element\r\n        let bsModal = BootstrapModal.getInstance(myModal)\r\n\r\n        if (!bsModal) {\r\n            bsModal = new BootstrapModal(myModal)\r\n            bsModal.hide()\r\n\r\n            // When the user clicks on underlay to close the modal\r\n            myModal.addEventListener(\"hidden.bs.modal\", () => {\r\n                cancel()\r\n            })\r\n        } else {\r\n            modalContent !== undefined ? bsModal.show() : bsModal.hide()\r\n        }\r\n    }, [modalContent])\r\n\r\n    return (\r\n        <div className=\"modal\" ref={modalRef} tabIndex={-1}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <form onSubmit={submit}>\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">\r\n                                {getPhrase(\"Message\")}\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close\"\r\n                                onClick={cancel}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            {modalContent}\r\n                            {type === \"ask\" && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mt-1\"\r\n                                    value={input}\r\n                                    onChange={({ target }) =>\r\n                                        setInput(target.value)\r\n                                    }\r\n                                    autoFocus\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary d-block w-100\"\r\n                                style={btnStyle}\r\n                            >\r\n                                {type === \"verify\" ? getPhrase(\"Yes\") : \"OK\"}\r\n                            </button>\r\n                            {(type === \"ask\" || type === \"verify\") &&\r\n                                (type === \"verify\" ? (\r\n                                    <button\r\n                                        className=\"btn btn-outline-primary d-block w-100\"\r\n                                        style={btnStyle}\r\n                                        onClick={sayNo}\r\n                                    >\r\n                                        {getPhrase(\"No\")}\r\n                                    </button>\r\n                                ) : (\r\n                                    <button\r\n                                        className=\"btn btn-outline-primary d-block w-100\"\r\n                                        style={btnStyle}\r\n                                        onClick={cancel}\r\n                                    >\r\n                                        {getPhrase(\"Cancel\")}\r\n                                    </button>\r\n                                ))}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { createContext, ReactNode, useCallback, useContext, useState } from \"react\"\nimport { ModalType } from \"./shared\"\nimport Modal from \"./Modal\"\n\nconst ModalContext = createContext({\n    ask: undefined as unknown as (text: string) => Promise<string | boolean>,\n    tell: undefined as unknown as (text: string) => Promise<boolean>,\n    verify: undefined as unknown as (text: string) => Promise<boolean>\n})\n\nexport interface ModalProviderProps {\n    children?: ReactNode\n}\n\nconst ModalProvider = ({ children, ...rest }: ModalProviderProps) => {\n    const [type, setType] = useState<ModalType>(\"tell\")\n    const [modalContent, setModalContent] = useState<string | undefined>()\n    const [defaultInput, setDefaultInput] = useState<string | undefined>()\n    const unSetModalContent = useCallback(() => {\n        setModalContent(undefined)\n    }, [setModalContent])\n\n    const [onSubmit, setOnSubmit] = useState<\n        ((input: string | boolean | null) => void) | undefined\n    >()\n\n    const ask = (text: string) => {\n        return new Promise((resolve: (input: string | boolean) => void) => {\n            setType(\"ask\")\n            setModalContent(text)\n            setDefaultInput(\"\")\n            setOnSubmit(() => (input: string | boolean) => {\n                resolve(input)\n                setModalContent(undefined)\n                setDefaultInput(undefined)\n            })\n        })\n    }\n\n    const tell = (text: string) => {\n        return new Promise((resolve: (input: boolean) => void) => {\n            setType(\"tell\")\n            setModalContent(text)\n            setOnSubmit(() => (input: string | boolean) => {\n                resolve(input ? true : false)\n                setModalContent(undefined)\n            })\n        })\n    }\n\n    const verify = (text: string) => {\n        return new Promise((resolve: (input: boolean) => void) => {\n            setType(\"verify\")\n            setModalContent(text)\n            setOnSubmit(() => (input: string | boolean) => {\n                resolve(input ? true : false)\n                setModalContent(undefined)\n            })\n        })\n    }\n\n    return (\n        <ModalContext.Provider\n            value={{\n                ask,\n                tell,\n                verify\n            }}\n            {...rest}\n        >\n            {children}\n            <Modal\n                modalContent={modalContent}\n                unSetModalContent={unSetModalContent}\n                onSubmit={onSubmit}\n                defaultInput={defaultInput}\n                type={type}\n            />\n        </ModalContext.Provider>\n    )\n}\n\nconst useModal = () => {\n    const context = useContext(ModalContext)\n    if (context === undefined) {\n        throw new Error(\"useModal must be used within a ModalProvider\")\n    }\n    return context\n}\n\nexport { ModalProvider, useModal }\n","import { ModalProvider, useModal } from \"../../components/ModalProvider\"\r\n\r\nfunction InsideComp() {\r\n    // Use the `useModal` hook.\r\n    const { tell, verify, ask } = useModal()\r\n\r\n    return (\r\n        <div className=\"d-flex gap-2\">\r\n            <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={() => {\r\n                    tell(\"Hey, what's up\")\r\n                }}\r\n            >\r\n                tell\r\n            </button>\r\n\r\n            <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={\r\n                    // Make sure to make your function \"async\" when using \"await\"\r\n                    async () => {\r\n                        // Use \"await\" to wait until the user enters something\r\n                        const answer = await ask(\"What is 1 + 1?\")\r\n                        if (answer && parseInt(answer.toString()) === 2) {\r\n                            tell(\"That's correct!\")\r\n                        } else {\r\n                            tell(\"Wrong!\")\r\n                        }\r\n                    }\r\n                }\r\n            >\r\n                ask\r\n            </button>\r\n\r\n            <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={async () => {\r\n                    const answer = await verify(\"Are you sure?\")\r\n                    console.log({ answer })\r\n                    if (answer === true) {\r\n                        tell(\"So, you're sure\")\r\n                    }\r\n                }}\r\n            >\r\n                verify\r\n            </button>\r\n\r\n            <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={async () => {\r\n                    const name = await ask(\"What is your name?\")\r\n                    console.log(name)\r\n                    if (name) {\r\n                        const retVal = await tell(\"Hello, \" + name)\r\n                        console.log(retVal)\r\n\r\n                        if (await verify(\"Is everything alright?\")) {\r\n                            await tell(\"Oh, nice\")\r\n                        } else {\r\n                            await tell(\"Oh no :(\")\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                Start a conversation\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Your component where you use `useModal` has to be wrapped around `<ModalProvider></ModalProvider>`.\r\n * Best practice is to wrap it around your root component.\r\n */\r\nexport default function ModalProviderExample() {\r\n    return (\r\n        <ModalProvider>\r\n            <InsideComp />\r\n        </ModalProvider>\r\n    )\r\n}\r\n","import React, { ReactNode } from \"react\"\nimport clsx from \"clsx\"\nimport { StatusAlert, StatusType } from \"./shared\"\n\nexport interface StatusProps {\n    alert?: StatusAlert\n    onUnsetAlert?: () => void\n    successIcon?: ReactNode\n    infoIcon?: ReactNode\n    warningIcon?: ReactNode\n    dangerIcon?: ReactNode\n    status?: StatusType\n}\n\nexport default function Status({\n    alert,\n    onUnsetAlert,\n    successIcon = \"✔\",\n    infoIcon = \"ℹ️\",\n    warningIcon = \"⚠️\",\n    dangerIcon = \"❌\",\n    status = null\n}: StatusProps) {\n    return (\n        <>\n            <div\n                className={clsx(\n                    \"blue-status-circle blue-loading blue-status-loading\",\n                    {\n                        \"d-block\": status === \"loading\" || alert && alert.status === \"loading\"\n                    }\n                )}\n            >\n                <div className=\"spinner-bounce-circle\">\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n\n            <div\n                className={clsx(\"blue-status-circle blue-status-success\", {\n                    \"d-flex\": status === \"success\" || alert && alert.status === \"success\"\n                })}\n            >\n                {successIcon}\n            </div>\n\n            <div\n                className={clsx(\"blue-status-circle blue-status-info\", {\n                    \"d-flex\": status === \"info\" || alert && alert.status === \"info\"\n                })}\n            >\n                {infoIcon}\n            </div>\n\n            <div\n                className={clsx(\"blue-status-circle blue-status-warning\", {\n                    \"d-flex\": status === \"warning\" || alert && alert.status === \"warning\"\n                })}\n            >\n                {warningIcon}\n            </div>\n\n            <div\n                className={clsx(\"blue-status-circle blue-status-danger\", {\n                    \"d-flex\": status === \"danger\" || alert && alert.status === \"danger\"\n                })}\n            >\n                {dangerIcon}\n            </div>\n\n            <div className=\"blue-status-alert alert\">\n                <button\n                    type=\"button\"\n                    className=\"btn-close float-end mb-1\"\n                    aria-label=\"Close\"\n                />\n                <div className=\"alert-body\" />\n            </div>\n\n            {alert && (\n                <div\n                    className={clsx(\n                        \"blue-status-alert alert d-block\",\n                        alert.alertClassName,\n                        alert.status && `alert-${alert.status}`\n                    )}\n                >\n                    <button\n                        type=\"button\"\n                        className=\"btn-close float-end mb-1 d-inline-block\"\n                        aria-label=\"Close\"\n                        onClick={onUnsetAlert}\n                    />\n                    <div className=\"alert-body\">\n                        {alert.title && <h2>{alert.title}</h2>}\n                        {alert.detailText && <span>{alert.detailText}</span>}\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n","import React, { createContext, ReactNode, useContext, useState } from \"react\"\nimport { StatusAlert, StatusType } from \"./shared\"\nimport Status from \"./Status\"\n\nconst StatusContext = createContext({\n    setAlert: undefined as unknown as (alert: StatusAlert | null) => void,\n    setStatus: undefined as unknown as (status: StatusType) => void\n})\n\nexport interface StatusProviderProps {\n    children?: ReactNode\n    successIcon?: ReactNode\n    infoIcon?: ReactNode\n    warningIcon?: ReactNode\n    dangerIcon?: ReactNode\n}\n\nconst StatusProvider = ({\n    children,\n    successIcon,\n    infoIcon,\n    warningIcon,\n    dangerIcon,\n    ...rest\n}: StatusProviderProps) => {\n    const [alert, setAlert] = useState<StatusAlert | null>(null)\n    const [status, setStatus] = useState<StatusType>(null)\n\n    return (\n        <StatusContext.Provider\n            value={{\n                setAlert,\n                setStatus\n            }}\n            {...rest}\n        >\n            {children}\n            <Status\n                alert={alert || undefined}\n                onUnsetAlert={() => setAlert(null)}\n                successIcon={successIcon}\n                infoIcon={infoIcon}\n                warningIcon={warningIcon}\n                dangerIcon={dangerIcon}\n                status={status}\n            />\n        </StatusContext.Provider>\n    )\n}\n\nconst useStatus = () => {\n    const context = useContext(StatusContext)\n    if (context === undefined) {\n        throw new Error(\"useStatus must be used within a StatusProvider\")\n    }\n    return context\n}\n\nexport { useStatus, StatusProvider }\n","import {\n    CheckCircleFill,\n    ExclamationCircleFill,\n    InfoCircleFill,\n    XCircleFill\n} from \"react-bootstrap-icons\"\nimport { StatusProvider, useStatus } from \"../../components/StatusProvider\"\n\nfunction InsideComp() {\n    const { setAlert, setStatus } = useStatus()\n\n    return (\n        <>\n            <div className=\"mb-1 d-flex gap-1\">\n                <button\n                    className=\"btn btn-light\"\n                    onClick={() =>\n                        setAlert({\n                            title: \"Hello World\",\n                            status: \"success\"\n                        })\n                    }\n                >\n                    Set alert\n                </button>\n                <button\n                    className=\"btn btn-light\"\n                    onClick={() =>\n                        setAlert({\n                            title: \"Hello World\",\n                            status: \"danger\",\n                            detailText: `Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\n                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.`\n                        })\n                    }\n                >\n                    Set full alert\n                </button>\n                <button\n                    className=\"btn btn-light\"\n                    onClick={() => setAlert(null)}\n                >\n                    Unset alert\n                </button>\n            </div>\n\n            <div className=\"mb-1 d-flex gap-1\">\n                <button\n                    className=\"btn btn-light\"\n                    onClick={() => setStatus(\"loading\")}\n                >\n                    Show loading\n                </button>\n                <button\n                    className=\"btn btn-outline-success\"\n                    onClick={() => setStatus(\"success\")}\n                >\n                    Show success\n                </button>\n                <button\n                    className=\"btn btn-outline-info\"\n                    onClick={() => setStatus(\"info\")}\n                >\n                    Show info\n                </button>\n                <button\n                    className=\"btn btn-outline-warning\"\n                    onClick={() => setStatus(\"warning\")}\n                >\n                    Show warning\n                </button>\n                <button\n                    className=\"btn btn-outline-danger\"\n                    onClick={() => setStatus(\"danger\")}\n                >\n                    Show danger\n                </button>\n            </div>\n\n            <div className=\"mb-1 d-flex gap-1\">\n                <button\n                    className=\"btn btn-light\"\n                    onClick={() => setStatus(null)}\n                >\n                    Hide status\n                </button>\n            </div>\n        </>\n    )\n}\n\nexport default function StatusExample() {\n    return (\n        <StatusProvider\n            successIcon={<CheckCircleFill />}\n            infoIcon={<InfoCircleFill />}\n            warningIcon={<ExclamationCircleFill />}\n            dangerIcon={<XCircleFill />}\n        >\n            <InsideComp />\n        </StatusProvider>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport Utilities from \"./Utilities\"\n\nexport interface DocumentViewProps {\n    /**\n     * Source of the content (URL)\n     */\n    src?: string\n\n    /**\n     * Instead of a source, you can also set the content directly (HTML)\n     */\n    content?: string\n\n    /**\n     * MIME type of the content (e.g. \"application/pdf\")\n     */\n    mimeType: string\n\n    /**\n     * Label for the button to display\n     */\n    showDocumentLabel: string\n}\n\n/**\n * Tries to display content in an iframe. When the content can't displayed in an iframe, it will show a download button instead.\n */\nexport default function DocumentView({\n    content,\n    mimeType,\n    src = \"about:blank\",\n    showDocumentLabel = \"Show document\"\n}: DocumentViewProps) {\n    const uniqueId = \"document-view-\" + Utilities.guid()\n\n    const supportsIframe = () =>\n        mimeType === \"application/pdf\" ||\n        mimeType === \"image/png\" ||\n        mimeType === \"image/jpeg\" ||\n        mimeType === \"image/gif\" ||\n        mimeType === \"image/tiff\" ||\n        mimeType === \"text/plain\" ||\n        mimeType === \"text/html\"\n\n    useEffect(() => {\n        if (supportsIframe()) {\n            Utilities.startLoading()\n\n            if (content) {\n                let iframe = document.getElementById(\n                    uniqueId\n                ) as HTMLIFrameElement\n\n                if (iframe && iframe.contentWindow) {\n                    iframe.contentWindow.document.open()\n                    iframe.contentWindow.document.write(content)\n                    iframe.contentWindow.document.close()\n                }\n            }\n        }\n    }, [])\n\n    return (\n        <div>\n            {supportsIframe() ? (\n                <iframe\n                    id={uniqueId}\n                    className=\"document-view-iframe\"\n                    src={src}\n                    onLoad={({ target }: any) => {\n                        Utilities.finishLoading()\n\n                        const iframeContent =\n                            target.contentDocument ||\n                            target.contentWindow.document\n\n                        if (mimeType.indexOf(\"image/\") > -1) {\n                            let image = iframeContent.querySelector(\"img\")\n\n                            if (image) {\n                                if (image.offsetWidth > image.offsetHeight) {\n                                    image.style.width = \"100%\"\n                                } else {\n                                    image.style.height = \"100%\"\n                                }\n                            }\n                        }\n                    }}\n                />\n            ) : (\n                <a href={src} className=\"btn btn-secondary btn-lg d-block\">\n                    {showDocumentLabel}\n                </a>\n            )}\n        </div>\n    )\n}\n","import React from \"react\"\nimport DocumentView from \"../../components/DocumentView\"\n\nclass DocumentViewExample extends React.Component {\n    render() {\n        return (\n            <div>\n                <DocumentView\n                    src=\"/blue-react/v8/example-document.pdf\"\n                    mimeType=\"application/pdf\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default DocumentViewExample\n","import React from \"react\"\n\nexport interface CaretProps {\n    /**\n     * Indicates if open or not.\n     */\n    open?: boolean\n\n    /**\n     * By default the caret points to the right when closed. Set mirrored and it will point to the left.\n     */\n    mirrored?: boolean\n\n    className?: string\n}\n\n/**\n * Caret icon component.\n */\nexport default function Caret({ open, mirrored, className }: CaretProps) {\n    return (\n        <span\n            className={\n                \"caret \" +\n                (open ? \" caret-open \" : \"\") +\n                (mirrored ? \" caret-mirrored \" : \"\") +\n                className\n            }\n        />\n    )\n}\n","import React, { createElement } from \"react\"\n\nexport interface SwitchProps {\n    className?: string\n    checked?: boolean\n    onChange?: (event: React.ChangeEvent) => void\n\n    /**\n     * Sets label inside of the switch. If you set this, you should also set the className \"lg\" to make the switch larger.\n     */\n    sliderLabel?: string\n\n    /**\n     * You can change the type of the wrapper element. If you do, the `onChange` event might not be triggered.\n     */\n    elementType?: string\n\n    disabled?: boolean\n}\n\n/**\n * Switch.\n */\nexport default function Switch({\n    className,\n    checked,\n    onChange,\n    sliderLabel,\n    disabled,\n    elementType = \"label\"\n}: SwitchProps) {\n    return createElement(\n        elementType,\n        {\n            className: \"switch \" + (disabled ? \"disabled \" : \"\") + className\n        },\n        [\n            <input\n                key={0}\n                type=\"checkbox\"\n                checked={checked}\n                onChange={onChange}\n                disabled={disabled}\n            />,\n            <span key={1} className=\"slider round\" data-label={sliderLabel} />\n        ]\n    )\n}\n","let Utilities = {}\r\n\r\nUtilities.hasClass = function (el, className) {\r\n    if (el.classList) return el.classList.contains(className)\r\n    else\r\n        return !!el.className.match(\r\n            new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\")\r\n        )\r\n}\r\n\r\nUtilities.addClass = function (el, className) {\r\n    if (el.classList) el.classList.add(className)\r\n    else if (!Utilities.hasClass(el, className)) el.className += \" \" + className\r\n}\r\n\r\nUtilities.removeClass = function (el, className) {\r\n    if (el.classList) el.classList.remove(className)\r\n    else if (Utilities.hasClass(el, className))\r\n        el.className = el.className.replace(\r\n            new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"),\r\n            \" \"\r\n        )\r\n}\r\n\r\nUtilities.toggleClass = function (element, className) {\r\n    if (!element || !className) {\r\n        return\r\n    }\r\n\r\n    var classString = element.className,\r\n        nameIndex = classString.indexOf(className)\r\n    if (nameIndex === -1) {\r\n        classString += \" \" + className\r\n    } else {\r\n        classString =\r\n            classString.substr(0, nameIndex) +\r\n            classString.substr(nameIndex + className.length)\r\n    }\r\n    element.className = classString\r\n}\r\n\r\nUtilities.startLoading = function () {\r\n    document.querySelectorAll(\".blue-loading\")[0].style.display = \"block\"\r\n}\r\n\r\nUtilities.finishLoading = function () {\r\n    document.querySelectorAll(\".blue-loading\")[0].style.display = \"\"\r\n}\r\n\r\nUtilities.showSuccess = function () {\r\n    document.querySelectorAll(\".blue-status-success\")[0].style.display =\r\n        \"flex\"\r\n}\r\n\r\nUtilities.hideSuccess = function () {\r\n    document.querySelectorAll(\".blue-status-success\")[0].style.display = \"\"\r\n}\r\n\r\nUtilities.toggleActions = function () {\r\n    this.toggleClass(document.querySelector(\".blue-wrapper\"), \"active\")\r\n    this.toggleClass(document.querySelector(\".blue-layout\"), \"wrapper-in\")\r\n\r\n    var els = document.querySelectorAll(\".blue-actions\")\r\n    for (var i = 0; i < els.length; i++) {\r\n        this.toggleClass(els[i], \"open\")\r\n    }\r\n}\r\n\r\nUtilities.resetAlertMessage = function (alertClassName = \"info\") {\r\n    const alertElement = document.querySelectorAll(\".blue-status-alert\")[0]\r\n    document.querySelectorAll(\r\n        \".blue-status-\" + alertClassName\r\n    )[0].style.display = \"\"\r\n    alertElement.style.display = \"\"\r\n    this.removeClass(\r\n        alertElement,\r\n        \"alert-\" + (alertClassName === \"loading\" ? \"info\" : alertClassName)\r\n    )\r\n}\r\n\r\nUtilities.setAlertMessage = function (\r\n    message,\r\n    alertClassName = \"info\",\r\n    close = undefined,\r\n    detailText = undefined\r\n) {\r\n    const alertElement = document.querySelectorAll(\".blue-status-alert\")[0]\r\n\r\n    if (alertClassName.indexOf(\"alert-\") > -1) {\r\n        alertClassName = alertClassName.replace(\"alert-\", \"\")\r\n    }\r\n\r\n    document.querySelectorAll(\r\n        \".blue-status-\" + alertClassName\r\n    )[0].style.display = \"flex\"\r\n    alertElement.style.display = \"block\"\r\n    this.addClass(\r\n        alertElement,\r\n        \"alert-\" + (alertClassName === \"loading\" ? \"info\" : alertClassName)\r\n    )\r\n\r\n    alertElement.querySelector(\".alert-body\").innerHTML =\r\n        `<h2>` + message + `</h2>`\r\n    if (detailText) {\r\n        alertElement.querySelector(\".alert-body\").innerHTML +=\r\n            `<span>` + detailText + `</span>`\r\n    }\r\n\r\n    if (close) {\r\n        alertElement.querySelector(\".btn-close\").style.display = \"inline-block\"\r\n        alertElement.querySelector(\".btn-close\").onclick = () => {\r\n            this.resetAlertMessage(alertClassName)\r\n        }\r\n    } else {\r\n        alertElement.querySelector(\".btn-close\").style.display = \"none\"\r\n    }\r\n}\r\n\r\nUtilities.guid = function () {\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1)\r\n    }\r\n    return (\r\n        s4() +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        s4() +\r\n        s4()\r\n    )\r\n}\r\n\r\nUtilities.scrollToTop = () => {\r\n    const routerPage = document.querySelector(\".router-page.active\")\r\n\r\n    routerPage.scroll({\r\n        behavior: \"smooth\",\r\n        left: 0,\r\n        top: 0\r\n    })\r\n}\r\n\r\nUtilities.fetchData = function (\r\n    input,\r\n    init = undefined,\r\n    showErrorDetail = true,\r\n    onError = undefined\r\n) {\r\n    return fetch(input, init)\r\n        .then((response) => {\r\n            if (!response.ok) throw response\r\n            return response\r\n        })\r\n        .catch((reason) => {\r\n            if (reason.text) {\r\n                reason.text().then((errorMessage) => {\r\n                    Utilities.setAlertMessage(\r\n                        `${reason.status} - ${reason.statusText}`,\r\n                        \"danger\",\r\n                        true,\r\n                        showErrorDetail ? errorMessage : undefined\r\n                    )\r\n\r\n                    if (onError) {\r\n                        onError(errorMessage, reason)\r\n                    }\r\n                })\r\n            }\r\n            throw reason\r\n        })\r\n}\r\n\r\nexport default Utilities\r\n","import React, { useState } from \"react\"\r\nimport MenuItem from \"./MenuItem\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface SearchProps {\r\n    autoFocus?: boolean\r\n\r\n    /**\r\n     * Is component inside of a page?\r\n     */\r\n    body?: boolean\r\n\r\n    className?: string\r\n    icon?: any\r\n    onChange?: (event: React.ChangeEvent) => void\r\n    onSubmit?: (event: React.FormEvent) => void\r\n    placeholder?: string\r\n\r\n    /**\r\n     * Allow reset?\r\n     */\r\n    reset?: boolean\r\n\r\n    /**\r\n     * Define custom icon for the reset button.\r\n     */\r\n    resetIcon?: any\r\n\r\n    /**\r\n     * Is component inside of the sidebar?\r\n     */\r\n    sidebar?: boolean\r\n\r\n    value?: string\r\n}\r\n\r\n/**\r\n * A search bar that can be placed to the sidebar or on a page.\r\n */\r\nexport default function Search(props: SearchProps) {\r\n    const {\r\n        autoFocus,\r\n        body,\r\n        className,\r\n        icon,\r\n        onChange,\r\n        onSubmit,\r\n        placeholder,\r\n        reset,\r\n        resetIcon,\r\n        sidebar\r\n    } = props\r\n    const SearchControlId = \"blue-search-control-\" + Utilities.guid()\r\n\r\n    const [value, setValue] = useState<string>(props.value || \"\")\r\n    const [focus, setFocus] = useState<boolean>(false)\r\n\r\n    const toggleSidebar = () => {\r\n        if (sidebar) {\r\n            document.dispatchEvent(window.toggleSidebarEvent)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className={\r\n                \"blue-search \" +\r\n                (body ? \"blue-search-body \" : \"\") +\r\n                (focus ? \"focus \" : \"\") +\r\n                (sidebar ? \"blue-search-sidebar \" : \"\") +\r\n                className\r\n            }\r\n            onSubmit={(event) => {\r\n                event.preventDefault()\r\n                toggleSidebar()\r\n                if (onSubmit) onSubmit(event)\r\n            }}\r\n        >\r\n            <div className=\"blue-search-input-group input-group\">\r\n                <span\r\n                    className=\"input-group-text\"\r\n                    onClick={() =>\r\n                        document.getElementById(SearchControlId)?.focus()\r\n                    }\r\n                >\r\n                    {icon || (\r\n                        <span>\r\n                            <svg\r\n                                width=\"1em\"\r\n                                height=\"1em\"\r\n                                viewBox=\"0 0 16 16\"\r\n                                className=\"bi bi-search mt-n1\"\r\n                                fill=\"currentColor\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"\r\n                                />\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"\r\n                                />\r\n                            </svg>\r\n                        </span>\r\n                    )}\r\n                </span>\r\n\r\n                <input\r\n                    type=\"search\"\r\n                    value={value}\r\n                    onChange={(event) => {\r\n                        setValue(event.target.value)\r\n                        if (onChange) onChange(event)\r\n                    }}\r\n                    id={SearchControlId}\r\n                    className=\"blue-search-control form-control default input-lg\"\r\n                    placeholder={placeholder}\r\n                    autoFocus={autoFocus}\r\n                    style={{\r\n                        zIndex: body ? 0 : undefined\r\n                    }}\r\n                    onFocus={() => setFocus(true)}\r\n                    onBlur={() => setFocus(false)}\r\n                />\r\n\r\n                {reset && value.length > 0 && (\r\n                    <div className=\"input-group-btn\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"blue-search-reset-btn btn btn-link btn-lg\"\r\n                            onClick={() => {\r\n                                setValue(\"\")\r\n                                document\r\n                                    .getElementById(SearchControlId)\r\n                                    ?.focus()\r\n                                if (onChange)\r\n                                    onChange({\r\n                                        target: {\r\n                                            value: \"\"\r\n                                        }\r\n                                    } as any)\r\n                            }}\r\n                        >\r\n                            {resetIcon || (\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"1em\"\r\n                                    height=\"1em\"\r\n                                    fill=\"currentColor\"\r\n                                    className=\"bi bi-x mt-n1\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                >\r\n                                    <path d=\"M4.646 4.646a.5.5 0 01.708 0L8 7.293l2.646-2.647a.5.5 0 01.708.708L8.707 8l2.647 2.646a.5.5 0 01-.708.708L8 8.707l-2.646 2.647a.5.5 0 01-.708-.708L7.293 8 4.646 5.354a.5.5 0 010-.708z\"></path>\r\n                                </svg>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {sidebar && (\r\n                <MenuItem\r\n                    href=\"#\"\r\n                    className=\"blue-search-btn\"\r\n                    icon={icon}\r\n                    onClick={(event) => {\r\n                        event.preventDefault()\r\n                        toggleSidebar()\r\n                        setTimeout(() => {\r\n                            ; (\r\n                                document.querySelector(\r\n                                    \".blue-search-control\"\r\n                                ) as HTMLInputElement | null\r\n                            )?.select()\r\n                        }, 200)\r\n                    }}\r\n                />\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n"],"sourceRoot":""}