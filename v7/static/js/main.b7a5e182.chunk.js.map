{"version":3,"sources":["components/FluentBtn.tsx","components/MenuItem.tsx","components/Switch.tsx","components/Caret.tsx","components/Utilities.js","docs/examples sync /^/.*/.tsx$","docs/examples sync /^/.*/.js$","docs/examples/ActionMenu.js","docs/examples/Actions.js","docs/examples/Caret.js","docs/examples/FluentBtn.js","docs/examples/Search.js","docs/examples/Switch.js","components/Grid.tsx","components/Page.tsx","components/Body.tsx","docs/images/blue.svg","docs/Global.ts","docs/components/ReactIcon.tsx","docs/components/VersionToggle.tsx","docs/components/Footer.tsx","docs/components/IntroductionSections.tsx","docs/images/stackblitz.png","docs/components/StackblitzEmbed.tsx","docs/pages/HomePage.tsx","components/SidebarMenu.tsx","docs/components/ComponentDocs.tsx","docs/pages/ComponentPage.tsx","components/Intro.tsx","docs/pages/IntroDemoPage.tsx","docs/components/NormalScrollbarDemo.tsx","docs/components/HashLink.tsx","docs/pages/UtilitiesPage.tsx","components/Header.tsx","components/Actions.tsx","components/HeaderTitle.tsx","docs/pages/ActionsExamplePage.tsx","docs/components/Recipe.tsx","docs/pages/RecipesPage.tsx","components/ActionMenu.tsx","docs/pages/ActionMenuExamplePage.tsx","docs/App.tsx","serviceWorker.ts","index.tsx","components/shared.ts","components/Modal.tsx","components/ModalProvider.tsx","docs/examples/Modal.tsx","components/DocumentView.tsx","docs/examples/DocumentView.js","components/DropdownMenuItem.tsx","docs/examples/DropdownMenuItem.js","components/Outside.tsx","components/Search.tsx"],"names":["FluentBtn","props","ballClassName","_props","Object","keys","forEach","key","className","light","href","children","MenuItem","useState","showDropdown","setShowDropdown","active","setActive","checkActive","window","location","hash","indexOf","isHome","useEffect","addEventListener","icon","iconForActive","isActive","passingProps","id","Utilities","guid","removeFromAttrs","includes","createElement","elementType","label","onClick","event","preventDefault","scrollToTop","clsx","hasIconForActive","open","mirrored","supportOutside","dropdownClassName","onClickOutside","target","hasClass","Switch","checked","onChange","sliderLabel","disabled","type","Caret","el","classList","contains","match","RegExp","add","remove","replace","element","classString","nameIndex","substr","length","document","querySelectorAll","style","display","this","toggleClass","querySelector","els","i","alertClassName","alertElement","removeClass","message","close","undefined","detailText","addClass","innerHTML","onclick","resetAlertMessage","s4","Math","floor","random","toString","substring","scroll","behavior","left","top","btn","btnBall","getBoundingClientRect","offset","scrollX","scrollY","x","pageX","y","pageY","removeEventListener","fluentBtnsListener","unregisterFluentBtns","input","init","showErrorDetail","onError","fetch","then","response","ok","catch","reason","text","errorMessage","setAlertMessage","status","statusText","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","ActionMenuExample","isChecked","setIsChecked","width","innerWidth","to","rel","src","process","title","ActionsExample","headerless","setHeaderless","CaretExample","state","isOpen","setState","React","Component","FluentBtnExample","registerFluentBtns","SearchExample","search","body","value","onSubmit","alert","placeholder","reset","SwitchExample","toggleSidebarEvent","CustomEvent","Grid","defaultMatch","eventListeners","blueGridRef","sidebarIn","history","hashHistory","blockRouting","hideSidebar","bind","initMatch","me","toggleSidebar","xPos","touches","onHashChange","prevProps","prevState","eventListener","pageId","callback","newMatch","split","filter","n","unrouteable","push","concat","param1","param2","param3","hideSidebarMenu","expandSidebar","disableHeaders","roundedBody","sidebarToggleIconComponent","pages","page","name","component","statusIcons","success","info","warning","danger","disableTitleSet","Page","hasHeader","setHasHeader","elementRef","useRef","current","headerElement","titleElement","innerText","ref","Body","containerClass","hasActions","rounded","rest","pageBodyClassName","break","logo","appTitle","ReactIcon","xmlns","fillRule","strokeLinejoin","strokeMiterlimit","clipRule","viewBox","fill","height","d","transform","cx","cy","r","VersionToggle","show","setShow","dropdownRef","myElement","bsDropdown","Dropdown","getInstance","hide","Outside","minWidth","Footer","Date","getFullYear","IntroductionSections","appCode","setAppCode","pageCode","setPageCode","scssCode","setScssCode","fetchFromGitHub","path","a","url","json","ghContent","content","decoded","atob","fetchAppCode","sections","syntaxHighlighterStyle","language","s","encodeURIComponent","StackblitzEmbed","loadIframe","setLoadIframe","backgroundImage","image","packageJson","require","HomePage","version","alt","SidebarMenu","fluent","hasShadow","setHasShadow","updateDimensions","innerHeight","blueAppSidebar","scrollHeight","clientHeight","scrollTop","sidebarClass","sidebarStyle","topContent","menuClass","menuStyle","bottomContent","ComponentDocs","ExampleComponent","comp","displayName","ex","standalone","prepareForMarkdown","description","j","defaultValue","tsType","raw","exampleCode","scrollTo","console","log","docs","ComponentPage","selectedComponent","useParams","setValue","components","setComponents","array_docs","values","routerPageElement","zIndex","Search","arr","target_value","toLowerCase","featured","hideToggleAction","mimeType","navItemClassName","onToggle","showDocumentLabel","display_Name","some","val","maxHeight","index","Intro","logoMaxWidth","maxWidth","IntroDemoPage","dangerouslySetInnerHTML","__html","NormalScrollbarDemo","showModal","setShowModal","toggleShowModal","Modal","toggle","ModalHeader","multiple","HashLink","utilitiesFunctions","definition","demo","startLoading","finishLoading","showSuccess","hideSuccess","UtilitiesPage","didScroll","sort","b","fun","Header","Actions","setOpen","newOpen","getElementById","sectionHeight","setAttribute","expandSection","elementTransition","transition","requestAnimationFrame","collapseSection","controlsClassName","HeaderTitle","keepAppTitle","sidebar","uniqueId","setDocumentTitle","titlePaths","trim","MyFeaturedMenuItem","ActionsExamplePage","renderers","Recipe","recipe","markdown","setMarkdown","fetchRecipe","download_url","source","sourceUri","html_url","transformImageUri","uri","github","org","repo","filename","RecipesPage","recipes","setRecipes","activeRecipe","setActiveRecipe","fetchRecipes","contents","Array","isArray","c","endsWith","sha","ActionMenu","toggleIcon","_break","actionsToggledIn","setActionsToggledIn","toggleActions","initToggleStatus","appWrapper","link","ActionMenuExamplePage","breakProp","setBreakProp","htmlFor","App","basename","NavLink","exact","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","phrases","Cancel","Yes","No","Message","getPhrase","keyword","countryCode","_phrases","modalContent","unSetModalContent","defaultInput","modalRef","setInput","cancel","btnStyle","myModal","bsModal","BootstrapModal","tabIndex","autoFocus","ModalContext","createContext","ask","tell","verify","ModalProvider","setType","setModalContent","setDefaultInput","useCallback","setOnSubmit","Provider","Promise","InsideComp","context","useContext","useModal","answer","parseInt","retVal","ModalExample","DocumentView","supportsIframe","iframe","contentWindow","write","onLoad","iframeContent","contentDocument","offsetWidth","offsetHeight","DocumentViewExample","DropdownMenuItem","DropdownMenuItemExample","wrapperRef","handleClickOutside","resetIcon","SearchControlId","focus","setFocus","dispatchEvent","onFocus","onBlur","setTimeout","select"],"mappings":"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","file":"static/js/main.b7a5e182.chunk.js","sourcesContent":["import React from \"react\"\n\nexport interface FluentBtnProps {\n    /**\n     * Content of the button. You can also set all other props you would give a button or a link.\n     */\n    children?: any\n\n    className?: string\n\n    /**\n     * If set, it will be an `<a>` element. Otherwise it will be a `<button>`.\n     */\n    href?: string\n\n    /**\n     * Can be set for buttons with white background. The glow will be a little bit darker than.\n     */\n    light?: boolean\n\n    type?: string\n    title?: string\n    style?: any\n    onClick?: (e?: any) => void\n}\n\n/**\n * Shortcut for `<button class=\"fluent-btn\"><div className=\"fluent-btn-ball\"></div></button>`.\n * Button with a fancy and fluent acrylic effect.\n */\nexport default function FluentBtn(props: FluentBtnProps) {\n    const ballClassName = \"fluent-btn-ball\"\n\n    let _props: { [key: string]: any } = {}\n\n    Object.keys(props).forEach((key) => {\n        if (key !== \"light\") {\n            _props[key] = (props as { [key: string]: any })[key]\n        }\n    })\n\n    _props.className =\n        \"fluent-btn \" + props.className + (props.light ? \" light\" : \"\")\n\n    return props.href ? (\n        <a {..._props}>\n            <div className={ballClassName} />\n            {props.children}\n        </a>\n    ) : (\n        <button {..._props}>\n            <div className={ballClassName} />\n            {props.children}\n        </button>\n    )\n}\n","import clsx from \"clsx\"\nimport React, { createElement, useEffect, useState } from \"react\"\nimport Caret from \"./Caret\"\nimport Outside from \"./Outside\"\nimport Utilities from \"./Utilities\"\n\nexport interface MenuItemProps {\n    /**\n     * Sets `to` prop, e.g. when you use the `NavLink` component from React Router.\n     */\n    to?: string\n\n    /**\n     * Prop for components by React Router.\n     */\n    exact?: boolean\n\n    href?: string\n    onClick?: (event: React.MouseEvent) => void\n\n    /**\n     * Icon component or a class name.\n     */\n    icon?: any\n\n    /**\n     * Icon component or a class name when the MenuItem is active.\n     */\n    iconForActive?: any\n\n    /**\n     * Label of the link.\n     */\n    label?: any\n\n    /**\n     * Should be set as active.\n     */\n    isActive?: boolean\n\n    /**\n     * When using Blue React's routing system: define this link as home page link.\n     */\n    isHome?: boolean\n\n    /**\n     * Extends class name of the dropdown menu.\n     */\n    dropdownClassName?: string\n\n    /**\n     * Set children to create a nested `MenuItem` as a dropdown.\n     */\n    children?: any\n\n    /**\n     * Defines class name.\n     */\n    className?: any\n\n    /**\n     * Defines dropdown status from outside.\n     */\n    showDropdown?: boolean\n\n    /**\n     * Close on click outside.\n     */\n    supportOutside?: boolean\n\n    /**\n     * By default, MenuItem is a `\"button\"</button>. If you set a `href`, it's a `\"a\"`.\n     * If you want to have it another type, you can pass a component reference with this prop (e.g. `Link`).\n     */\n    elementType?: any\n\n    target?: string\n    rel?: string\n    title?: string\n}\n\n/**\n * Link, button or custom component for Sidebar, Actions or ActionMenu\n */\nexport default function MenuItem(props: MenuItemProps) {\n    const [showDropdown, setShowDropdown] = useState<boolean>(false)\n    const [active, setActive] = useState<boolean>(false)\n\n    const checkActive = () => {\n        setActive(\n            (props.href && window.location.hash.indexOf(props.href) > -1) ||\n                (props.isHome &&\n                    (window.location.hash === \"\" ||\n                        window.location.hash === \"#/\"))\n                ? true\n                : false\n        )\n    }\n\n    const onClick = (event: MouseEvent) => {\n        if (props.href === \"#\") {\n            event.preventDefault()\n        }\n\n        if (props.onClick) {\n            props.onClick(event as any)\n        }\n\n        if (props.children) {\n            setShowDropdown(!showDropdown)\n        }\n\n        // When user clicks again on active menu item, scroll to top of page\n        if (props.href && props.href === window.location.hash) {\n            Utilities.scrollToTop()\n        }\n    }\n\n    const onClickOutside = ({ target }: MouseEvent) => {\n        // Don't trigger when clicking on MenuItem\n        if (\n            !Utilities.hasClass(target, \"blue-app-sidebar-dropdown-toggle\") &&\n            !Utilities.hasClass(target, \"blue-app-sidebar-label\")\n        ) {\n            setShowDropdown(false)\n        }\n    }\n\n    useEffect(() => {\n        checkActive()\n        window.addEventListener(\"hashchange\", () => {\n            checkActive()\n        })\n    }, [])\n\n    const className =\n        \"blue-app-toggle-page blue-app-sidebar-btn btn\" +\n        (props.isActive ? \" active\" : \"\") +\n        (props.className ? \" \" + props.className : \"\") +\n        (props.children ? \" blue-app-sidebar-dropdown-toggle\" : \"\")\n\n    let icon, iconForActive\n\n    if (typeof props.icon === \"string\") {\n        // is className\n        icon = (\n            <span\n                className={\n                    props.icon +\n                    (props.children ? \" blue-app-sidebar-dropdown-icon\" : \"\")\n                }\n            />\n        )\n    } else {\n        // is element / component\n        icon = props.icon\n    }\n\n    if (typeof props.iconForActive === \"string\") {\n        // is className\n        iconForActive = (\n            <span\n                className={\n                    props.iconForActive +\n                    (props.children ? \" blue-app-sidebar-dropdown-icon\" : \"\")\n                }\n            />\n        )\n    } else {\n        // is element / component\n        iconForActive = props.iconForActive\n    }\n\n    let passingProps = {\n        id: \"blue-action-menu-item-\" + Utilities.guid()\n    } as { [key: string]: any }\n\n    const removeFromAttrs = [\n        \"isActive\",\n        \"isHome\",\n        \"children\",\n        \"dropdownClassName\",\n        \"showDropdown\",\n        \"supportOutside\",\n        \"elementType\"\n    ]\n\n    Object.keys(props).forEach((key) => {\n        if (!removeFromAttrs.includes(key)) {\n            passingProps[key] = (props as { [key: string]: any })[key]\n        }\n    })\n\n    return (\n        <div>\n            {createElement(\n                props.elementType || (props.href ? \"a\" : \"button\"),\n                {\n                    ...passingProps,\n                    className:\n                        className +\n                        (props.isActive || active ? \" active\" : \"\") +\n                        (props.label ? \" has-label\" : \"\"),\n                    onClick\n                },\n                <>\n                    <span\n                        className={clsx(\"blue-app-menu-item-icon\", {\n                            hasIconForActive: iconForActive\n                        })}\n                    >\n                        {icon}\n                    </span>\n                    {iconForActive && (\n                        <span className=\"blue-app-menu-item-icon iconForActive\">\n                            {iconForActive}\n                        </span>\n                    )}\n                    {props.label && (\n                        <span className=\"blue-app-sidebar-label text-truncate\">\n                            {props.label}\n                        </span>\n                    )}\n                    {props.children && (\n                        <Caret\n                            open={showDropdown}\n                            mirrored\n                            className=\"blue-app-sidebar-dropdown-caret mt-2\"\n                        />\n                    )}\n                </>\n            )}\n\n            {showDropdown &&\n                (props.supportOutside ? (\n                    <Outside\n                        className={`blue-app-sidebar-dropdown ${props.dropdownClassName}`}\n                        onClickOutside={onClickOutside}\n                    >\n                        {props.children}\n                    </Outside>\n                ) : (\n                    <div\n                        className={`blue-app-sidebar-dropdown ${props.dropdownClassName}`}\n                    >\n                        {props.children}\n                    </div>\n                ))}\n        </div>\n    )\n}\n","import React, { createElement } from \"react\"\n\nexport interface SwitchProps {\n    className?: string\n    checked?: boolean\n    onChange?: (event: React.ChangeEvent) => void\n\n    /**\n     * Sets label inside of the switch. If you set this, you should also set the className \"lg\" to make the switch larger.\n     */\n    sliderLabel?: string\n\n    /**\n     * You can change the type of the wrapper element. If you do, the `onChange` event might not be triggered.\n     */\n    elementType?: string\n\n    disabled?: boolean\n}\n\n/**\n * Switch.\n */\nexport default function Switch({\n    className,\n    checked,\n    onChange,\n    sliderLabel,\n    disabled,\n    elementType = \"label\"\n}: SwitchProps) {\n    return createElement(\n        elementType,\n        {\n            className: \"switch \" + (disabled ? \"disabled \" : \"\") + className\n        },\n        [\n            <input\n                key={0}\n                type=\"checkbox\"\n                checked={checked}\n                onChange={onChange}\n                disabled={disabled}\n            />,\n            <span key={1} className=\"slider round\" data-label={sliderLabel} />\n        ]\n    )\n}\n","import React from \"react\"\n\nexport interface CaretProps {\n    /**\n     * Indicates if open or not.\n     */\n    open?: boolean\n\n    /**\n     * By default the caret points to the right when closed. Set mirrored and it will point to the left.\n     */\n    mirrored?: boolean\n\n    className?: string\n}\n\n/**\n * Caret icon component.\n */\nexport default function Caret({ open, mirrored, className }: CaretProps) {\n    return (\n        <span\n            className={\n                \"caret \" +\n                (open ? \" caret-open \" : \"\") +\n                (mirrored ? \" caret-mirrored \" : \"\") +\n                className\n            }\n        />\n    )\n}\n","let Utilities = {}\n\nUtilities.hasClass = function (el, className) {\n    if (el.classList) return el.classList.contains(className)\n    else\n        return !!el.className.match(\n            new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\")\n        )\n}\n\nUtilities.addClass = function (el, className) {\n    if (el.classList) el.classList.add(className)\n    else if (!Utilities.hasClass(el, className)) el.className += \" \" + className\n}\n\nUtilities.removeClass = function (el, className) {\n    if (el.classList) el.classList.remove(className)\n    else if (Utilities.hasClass(el, className))\n        el.className = el.className.replace(\n            new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"),\n            \" \"\n        )\n}\n\nUtilities.toggleClass = function (element, className) {\n    if (!element || !className) {\n        return\n    }\n\n    var classString = element.className,\n        nameIndex = classString.indexOf(className)\n    if (nameIndex === -1) {\n        classString += \" \" + className\n    } else {\n        classString =\n            classString.substr(0, nameIndex) +\n            classString.substr(nameIndex + className.length)\n    }\n    element.className = classString\n}\n\nUtilities.startLoading = function () {\n    document.querySelectorAll(\".blue-app-loading\")[0].style.display = \"block\"\n}\n\nUtilities.finishLoading = function () {\n    document.querySelectorAll(\".blue-app-loading\")[0].style.display = \"\"\n}\n\nUtilities.showSuccess = function () {\n    document.querySelectorAll(\".blue-app-status-success\")[0].style.display =\n        \"flex\"\n}\n\nUtilities.hideSuccess = function () {\n    document.querySelectorAll(\".blue-app-status-success\")[0].style.display = \"\"\n}\n\nUtilities.toggleActions = function () {\n    this.toggleClass(document.querySelector(\".blue-app-wrapper\"), \"active\")\n    this.toggleClass(document.querySelector(\".blue-app-grid\"), \"wrapper-in\")\n\n    var els = document.querySelectorAll(\".blue-app-actions\")\n    for (var i = 0; i < els.length; i++) {\n        this.toggleClass(els[i], \"open\")\n    }\n}\n\nUtilities.resetAlertMessage = function (alertClassName = \"info\") {\n    const alertElement = document.querySelectorAll(\".blue-app-status-alert\")[0]\n    document.querySelectorAll(\n        \".blue-app-status-\" + alertClassName\n    )[0].style.display = \"\"\n    alertElement.style.display = \"\"\n    this.removeClass(\n        alertElement,\n        \"alert-\" + (alertClassName === \"loading\" ? \"info\" : alertClassName)\n    )\n}\n\nUtilities.setAlertMessage = function (\n    message,\n    alertClassName = \"info\",\n    close = undefined,\n    detailText = undefined\n) {\n    const alertElement = document.querySelectorAll(\".blue-app-status-alert\")[0]\n\n    if (alertClassName.indexOf(\"alert-\") > -1) {\n        alertClassName = alertClassName.replace(\"alert-\", \"\")\n    }\n\n    document.querySelectorAll(\n        \".blue-app-status-\" + alertClassName\n    )[0].style.display = \"flex\"\n    alertElement.style.display = \"block\"\n    this.addClass(\n        alertElement,\n        \"alert-\" + (alertClassName === \"loading\" ? \"info\" : alertClassName)\n    )\n\n    alertElement.querySelector(\".alert-body\").innerHTML =\n        `<h2>` + message + `</h2>`\n    if (detailText) {\n        alertElement.querySelector(\".alert-body\").innerHTML +=\n            `<span>` + detailText + `</span>`\n    }\n\n    if (close) {\n        alertElement.querySelector(\".btn-close\").style.display = \"inline-block\"\n        alertElement.querySelector(\".btn-close\").onclick = () => {\n            this.resetAlertMessage(alertClassName)\n        }\n    } else {\n        alertElement.querySelector(\".btn-close\").style.display = \"none\"\n    }\n}\n\nUtilities.guid = function () {\n    function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1)\n    }\n    return (\n        s4() +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        s4() +\n        s4()\n    )\n}\n\nUtilities.scrollToTop = () => {\n    const routerPage = document.querySelector(\".router-page.active\")\n\n    routerPage.scroll({\n        behavior: \"smooth\",\n        left: 0,\n        top: 0\n    })\n}\n\nUtilities.fluentBtnsListener = (event, btn) => {\n    const btnBall = btn.querySelector(\".fluent-btn-ball\")\n    const el = btn.getBoundingClientRect()\n    const offset = {\n        left: el.left + window.scrollX,\n        top: el.top + window.scrollY\n    }\n\n    const x = event.pageX - offset.left\n    const y = event.pageY - offset.top\n\n    btnBall.style.left = x + \"px\"\n    btnBall.style.top = y + \"px\"\n}\n\nUtilities.unregisterFluentBtns = () => {\n    const btns = document.querySelectorAll(\".fluent-btn\")\n\n    btns.forEach((btn) => {\n        btn.removeEventListener(\"mousemove\", (event) =>\n            Utilities.fluentBtnsListener(event, btn)\n        )\n    })\n}\n\nUtilities.registerFluentBtns = () => {\n    Utilities.unregisterFluentBtns()\n\n    const btns = document.querySelectorAll(\".fluent-btn\")\n\n    btns.forEach((btn) => {\n        btn.addEventListener(\"mousemove\", (event) =>\n            Utilities.fluentBtnsListener(event, btn)\n        )\n    })\n}\n\nUtilities.fetchData = function (\n    input,\n    init = undefined,\n    showErrorDetail = true,\n    onError = undefined\n) {\n    return fetch(input, init)\n        .then((response) => {\n            if (!response.ok) throw response\n            return response\n        })\n        .catch((reason) => {\n            if (reason.text) {\n                reason.text().then((errorMessage) => {\n                    Utilities.setAlertMessage(\n                        `${reason.status} - ${reason.statusText}`,\n                        \"danger\",\n                        true,\n                        showErrorDetail ? errorMessage : undefined\n                    )\n\n                    if (onError) {\n                        onError(errorMessage, reason)\n                    }\n                })\n            }\n            throw reason\n        })\n}\n\nexport default Utilities\n","var map = {\n\t\"./Modal.tsx\": 480\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 463;","var map = {\n\t\"./ActionMenu.js\": 465,\n\t\"./Actions.js\": 467,\n\t\"./Caret.js\": 468,\n\t\"./DocumentView.js\": 481,\n\t\"./DropdownMenuItem.js\": 482,\n\t\"./FluentBtn.js\": 469,\n\t\"./Search.js\": 470,\n\t\"./Switch.js\": 471\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 464;","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Switch from \"../../components/Switch\"\n\nfunction ActionMenuExample() {\n    const [isChecked, setIsChecked] = useState(false)\n    const toggleIsChecked = () => setIsChecked(!isChecked)\n\n    const style = {\n        width: isChecked && window.innerWidth > 600 ? \"600px\" : \"\"\n    }\n\n    return (\n        <div>\n            <Switch\n                className=\"lg me-3\"\n                checked={isChecked}\n                onChange={toggleIsChecked}\n                sliderLabel={isChecked ? \"Mobile\" : \"PC\"}\n            />\n\n            <p>\n                <Link\n                    to=\"/action-menu-example\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Open in new tab\n                </Link>\n            </p>\n\n            <div className=\"ratio ratio-16x9\">\n                <iframe\n                    src={`${process.env.PUBLIC_URL}/action-menu-example`}\n                    style={style}\n                    title=\"Actions Demo page\"\n                />\n                {/**\n                     * This is how the Code looks like: \n                    import React from \"react\"\n                    import {Page, Body, Header, Actions, MenuItem} from \"blue-react\"\n                    \n                    export const ActionMenuExamplePage = () => {\n                        return (\n                            <Page hasActions={true}>\n                                <Header>\n                                </Header>\n                                <Actions>\n                                    <MenuItem\n                                        icon={\n                                            <svg\n                                                width=\"1em\"\n                                                height=\"1em\"\n                                                viewBox=\"0 0 16 16\"\n                                                className=\"bi bi-bag-fill\"\n                                                fill=\"currentColor\"\n                                                xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path\n                                                    d=\"M1 4h14v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4zm7-2.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\"\n                                                />\n                                            </svg>\n                                        }\n                                        label=\"Test\"\n                                    ></MenuItem>\n                                    <MenuItem\n                                        icon={\n                                            <svg\n                                                width=\"1em\"\n                                                height=\"1em\"\n                                                viewBox=\"0 0 16 16\"\n                                                className=\"bi bi-bell-fill\"\n                                                fill=\"currentColor\"\n                                                xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path\n                                                    d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"\n                                                />\n                                            </svg>\n                                        }\n                                        label=\"Test2\"\n                                    >  </MenuItem>\n                                </Actions>\n                                <Body>...</Body>\n                            </Page>\n                        )\n                    }\n                    */}\n            </div>\n        </div>\n    )\n}\n\nexport default ActionMenuExample\n","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Switch from \"../../components/Switch\"\n\nfunction ActionsExample() {\n    const [isChecked, setIsChecked] = useState(false)\n    const toggleIsChecked = () => setIsChecked(!isChecked)\n    const [headerless, setHeaderless] = useState(true)\n    const toggleHeaderless = () => setHeaderless(!headerless)\n\n    const style = {\n        width: isChecked && window.innerWidth > 600 ? \"600px\" : \"\"\n    }\n\n    return (\n        <div>\n            <Switch\n                className=\"lg me-3\"\n                checked={isChecked}\n                onChange={toggleIsChecked}\n                sliderLabel={isChecked ? \"Mobile\" : \"PC\"}\n            />\n            <Switch\n                className=\"lg\"\n                checked={!headerless}\n                onChange={toggleHeaderless}\n                sliderLabel={\"Header\"}\n            />\n\n            <p>\n                <Link\n                    to={`/actions-example/${headerless ? \"headerless\" : \"\"}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Open in new tab\n                </Link>\n            </p>\n\n            <div className=\"ratio ratio-16x9\">\n                <iframe\n                    src={`${process.env.PUBLIC_URL}/actions-example/${\n                        headerless ? \"headerless\" : \"\"\n                    }`}\n                    style={style}\n                    title=\"Actions Demo page\"\n                />\n                {/**\n                     * This is how the Code looks like: \n                    import React from \"react\"\n                    import {Page, Body, Header, Actions, MenuItem} from \"blue-react\"\n                    \n                    export const ActionsExamplePage = () => {\n                        return (\n                            <Page hasActions={true}>\n                                <Header>\n                                </Header>\n                                <Actions>\n                                    <MenuItem\n                                        icon={\n                                            <svg\n                                                width=\"1em\"\n                                                height=\"1em\"\n                                                viewBox=\"0 0 16 16\"\n                                                className=\"bi bi-bag-fill\"\n                                                fill=\"currentColor\"\n                                                xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path\n                                                    d=\"M1 4h14v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4zm7-2.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\"\n                                                />\n                                            </svg>\n                                        }\n                                        label=\"Test\"\n                                    ></MenuItem>\n                                    <MenuItem\n                                        icon={\n                                            <svg\n                                                width=\"1em\"\n                                                height=\"1em\"\n                                                viewBox=\"0 0 16 16\"\n                                                className=\"bi bi-bell-fill\"\n                                                fill=\"currentColor\"\n                                                xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path\n                                                    d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"\n                                                />\n                                            </svg>\n                                        }\n                                        label=\"Test2\"\n                                    >  </MenuItem>\n                                </Actions>\n                                <Body>...</Body>\n                            </Page>\n                        )\n                    }\n                    */}\n            </div>\n        </div>\n    )\n}\n\nexport default ActionsExample\n","import React from \"react\"\nimport Caret from \"../../components/Caret\"\n\nclass CaretExample extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <button\n                    className=\"btn btn-secondary\"\n                    onClick={() =>\n                        this.setState({ isOpen: !this.state.isOpen })\n                    }\n                >\n                    <Caret open={this.state.isOpen} />{\" \"}\n                    <span>Click to toggle the caret</span>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CaretExample\n","import React from \"react\"\nimport Utilities from \"../../components/Utilities\"\nimport FluentBtn from \"../../components/FluentBtn\"\n\nclass FluentBtnExample extends React.Component {\n    componentDidMount() {\n        // Beim normalen Einsatz innerhalb von <Page /> ist folgendes nicht nötig. Nur, wenn <FluentBtn /> z.B. asynchron eingebunden wird.\n        Utilities.registerFluentBtns()\n    }\n\n    render() {\n        return (\n            <div>\n                <FluentBtn className=\"btn btn-primary btn-lg mb-1\">\n                    Hover over this button and see the fancy fluent effect\n                </FluentBtn>\n                <br />\n                <FluentBtn className=\"btn btn-secondary mb-1\">\n                    A secondary button in normal size\n                </FluentBtn>\n                <br />\n                <FluentBtn className=\"btn btn-outline-secondary mb-1\">\n                    A secondary outline button\n                </FluentBtn>\n                <br />\n                <FluentBtn href=\"#\" className=\"btn btn-light mb-1\">\n                    A light button\n                </FluentBtn>\n            </div>\n        )\n    }\n}\n\nexport default FluentBtnExample\n","import React from \"react\"\nimport Search from \"../../components/Search\"\n\nclass SearchExample extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            search: \"\"\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Search\n                    body\n                    className=\"w-50\"\n                    onChange={({ target }) =>\n                        this.setState({ search: target.value })\n                    }\n                    onSubmit={() => alert(\"Do form submit now!\")}\n                    placeholder=\"Begin typing...\"\n                    reset\n                    value={this.state.search}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SearchExample\n","import React from \"react\"\nimport Switch from \"../../components/Switch\"\n\nclass SwitchExample extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            isChecked: true\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Switch\n                    className=\"lg\"\n                    checked={this.state.isChecked}\n                    onChange={() =>\n                        this.setState({ isChecked: !this.state.isChecked })\n                    }\n                    sliderLabel={this.state.isChecked ? \"Yay🎉\" : \"😒\"}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SwitchExample\n","import React, { Component, CSSProperties } from \"react\"\nimport Utilities from \"./Utilities\"\n\ndeclare global {\n    interface Window {\n        blueGridRef: any\n        toggleSidebarEvent: any\n    }\n}\n\nwindow.toggleSidebarEvent = new CustomEvent(\"toggleSidebar\")\n\nexport interface GridProps {\n    id?: string\n    sidebarIn?: boolean\n    style?: CSSProperties\n    /**\n     * Sidebar is automatically expanded on wider views.\n     */\n    expandSidebar?: boolean\n\n    /**\n     * Disables sidebar.\n     */\n    hideSidebarMenu?: boolean\n\n    /**\n     * Registers pages for the built-in routing system. Example: `[{name: \"home\", component: <HomePage />}]`\n     */\n    pages?: { name: string; component: JSX.Element }[]\n\n    /**\n     * When `true`, always the \"home\" route will be rendered.\n     */\n    unrouteable?: boolean\n\n    /**\n     * Extends `className`.\n     */\n    className?: string\n\n    /**\n     * By default, the document title will automatically set. Set this prop to `true` to disable this behaviour.\n     */\n    disableTitleSet?: boolean\n\n    /**\n     * If you don't use blueicon, you can define another icon element for the sidebar toggle button.\n     */\n    sidebarToggleIconComponent?: any\n\n    /**\n     * Will replace status icons with custom ones. This will also overwrite the `useBlueicons` option.\n     * This can be a SVG component or a normal element component.\n     */\n    statusIcons?: {\n        danger: any\n        info: any\n        success: any\n        warning: any\n    }\n\n    /**\n     * Disables the header bars on pages.\n     */\n    disableHeaders?: boolean\n\n    /**\n     * Rounded corners for all `Body` components.\n     */\n    roundedBody?: boolean\n\n    /**\n     * Define a function, that will be fired when switching routes. When your function returns `true`, the default route behaviour will be blocked.\n     * You can use something like `window.blueGridRef.setState({ blockRouting: onHashChange })` globally to set the value from anywhere in your app.\n     */\n    blockRouting?: (\n        newMatch: string[],\n        currentMatch: string[]\n    ) => void | boolean\n}\n\nexport interface GridState {\n    sidebarIn?: boolean\n    match: any\n    history: string[]\n    hash: string\n    hashHistory: string[]\n    blockRouting?: (\n        newMatch: string[],\n        currentMatch: string[]\n    ) => void | boolean\n}\n\n/**\n * The main component. As soon this component is mounted, it is globally available under `window.blueGridRef`.\n * Also you can append your own event listeners with `blueGridRef.addEventListener(eventName, (prevProps, prevState) => { })`.\n *\n * Allowed event listeners:\n *\n * * **componentDidUpdate** - Component was updated.\n *   Example: `blueGridRef.addEventListener(\"componentDidUpdate\", (prevProps, prevState) => { })`\n * * **pageDidShowAgain** - Page appeared again with the same old state. In the callback function you can reinitialize things.\n *   Example: `blueGridRef.addEventListener(\"pageDidShowAgain\", \"home\", (prevProps, prevState) => { })`\n * * **pageDidHide** - This page disappeared and another page appears instead.\n *   Example: `blueGridRef.addEventListener(\"pageDidHide\", \"home\", (prevProps, prevState) => { })`\n */\nexport default class Grid extends Component<GridProps, GridState> {\n    defaultMatch: string[]\n    eventListeners: any[]\n    constructor(props: GridProps) {\n        super(props)\n\n        window.blueGridRef = this\n\n        this.defaultMatch = [\"home\"]\n\n        this.state = {\n            sidebarIn: props.sidebarIn,\n            match: null,\n            history: [],\n            hash: window.location.hash,\n            hashHistory: [],\n            blockRouting: props.blockRouting || undefined\n        }\n\n        this.hideSidebar = this.hideSidebar.bind(this)\n\n        this.eventListeners = []\n    }\n\n    onHashChange(event: HashChangeEvent) {\n        window.blueGridRef.initMatch()\n    }\n\n    static get defaultProps() {\n        return {\n            expandSidebar: false,\n            hideSidebarMenu: false,\n            unrouteable: false,\n            disableTitleSet: false,\n            sidebarToggleIconComponent: <span className=\"bi-menu\" />,\n            statusIcons: {\n                danger: <span className=\"bi-error\" />,\n                info: <span className=\"bi-information\" />,\n                success: <span className=\"bi-check\" />,\n                warning: <span className=\"bi-sign_warning\" />\n            },\n            roundedBody: true\n        }\n    }\n\n    componentDidMount() {\n        const me = this\n\n        document.addEventListener(\n            \"toggleSidebar\",\n            () => {\n                this.toggleSidebar(undefined)\n            },\n            false\n        )\n\n        this.initMatch()\n\n        document.addEventListener(\"touchstart\", (event) => {\n            const xPos = event.touches[0].pageX\n\n            if (xPos < 5) {\n                me.toggleSidebar(event)\n            } else if (me.state.sidebarIn && xPos > 20) {\n                me.toggleSidebar(event)\n            }\n        })\n\n        Utilities.registerFluentBtns()\n\n        window.addEventListener(\"hashchange\", this.onHashChange)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"hashchange\", this.onHashChange)\n    }\n\n    componentDidUpdate(prevProps: GridProps, prevState: GridState) {\n        if (\n            prevProps.blockRouting !== this.props.blockRouting &&\n            this.props.blockRouting !== this.state.blockRouting\n        ) {\n            this.setState({ blockRouting: this.props.blockRouting })\n        }\n\n        this.eventListeners.forEach((eventListener) => {\n            if (eventListener[0] === \"componentDidUpdate\") {\n                eventListener[1](prevProps, prevState)\n            }\n\n            if (eventListener[0] === \"pageDidShowAgain\") {\n                let pageId = eventListener[1]\n                let callback = eventListener[2]\n\n                if (\n                    prevState.hash !== this.state.hash &&\n                    this.state.match[0] === pageId\n                ) {\n                    callback(prevProps, prevState)\n                }\n            }\n\n            if (eventListener[0] === \"pageDidHide\") {\n                let pageId = eventListener[1]\n                let callback = eventListener[2]\n\n                if (\n                    prevState.hash !== this.state.hash &&\n                    prevState.match[0] === pageId\n                ) {\n                    callback(prevProps, prevState)\n                }\n            }\n        })\n    }\n\n    toggleSidebar(event: any) {\n        if (this.state.sidebarIn) {\n            this.hideSidebar(event)\n        }\n        this.setState({ sidebarIn: true })\n    }\n\n    hideSidebar(e: any) {\n        if (\n            !(\n                Utilities.hasClass(e.target, \"blue-app-open-menu\") ||\n                Utilities.hasClass(e.target, \"bi-menu\") ||\n                Utilities.hasClass(e.target, \"blue-app-search\") ||\n                Utilities.hasClass(e.target, \"blue-app-search-control\") ||\n                Utilities.hasClass(e.target, \"blue-app-search-btn\") ||\n                Utilities.hasClass(e.target, \"blue-app-search-btn-icon\") ||\n                Utilities.hasClass(\n                    e.target,\n                    \"blue-app-sidebar-dropdown-toggle\"\n                ) ||\n                Utilities.hasClass(\n                    e.target,\n                    \"blue-app-sidebar-dropdown-caret\"\n                ) ||\n                Utilities.hasClass(\n                    e.target,\n                    \"blue-app-sidebar-dropdown-icon\"\n                ) ||\n                Utilities.hasClass(e.target, \"blue-app-sidebar-exception\")\n            )\n        ) {\n            this.setState({ sidebarIn: false })\n        }\n    }\n\n    initMatch() {\n        let newMatch\n\n        if (\n            window.location.hash &&\n            window.location.hash !== \"\" &&\n            window.location.hash !== \"#/\"\n        ) {\n            newMatch = window.location.hash\n                .replace(\"#\", \"\")\n                .split(\"/\")\n                .filter((n) => n !== \"\")\n        } else {\n            newMatch = this.defaultMatch\n        }\n\n        if (this.props.unrouteable) {\n            newMatch = this.defaultMatch\n        }\n\n        if (\n            this.state.blockRouting &&\n            this.state.blockRouting(newMatch, this.state.match) === true\n        ) {\n            window.location.hash = this.state.hash\n        } else {\n            if (!(this.state.history.indexOf(newMatch[0]) > -1)) {\n                this.state.history.push(newMatch[0])\n            }\n\n            this.setState({\n                match: newMatch,\n                history: this.state.history,\n                hash: window.location.hash,\n                hashHistory: this.state.hashHistory.concat([\n                    window.location.hash\n                ])\n            })\n        }\n    }\n\n    addEventListener(param1: any, param2: any, param3: any) {\n        this.eventListeners.push([param1, param2, param3])\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"blue-app-wrapper\"></div>\n                <div\n                    id={this.props.id ? this.props.id : \"\"}\n                    style={this.props.style ? this.props.style : {}}\n                    className={\n                        \"blue-app-grid\" +\n                        (this.props.className\n                            ? \" \" + this.props.className\n                            : \"\") +\n                        (this.state.sidebarIn ? \" open\" : \"\") +\n                        (this.props.hideSidebarMenu\n                            ? \" hasNoSidebarMenu\"\n                            : \" hasSidebarMenu\") +\n                        (this.props.expandSidebar ? \" expand-sidebar\" : \"\") +\n                        (this.props.disableHeaders ? \" disableHeaders\" : \"\") +\n                        (this.props.roundedBody ? \" roundedBody\" : \"\")\n                    }\n                    onClick={this.hideSidebar}\n                >\n                    <div className=\"blue-app-sidebar-toggler rounded\">\n                        {!this.props.hideSidebarMenu ? (\n                            <button\n                                type=\"button\"\n                                className=\"fluent-btn blue-app-open-menu blue-app-sidebar-btn btn\"\n                                onClick={() => {\n                                    this.setState({\n                                        sidebarIn: !this.state.sidebarIn\n                                    })\n                                }}\n                            >\n                                <div className=\"fluent-btn-ball blue-app-sidebar-exception\" />\n                                {this.props.sidebarToggleIconComponent}\n                            </button>\n                        ) : (\n                            \"\"\n                        )}\n                    </div>\n\n                    {this.props.children}\n\n                    {this.props.pages?.map(\n                        (page) =>\n                            this.state.history.indexOf(page.name) > -1 && (\n                                <div\n                                    key={page.name}\n                                    className={\n                                        \"router-page \" +\n                                        (this.state.match[0] === page.name\n                                            ? \"active\"\n                                            : \"\")\n                                    }\n                                >\n                                    {page.component}\n                                </div>\n                            )\n                    )}\n\n                    <div className=\"blue-app-status-circle blue-app-loading blue-app-status-loading\">\n                        <div className=\"spinner-bounce-circle\">\n                            <div></div>\n                            <div></div>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-app-status-circle blue-app-status-success\">\n                        {this.props.statusIcons!.success}\n                    </div>\n\n                    <div className=\"blue-app-status-circle blue-app-status-info\">\n                        {this.props.statusIcons!.info}\n                    </div>\n\n                    <div className=\"blue-app-status-circle blue-app-status-warning\">\n                        {this.props.statusIcons!.warning}\n                    </div>\n\n                    <div className=\"blue-app-status-circle blue-app-status-danger\">\n                        {this.props.statusIcons!.danger}\n                    </div>\n\n                    <div className=\"blue-app-status-alert alert\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close float-end mb-1\"\n                            aria-label=\"Close\"\n                        />\n                        <div className=\"alert-body\" />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\nimport clsx from \"clsx\"\nimport Utilities from \"./Utilities\"\n\nexport interface PageProps {\n    /**\n     * Will be set to the document's `<title>` tag.\n     */\n    title?: string\n    children?: any\n}\n\n/**\n * Main component for each page.\n */\nexport default function Page({ children, title }: PageProps) {\n    const [hasHeader, setHasHeader] = useState(false)\n    const elementRef = useRef(null) as MutableRefObject<any>\n\n    useEffect(() => {\n        Utilities.registerFluentBtns()\n    })\n\n    useEffect(() => {\n        if (elementRef && elementRef.current) {\n            const headerElement =\n                elementRef.current.querySelector(\".blue-app-header\")\n            setHasHeader(headerElement !== null && headerElement !== undefined)\n        }\n    }, [elementRef])\n\n    useEffect(() => {\n        const titleElement = document.querySelector(\"title\")\n        if (title && titleElement) {\n            titleElement.innerText = title\n        }\n    }, [title])\n\n    return (\n        <div\n            className={clsx(\"blue-app-page-wrapper\", { hasHeader: hasHeader })}\n            ref={elementRef}\n        >\n            {children}\n        </div>\n    )\n}\n","import React from \"react\"\nimport { breakOption } from \"./shared\"\n\nexport interface BodyProps {\n    id?: string\n    className?: string\n\n    /**\n     * Class name for the container. More info: https://getbootstrap.com/docs/4.0/layout/overview/#containers\n     */\n    containerClass?: string\n\n    /**\n     * Set `true` if this page uses `<Actions />`, so this component will get enough padding to avoid overlapping of the content.\n     */\n    hasActions?: boolean\n    break?: breakOption\n    onClick?: (event: any) => void\n\n    children?: any\n\n    /**\n     * If `roundedBody` On `Grid` is `true`, rounded corners are already applied for all `Body` components.\n     * If it's `false` you can enable it separately with this prop.\n     */\n    rounded?: boolean\n}\n\n/**\n * Contains the content of the page.\n */\nexport default function Body({\n    id,\n    className,\n    containerClass,\n    hasActions,\n    onClick,\n    children,\n    rounded,\n    ...rest\n}: BodyProps) {\n    const pageBodyClassName = \"blue-app-page\"\n\n    return (\n        <div\n            id={id}\n            className={\n                className\n                    ? pageBodyClassName + \" \" + className\n                    : pageBodyClassName +\n                      (hasActions ? \" has-actions\" : \"\") +\n                      ` break-${rest.break || \"md\"}` +\n                      (rounded ? \" rounded\" : \"\")\n            }\n            onClick={onClick}\n        >\n            <div className={containerClass || \"container-fluid\"}>\n                {children}\n            </div>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/blue.101f7419.svg\";","import image from \"./images/blue.svg\"\n\nexport const logo = image\nexport const appTitle = \"Blue\"\n","import React from \"react\"\n\nexport function ReactIcon() {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fillRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit=\"2\"\n            clipRule=\"evenodd\"\n            viewBox=\"0 0 16 16\"\n            fill=\"currentColor\"\n            width=\"1em\"\n            height=\"1em\"\n        >\n            <path\n                fillRule=\"nonzero\"\n                d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6z\"\n                transform=\"matrix(.03261 0 0 .03261 7.74 7.74) translate(-413 -288.45)\"\n            ></path>\n            <circle\n                cx=\"420.9\"\n                cy=\"296.5\"\n                r=\"45.7\"\n                transform=\"matrix(.03261 0 0 .03261 7.74 7.74) translate(-413 -288.45)\"\n            ></circle>\n        </svg>\n    )\n}\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\nimport { Dropdown } from \"bootstrap\"\nimport Outside from \"../../components/Outside\"\n\nexport function VersionToggle() {\n    const [show, setShow] = useState<boolean>(false)\n    const toggle = () => setShow(!show)\n    const dropdownRef = useRef() as MutableRefObject<HTMLButtonElement>\n\n    useEffect(() => {\n        const myElement = dropdownRef.current as unknown as Element\n        let bsDropdown = Dropdown.getInstance(myElement)\n\n        if (!bsDropdown) {\n            bsDropdown = new Dropdown(myElement)\n            bsDropdown.hide()\n            setShow(false)\n        } else {\n            show ? bsDropdown.show() : bsDropdown.hide()\n        }\n    }, [show])\n\n    return (\n        <Outside onClickOutside={() => setShow(false)}>\n            <div className=\"dropdown\">\n                <button\n                    className=\"btn btn-secondary dropdown-toggle\"\n                    type=\"button\"\n                    onClick={toggle}\n                    ref={dropdownRef}\n                    title=\"Switch to another version\"\n                >\n                    /v7\n                </button>\n                <ul\n                    className=\"dropdown-menu dropdown-menu-end\"\n                    style={{ minWidth: \"5rem\" }}\n                >\n                    <li>\n                        <a className=\"dropdown-item\" href=\"/blue-react/v6/\">\n                            /v6\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </Outside>\n    )\n}\n","import React from \"react\"\n\ninterface FooterProps {\n    containerClass?: string\n}\n\nexport function Footer({ containerClass = \"container\" }: FooterProps) {\n    return (\n        <footer className=\"docs-footer mb-1\">\n            <div className={`${containerClass} mt-5`}>\n                <p className=\"text-muted mb-0\">\n                    <small>\n                        {`©${\n                            new Date().getFullYear() || \"2021\"\n                        } Brügmann Software GmbH. `}\n                        {\"Licensed under \"}\n                        <a\n                            href=\"https://github.com/bruegmann/blue-react/blob/master/LICENSE\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            GNU General Public License v3.0\n                        </a>\n                        {\". \"}\n                        <a\n                            href=\"https://patorg.de/imprint/\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Imprint\n                        </a>\n                        {\". \"}\n                        <a\n                            href=\"https://patorg.de/privacy-policy/\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Privacy Policy\n                        </a>\n                    </small>\n                </p>\n            </div>\n        </footer>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { GitHubContent } from \"../gitHubApiTypes\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\n\nexport default function IntroductionSections() {\n    const [appCode, setAppCode] = useState<string>(\"\")\n    const [pageCode, setPageCode] = useState<string>(\"\")\n    const [scssCode, setScssCode] = useState<string>(\"\")\n\n    const fetchFromGitHub = async (path: string) => {\n        const url = `https://api.github.com/repos/bruegmann/cra-template-ts-blue/contents/template/${path}`\n        const r = await fetch(`${url}`)\n\n        const ghContent: GitHubContent = await r.json()\n\n        if (ghContent.content) {\n            const decoded = atob(ghContent.content)\n\n            return decoded\n        }\n    }\n\n    const fetchAppCode = async () => {\n        setAppCode((await fetchFromGitHub(\"src/App.tsx\")) || \"\")\n        setPageCode((await fetchFromGitHub(\"src/pages/HomePage.tsx\")) || \"\")\n        setScssCode((await fetchFromGitHub(\"src/styles/main.scss\")) || \"\")\n    }\n\n    useEffect(() => {\n        fetchAppCode()\n    }, [])\n\n    const sections = [\n        {\n            title: \"Bootstrap\",\n            body: (\n                <div>\n                    An adapted Bootstrap is mainly used for the stylesheet.\n                    <br />\n                    Bootstrap documentation is available here:{\" \"}\n                    <a\n                        href=\"https://getbootstrap.com/docs/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        https://getbootstrap.com/docs/\n                    </a>\n                    <br />\n                    <br />\n                    To use Bootstrap components with JavaScript functions in\n                    React, you should use a library like{\" \"}\n                    <a\n                        href=\"https://reactstrap.github.io/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        React Bootstrap\n                    </a>\n                    .\n                </div>\n            )\n        },\n        {\n            title: \"Implementation\",\n            body: (\n                <div>\n                    <p>\n                        See the whole project:{\" \"}\n                        <a\n                            href=\"https://github.com/bruegmann/cra-template-ts-blue/tree/master/template\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            https://github.com/bruegmann/cra-template-ts-blue/tree/master/template\n                        </a>\n                    </p>\n\n                    <h2>App (app.tsx)</h2>\n                    <SyntaxHighlighter\n                        style={syntaxHighlighterStyle}\n                        language=\"javascript\"\n                    >\n                        {appCode}\n                    </SyntaxHighlighter>\n\n                    <h2 className=\"mt-3\">Page (pages/HomePage.tsx)</h2>\n                    <SyntaxHighlighter\n                        style={syntaxHighlighterStyle}\n                        language=\"javascript\"\n                    >\n                        {pageCode}\n                    </SyntaxHighlighter>\n\n                    <h2 className=\"mt-3\">CSS (main.scss)</h2>\n                    <SyntaxHighlighter\n                        style={syntaxHighlighterStyle}\n                        language=\"scss\"\n                    >\n                        {scssCode}\n                    </SyntaxHighlighter>\n                </div>\n            )\n        }\n    ]\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                {sections.map((s, i) => (\n                    <article\n                        key={i}\n                        id={\"section-\" + encodeURIComponent(s.title)}\n                    >\n                        <h1 className=\"page-header\">{s.title}</h1>\n                        {s.body}\n                    </article>\n                ))}\n            </div>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/stackblitz.f72cfdf8.png\";","import { useState } from \"react\"\nimport { PencilSquare, PlayFill } from \"react-bootstrap-icons\"\nimport FluentBtn from \"../../components/FluentBtn\"\nimport image from \"../images/stackblitz.png\"\n\nexport default function StackblitzEmbed() {\n    const [loadIframe, setLoadIframe] = useState<boolean>(false)\n\n    return (\n        <>\n            {loadIframe ? (\n                <div className=\"ratio ratio-16x9 bg-light rounded\">\n                    <iframe\n                        className=\"rounded\"\n                        src=\"https://stackblitz.com/edit/blue-react-app-stackblitz-rr6xeh?embed=1&file=index.tsx&hideExplorer=1\"\n                    />\n                </div>\n            ) : (\n                <div\n                    className=\"bg-primary text-white rounded p-4 d-flex justify-content-between\"\n                    style={{ backgroundImage: `url(${image})` }}\n                >\n                    <div>\n                        <h5>\n                            Do you want to load external content from\n                            Stackblitz?\n                        </h5>\n                        <p>\n                            It will contain a live editor, which lets you edit a\n                            demo app with Blue React.\n                        </p>\n\n                        <FluentBtn\n                            className=\"btn btn-white d-inline-flex align-items-center\"\n                            light\n                            onClick={() => setLoadIframe(true)}\n                        >\n                            <PlayFill className=\"me-1\" /> Load content\n                        </FluentBtn>\n                        <a\n                            className=\"btn btn-link text-white\"\n                            href=\"https://stackblitz.com/edit/blue-react-app-stackblitz-rr6xeh?\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Open content in new tab\n                        </a>\n                        <a\n                            className=\"btn btn-link text-white\"\n                            href=\"https://stackblitz.com/privacy-policy\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Privacy Policy by Stackblitz\n                        </a>\n                    </div>\n                    <h1 className=\"display-1\">\n                        <PencilSquare />\n                    </h1>\n                </div>\n            )}\n        </>\n    )\n}\n","import React from \"react\"\nimport Page from \"../../components/Page\"\nimport Body from \"../../components/Body\"\nimport { logo, appTitle } from \"../Global\"\nimport { Bootstrap, BoxSeam, Code, WindowSidebar } from \"react-bootstrap-icons\"\nimport { ReactIcon } from \"../components/ReactIcon\"\nimport { VersionToggle } from \"../components/VersionToggle\"\nimport { Footer } from \"../components/Footer\"\nimport IntroductionSections from \"../components/IntroductionSections\"\nimport StackblitzEmbed from \"../components/StackblitzEmbed\"\n\nconst packageJson = require(\"../../../package.json\")\n\nexport const HomePage = () => (\n    <Page>\n        <Body\n            className=\"pt-0\"\n            containerClass=\"no-container d-flex flex-column docs-min-height-100vh\"\n        >\n            <main className=\"flex-grow-1\">\n                <div className=\"welcome-jumbotron pt-5 bg-theme text-white\">\n                    <div className=\"container pt-3 pt-md-0\">\n                        <section className=\"d-flex justify-content-between\">\n                            <div>\n                                <h1>\n                                    React component library based on Bootstrap 5\n                                </h1>\n                                <h2>\n                                    <Bootstrap /> <ReactIcon /> <Code />{\" \"}\n                                    <WindowSidebar /> <BoxSeam />\n                                </h2>\n                                <h3 className=\"d-flex align-content-center gap-3\">\n                                    <span className=\"badge bg-white text-theme\">\n                                        {packageJson.version}\n                                    </span>\n\n                                    <VersionToggle />\n                                </h3>\n                            </div>\n\n                            <div>\n                                <h1 className=\"display-1 d-inline-flex align-items-center\">\n                                    <img\n                                        src={logo}\n                                        alt={appTitle}\n                                        style={{ height: \"1em\" }}\n                                        className=\"me-3\"\n                                    />{\" \"}\n                                    Blue\n                                </h1>\n                            </div>\n                        </section>\n                    </div>\n\n                    <div\n                        className=\"mt-5 rounded-top bg-body\"\n                        style={{ height: \"1rem\" }}\n                    />\n                </div>\n\n                <div className=\"container\">\n                    <StackblitzEmbed />\n\n                    <h1 className=\"page-header\">Use Blue React</h1>\n\n                    <h2 className=\"mt-4 mb-3\">Create new project using CRA</h2>\n                    <code>\n                        npx create-react-app <strong>name-of-my-app</strong>{\" \"}\n                        --template blue\n                    </code>\n\n                    <div className=\"mt-3\">\n                        Or if you want to use TypeScript:\n                    </div>\n                    <code>\n                        npx create-react-app <strong>name-of-my-app</strong>{\" \"}\n                        --template ts-blue\n                    </code>\n\n                    <h2 className=\"mt-4 mb-3\">Install to existing project</h2>\n                    <code>npm i blue-react</code>\n\n                    <IntroductionSections />\n                </div>\n            </main>\n\n            <Footer />\n        </Body>\n    </Page>\n)\n","import React, { Fragment, useEffect, useState } from \"react\"\n\nexport interface SidebarMenuProps {\n    /**\n     * Should menu items have a Fluent effect. Default: `true`\n     */\n    fluent?: boolean\n\n    /**\n     * Extends the class name by the sidebar.\n     */\n    sidebarClass?: string\n\n    /**\n     * Sets the `style` prop by the sidebar.\n     */\n    sidebarStyle?: object\n\n    /**\n     * Extends the class name by the menu.\n     */\n    menuClass?: string\n\n    /**\n     * Sets the `style` prop by the menu.\n     */\n    menuStyle?: object\n\n    /**\n     * Content on top of the menu.\n     */\n    topContent?: any\n\n    /**\n     * Content for the bottom part of the sidebar.\n     */\n    bottomContent?: any\n\n    children?: any\n}\n\n/**\n * Sidebar for the `Grid` component.\n */\nexport default function SidebarMenu(props: SidebarMenuProps) {\n    const { fluent = true } = props\n\n    const [hasShadow, setHasShadow] = useState<boolean>(false)\n\n    const updateDimensions = () => {\n        if (window.innerHeight > 500) {\n            setHasShadow(false)\n        }\n    }\n\n    useEffect(() => {\n        const blueAppSidebar = document.querySelector(\n            \".blue-app-sidebar\"\n        ) as HTMLElement\n\n        window.addEventListener(\"resize\", updateDimensions)\n\n        if (blueAppSidebar.scrollHeight > blueAppSidebar.clientHeight) {\n            setHasShadow(true)\n        }\n\n        blueAppSidebar.addEventListener(\"scroll\", () => {\n            if (\n                blueAppSidebar.scrollHeight - blueAppSidebar.scrollTop ===\n                blueAppSidebar.clientHeight\n            ) {\n                setHasShadow(false)\n            } else {\n                setHasShadow(true)\n            }\n        })\n\n        return () => {\n            window.removeEventListener(\"resize\", updateDimensions)\n        }\n    }, [])\n\n    return (\n        <div\n            className={\n                \"blue-app-sidebar \" +\n                (props.sidebarClass ? props.sidebarClass : \"\")\n            }\n            style={props.sidebarStyle ? props.sidebarStyle : {}}\n        >\n            {props.topContent && (\n                <div className=\"blue-app-sidebar-top\">{props.topContent}</div>\n            )}\n\n            <div\n                className={\n                    \"blue-app-menu \" + (props.menuClass ? props.menuClass : \"\")\n                }\n                style={props.menuStyle ? props.menuStyle : {}}\n            >\n                <div className={fluent === true ? \"fluent-btn\" : \"\"}>\n                    {fluent === true ? (\n                        <div className=\"fluent-btn-ball\" />\n                    ) : (\n                        <Fragment />\n                    )}\n                    {props.children}\n                </div>\n            </div>\n\n            {props.bottomContent && (\n                <div\n                    className={\n                        \"blue-app-sidebar-bottom \" +\n                        (hasShadow ? \" has-shadow\" : \"\")\n                    }\n                >\n                    {props.bottomContent}\n                </div>\n            )}\n        </div>\n    )\n}\n","import React, { Component, ComponentClass } from \"react\"\nimport MarkdownGitHub from \"react-markdown-github\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\nimport { Link } from \"react-router-dom\"\n\nexport interface IComponentDocsProps {\n    standalone: boolean\n    comp: {\n        displayName: string\n        description: string\n        props: any\n        exampleCode?: string\n    }\n}\n\nexport class ComponentDocs extends Component<\n    IComponentDocsProps,\n    { ExampleComponent: ComponentClass<any> }\n> {\n    state = {\n        ExampleComponent: null as unknown as ComponentClass<any>\n    }\n\n    componentDidMount() {\n        try {\n            const { comp } = this.props\n            const ExampleComponent = require(`../examples/${comp.displayName}.tsx`)\n            this.setState({ ExampleComponent: ExampleComponent[\"default\"] })\n        } catch (ex) {\n            // console.error(ex)\n            // This component has no example\n        }\n\n        try {\n            const { comp } = this.props\n            const ExampleComponent = require(`../examples/${comp.displayName}.js`)\n            this.setState({ ExampleComponent: ExampleComponent[\"default\"] })\n        } catch (ex) {\n            // console.error(ex)\n            // This component has no example\n        }\n    }\n\n    prepareForMarkdown(text: string) {\n        return text.replace(\"@deprecated\", \"***@deprecated***\")\n    }\n\n    render() {\n        const { comp, standalone } = this.props\n        const { ExampleComponent } = this.state\n\n        return (\n            <article className=\"pt-5\">\n                <h1 className=\"page-header mt-0 blue-opacity-hover\">\n                    {comp.displayName}{\" \"}\n                    <Link\n                        to={`/component/${comp.displayName}`}\n                        className=\"blue-opacity-hover-content-active\"\n                    >\n                        #\n                    </Link>\n                </h1>\n\n                <MarkdownGitHub>\n                    {this.prepareForMarkdown(comp.description)}\n                </MarkdownGitHub>\n\n                {comp.displayName == \"Intro\" && (\n                    <p>\n                        <Link to=\"/intro-demo\">Take a look at this demo</Link>\n                    </p>\n                )}\n\n                {comp.props && (\n                    <div>\n                        <h2 className=\"mt-4 mb-3\">Props</h2>\n\n                        <table className=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Description</th>\n                                    <th>Type</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {comp.props &&\n                                    Object.keys(comp.props).map((j) => (\n                                        <tr key={j}>\n                                            <th>{j}</th>\n                                            <td>\n                                                <MarkdownGitHub>\n                                                    {this.prepareForMarkdown(\n                                                        comp.props[j]\n                                                            .description\n                                                    )}\n                                                </MarkdownGitHub>\n\n                                                {comp.props[j].defaultValue ? (\n                                                    <div>\n                                                        <strong>\n                                                            Default:\n                                                        </strong>\n                                                        &nbsp;\n                                                        <code>\n                                                            {\n                                                                comp.props[j]\n                                                                    .defaultValue\n                                                                    .value\n                                                            }\n                                                        </code>\n                                                    </div>\n                                                ) : (\n                                                    \"\"\n                                                )}\n                                            </td>\n                                            <td>\n                                                {comp.props[j].tsType &&\n                                                    (comp.props[j].tsType.raw ||\n                                                        comp.props[j].tsType\n                                                            .name)}\n                                            </td>\n                                        </tr>\n                                    ))}\n                            </tbody>\n                        </table>\n\n                        {(ExampleComponent || comp.exampleCode) &&\n                            (standalone ? (\n                                <div>\n                                    <h2 className=\"mt-4 mb-3\">Example</h2>\n\n                                    {ExampleComponent && (\n                                        <div className=\"mb-3\">\n                                            <ExampleComponent />\n                                        </div>\n                                    )}\n\n                                    {comp.exampleCode && (\n                                        <SyntaxHighlighter\n                                            style={syntaxHighlighterStyle}\n                                            language=\"jsx\"\n                                        >\n                                            {comp.exampleCode}\n                                        </SyntaxHighlighter>\n                                    )}\n                                </div>\n                            ) : (\n                                <Link\n                                    to={\"/component/\" + comp.displayName}\n                                    onClick={() => window.scrollTo(0, 0)}\n                                >\n                                    Show example\n                                </Link>\n                            ))}\n                    </div>\n                )}\n            </article>\n        )\n    }\n}\n","import React, { useEffect, useState } from \"react\"\nimport { useParams, Link, NavLink } from \"react-router-dom\"\nimport Page from \"../../components/Page\"\nimport Body from \"../../components/Body\"\n\nimport docs from \"../data/docs.json\"\nimport { ComponentDocs } from \"../components/ComponentDocs\"\nimport { IComponent } from \"../types\"\nimport Search from \"../../components/Search\"\nimport { appTitle } from \"../Global\"\nimport { Footer } from \"../components/Footer\"\n\nconsole.log({ docs })\n\nexport const ComponentPage = () => {\n    const { selectedComponent } = useParams<any>()\n\n    // State of input Search value\n    const [value, setValue] = useState<string>(\"\")\n    // Searched & found Components\n    const [components, setComponents] = useState<any>([])\n\n    const array_docs = Object.values(docs) as IComponent[]\n\n    useEffect(() => {\n        const routerPageElement = document.querySelector(\".router-page.active\")\n        if (routerPageElement) {\n            routerPageElement.scrollTo(0, 0)\n        }\n    }, [selectedComponent])\n\n    return (\n        <Page\n            title={`${\n                selectedComponent ? `${selectedComponent} - ` : \"\"\n            }React Components - ${appTitle}`}\n        >\n            <Body containerClass=\"d-flex flex-column docs-min-height-100vh\">\n                <div className=\"container-fluid flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n                            <div className=\"sticky-top\" style={{ zIndex: 0 }}>\n                                <div className=\"pt-1 pt-sm-3\">\n                                    <Search\n                                        body\n                                        // onSubmit={(e: any) => { e.preventDefault() }}\n                                        onChange={(a: any) => {\n                                            setValue(a.target.value)\n                                            // Array for the searched & found Components\n                                            let arr = []\n\n                                            for (\n                                                let i = 0;\n                                                i < array_docs.length;\n                                                i++\n                                            ) {\n                                                const target_value =\n                                                    a.target.value.toLowerCase()\n                                                if (\n                                                    typeof array_docs[i].props\n                                                        ?.break !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.checked !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.children !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.className !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.containerClass !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.content !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.disableTitleSet !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.expandSidebar !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.featured !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.hasActions !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.hideSidebarMenu !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.hideToggleAction !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.href !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.icon !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.label !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.light !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.mimeType !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.mirrored !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.navItemClassName !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.onChange !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.onToggle !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.open !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.pages !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.showDocumentLabel !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.sidebarToggleIconComponent !==\n                                                        \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.src !== \"undefined\" ||\n                                                    typeof array_docs[i].props\n                                                        ?.unrouteable !==\n                                                        \"undefined\"\n                                                ) {\n                                                    const description =\n                                                        array_docs[\n                                                            i\n                                                        ].description?.toLowerCase()\n                                                    const display_Name =\n                                                        array_docs[\n                                                            i\n                                                        ].displayName?.toLowerCase()\n                                                    const props = Object.keys(\n                                                        array_docs[i].props\n                                                    )\n\n                                                    if (\n                                                        description?.includes(\n                                                            target_value\n                                                        ) ||\n                                                        display_Name?.includes(\n                                                            target_value\n                                                        ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.break?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.break?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.break?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideToggleAction?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideToggleAction?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideToggleAction?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.checked?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.checked?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.checked?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.children?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.children?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.children?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.className?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.className?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.className?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.containerClass?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.containerClass?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.containerClass?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.content?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.content?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.content?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.disableTitleSet?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.disableTitleSet?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.disableTitleSet?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.expandSidebar?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.expandSidebar?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.expandSidebar?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.featured?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.featured?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.featured?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hasActions?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hasActions?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hasActions?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideSidebarMenu?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideSidebarMenu?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideSidebarMenu?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideToggleAction?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideToggleAction?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.hideToggleAction?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.href?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.href?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.href?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.icon?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.icon?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.icon?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.label?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.label?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.label?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.light?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.light?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.light?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.mimeType?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.mimeType?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.mimeType?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.mirrored?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.mirrored?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.mirrored?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.navItemClassName?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.navItemClassName?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.navItemClassName?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.onChange?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.onChange?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.onChange?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.onToggle?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.onToggle?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.onToggle?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.open?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.open?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.open?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.pages?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.pages?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.pages?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.showDocumentLabel?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.showDocumentLabel?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.showDocumentLabel?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.sidebarToggleIconComponent?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.sidebarToggleIconComponent?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.sidebarToggleIconComponent?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.src?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.src?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.src?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.unrouteable?.defaultValue?.value\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.unrouteable?.description\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].props?.unrouteable?.tsType?.name\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            ) ||\n                                                        props.some((val) =>\n                                                            val\n                                                                .toLowerCase()\n                                                                .includes(\n                                                                    target_value\n                                                                )\n                                                        ) ||\n                                                        array_docs[\n                                                            i\n                                                        ].exampleCode\n                                                            ?.toLowerCase()\n                                                            .includes(\n                                                                target_value\n                                                            )\n                                                    ) {\n                                                        arr.push(array_docs[i])\n                                                        setComponents(arr)\n                                                    }\n                                                }\n                                            }\n                                        }}\n                                        value={value}\n                                        className=\"mb-1 ms-5 ms-md-0 \"\n                                        placeholder=\"Search...\"\n                                    />\n\n                                    <div\n                                        className=\"overflow-auto\"\n                                        style={{\n                                            maxHeight: \"calc(100vh - 5rem)\"\n                                        }}\n                                    >\n                                        <nav className=\"nav nav-pills flex-column\">\n                                            {components.length > 0 &&\n                                            value !== \"\"\n                                                ? components.map(\n                                                      (\n                                                          i: any,\n                                                          index: number\n                                                      ) => (\n                                                          <div key={index}>\n                                                              <Link\n                                                                  to={`/component/${i.displayName}`}\n                                                                  className=\"nav-link\"\n                                                              >\n                                                                  {\n                                                                      i.displayName\n                                                                  }\n                                                              </Link>\n                                                          </div>\n                                                      )\n                                                  )\n                                                : docs &&\n                                                  Object.values(docs).map(\n                                                      (\n                                                          i: any,\n                                                          index: number\n                                                      ) => (\n                                                          <div\n                                                              key={index}\n                                                              className=\"nav-item\"\n                                                          >\n                                                              <NavLink\n                                                                  to={`/component/${i.displayName}`}\n                                                                  className=\"nav-link\"\n                                                              >\n                                                                  {\n                                                                      i.displayName\n                                                                  }\n                                                              </NavLink>\n                                                          </div>\n                                                      )\n                                                  )}\n                                        </nav>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-10\">\n                            {docs &&\n                                Object.values(docs).map(\n                                    (i: any, index: number) =>\n                                        (!selectedComponent ||\n                                            selectedComponent ===\n                                                i.displayName) &&\n                                        i.props && (\n                                            <ComponentDocs\n                                                key={index}\n                                                comp={i}\n                                                standalone={\n                                                    selectedComponent\n                                                        ? true\n                                                        : false\n                                                }\n                                            />\n                                        )\n                                )}\n                        </div>\n                    </div>\n                </div>\n\n                <Footer containerClass=\"container-fluid\" />\n            </Body>\n        </Page>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport Utilities from \"./Utilities\"\n\nexport interface IntroProps {\n    /**\n     * Can be an image. Will be placed inside of the `src` attribute.\n     */\n    logo?: string\n\n    /**\n     * Max width from the logo.\n     */\n    logoMaxWidth?: string\n\n    /**\n     * Text which will be placed under the logo.\n     */\n    title?: string\n\n    /**\n     * Content\n     */\n    children?: any\n}\n\n/**\n * Can be used for a sign-in page.\n */\nexport default function Intro({\n    logo,\n    logoMaxWidth = \"100px\",\n    title,\n    children\n}: IntroProps) {\n    useEffect(() => {\n        Utilities.registerFluentBtns()\n    }, [])\n\n    return (\n        <div className=\"sign-in-screen\">\n            <div className=\"sign-in-container mx-1\">\n                <div className=\"bg-body rounded-3 shadow-lg px-4 py-5\">\n                    <div className=\"text-center\">\n                        <img\n                            style={{ maxWidth: logoMaxWidth }}\n                            src={logo}\n                            alt=\"\"\n                        />\n                        <h2 className=\"mt-4 mb-3\">{title}</h2>\n                    </div>\n\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport Intro from \"../../components/Intro\"\nimport { logo } from \"../Global\"\nimport { Link } from \"react-router-dom\"\nimport { ChevronLeft } from \"react-bootstrap-icons\"\n\nexport const IntroDemoPage = () => (\n    <>\n        {/* Changes background and sidebar background when on dark mode. */}\n        <style\n            type=\"text/css\"\n            dangerouslySetInnerHTML={{\n                __html: /* css */ `\n            @media (prefers-color-scheme: dark) {\n                :root {\n                    --sidebar-bg: var(--black, #212529);\n                }\n            }\n        `\n            }}\n        />\n        <Intro\n            logo={logo}\n            logoMaxWidth=\"100px\"\n            title=\"Here could be your introduction\"\n        >\n            <form\n                className=\"form-horizontal\"\n                onSubmit={(event) => {\n                    event.preventDefault()\n                }}\n            >\n                <div className=\"row mb-3\">\n                    <label className=\"col-sm-4 col-form-label\">\n                        Please sign in\n                    </label>\n                    <div className=\"col-sm-8\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Enter something\"\n                        />\n                    </div>\n                </div>\n\n                <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\">\n                        Sign in\n                    </button>\n                </div>\n            </form>\n\n            <Link to=\"/component/Intro\">\n                <ChevronLeft /> Back to the docs\n            </Link>\n        </Intro>\n    </>\n)\n","import React, { useState } from \"react\"\nimport { Modal, ModalHeader } from \"reactstrap\"\n\nexport function NormalScrollbarDemo() {\n    const [showModal, setShowModal] = useState<boolean>(false)\n    const toggleShowModal = () => setShowModal(!showModal)\n\n    return (\n        <>\n            <button className=\"btn btn-link p-0 mb-1\" onClick={toggleShowModal}>\n                Show demo.\n            </button>\n\n            <Modal isOpen={showModal} toggle={toggleShowModal}>\n                <ModalHeader toggle={toggleShowModal}>\n                    Scrollbar demo\n                </ModalHeader>\n                <div className=\"m-3\">\n                    <div className=\"mb-3\">\n                        <label>\n                            Area without <code>.blue-normal-scrollbar</code>\n                        </label>\n                        <select className=\"form-control\" multiple aria-readonly>\n                            <option>one</option>\n                            <option>two</option>\n                            <option>three</option>\n                            <option>four</option>\n                            <option>five</option>\n                            <option>six</option>\n                        </select>\n                    </div>\n\n                    <div className=\"blue-normal-scrollbar mb-3\">\n                        <label>\n                            Area with <code>.blue-normal-scrollbar</code>\n                        </label>\n                        <select className=\"form-control\" multiple aria-readonly>\n                            <option>one</option>\n                            <option>two</option>\n                            <option>three</option>\n                            <option>four</option>\n                            <option>five</option>\n                            <option>six</option>\n                        </select>\n                    </div>\n\n                    <div className=\"alert alert-info\">\n                        Make sure to put <code>.blue-normal-scrollbar</code> to\n                        an parent element and not directly to the element with\n                        the overflow.\n                    </div>\n\n                    <div className=\"alert alert-info\">\n                        Bootstrap modals with <code>.modal-body</code> already\n                        have the rules of <code>.blue-normal-scrollbar</code>,\n                        so you don't have to put the class name there yourself.\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n","import { ReactNode } from \"react\"\n\nexport interface HashLinkProps {\n    children: ReactNode\n    id: string\n}\n\nexport default function HashLink({ children, id }: HashLinkProps) {\n    return (\n        <h5 className=\"blue-opacity-hover\" id={id}>\n            {children}{\" \"}\n            <a href={`#${id}`} className=\"blue-opacity-hover-content-active\">\n                #\n            </a>\n        </h5>\n    )\n}\n","import React from \"react\"\nimport FluentBtn from \"../../components/FluentBtn\"\nimport Utilities from \"../../components/Utilities\"\nimport { CheckCircle, CheckCircleFill, PlayFill } from \"react-bootstrap-icons\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\nimport Page from \"../../components/Page\"\nimport Body from \"../../components/Body\"\nimport { NormalScrollbarDemo } from \"../components/NormalScrollbarDemo\"\nimport { Footer } from \"../components/Footer\"\nimport HashLink from \"../components/HashLink\"\n\nexport interface UtilitiesPageProps {}\n\nexport interface UtilitiesPageState {\n    content: any\n    didScroll: boolean\n}\n\nconst utilitiesFunctions = [\n    {\n        definition: \"hasClass(el, className)\",\n        description: \"Checks if element has a specific class name.\"\n    },\n    {\n        definition: \"addClass(el, className)\",\n        description: \"Adds a class name to an element.\"\n    },\n    {\n        definition: \"removeClass(el, className)\",\n        description: \"Removes a class name from an element.\"\n    },\n    {\n        definition: \"toggleClass(el, className)\",\n        description:\n            \"Adds class name to element, if it doesn't it yet. Otherwise it removes it.\"\n    },\n    {\n        definition: \"startLoading()\",\n        description: \"Shows loading animation.\",\n        demo: (\n            <FluentBtn\n                className=\"btn btn-light\"\n                onClick={() => Utilities.startLoading()}\n            >\n                <PlayFill />\n            </FluentBtn>\n        )\n    },\n    {\n        definition: \"finishLoading()\",\n        description: \"Hides loading animation.\",\n        demo: (\n            <FluentBtn\n                className=\"btn btn-light\"\n                onClick={() => Utilities.finishLoading()}\n            >\n                <PlayFill />\n            </FluentBtn>\n        )\n    },\n    {\n        definition: \"showSuccess()\",\n        description: \"Shows success symbol.\",\n        demo: (\n            <FluentBtn\n                className=\"btn btn-light\"\n                onClick={() => Utilities.showSuccess()}\n            >\n                <PlayFill />\n            </FluentBtn>\n        )\n    },\n    {\n        definition: \"hideSuccess()\",\n        description: \"Hides success symbol.\",\n        demo: (\n            <FluentBtn\n                className=\"btn btn-light\"\n                onClick={() => Utilities.hideSuccess()}\n            >\n                <PlayFill />\n            </FluentBtn>\n        )\n    },\n    {\n        definition: \"toggleActions()\",\n        description: \"Shows action menu or hides it.\"\n    },\n    {\n        definition:\n            \"setAlertMessage(message, alertClassName, close, detailText)\",\n        description: (\n            <span>\n                Shows an alert message.\n                <br />\n                Possible values for alertClassName: <code>loading</code>,{\" \"}\n                <code>success</code>, <code>info</code>, <code>warning</code>,{\" \"}\n                <code>danger</code>\n            </span>\n        ),\n        demo: (\n            <FluentBtn\n                className=\"btn btn-light\"\n                onClick={() =>\n                    Utilities.setAlertMessage(\n                        \"Hey, this is a message\",\n                        \"danger\",\n                        true,\n                        `Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \n\n                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n`\n                    )\n                }\n            >\n                <PlayFill />\n            </FluentBtn>\n        )\n    },\n    {\n        definition: \"resetAlertMessage(alertClassName)\",\n        description: \"Resets alert message and removes it.\",\n        demo: (\n            <FluentBtn\n                className=\"btn btn-light\"\n                onClick={() => Utilities.resetAlertMessage(\"danger\")}\n            >\n                <PlayFill />\n            </FluentBtn>\n        )\n    },\n    {\n        definition: \"guid()\",\n        description: \"Returns string of random characters.\",\n        demo: (\n            <FluentBtn\n                className=\"btn btn-light\"\n                onClick={() => alert(\"Generated GUID: \" + Utilities.guid())}\n            >\n                <PlayFill />\n            </FluentBtn>\n        )\n    },\n    {\n        definition: \"scrollToTop()\",\n        description: \"Scrolls to the top of the page.\",\n        demo: (\n            <FluentBtn\n                className=\"btn btn-light\"\n                onClick={() => Utilities.scrollToTop()}\n            >\n                <PlayFill />\n            </FluentBtn>\n        )\n    },\n    {\n        definition: \"registerFluentBtns()\",\n        description: \"Enables the effect of Fluent buttons.\"\n    },\n    {\n        definition: \"unregisterFluentBtns()\",\n        description: \"Disables the effect of Fluent buttons.\"\n    },\n    {\n        definition: \"fetchData(input, init?, showErrorDetail? = true)\",\n        description: (\n            <span>\n                Uses native <code>fetch</code> function, but adds error handling\n                and shows error messages if there are any.\n            </span>\n        )\n        // demo: (<Fragment>\n        //     <FluentBtn className=\"btn btn-light\"\n        //     // onClick={() => {\n        //     //     const url = \"https://jsonplaceholder.typicode.com/todos/1\"\n\n        //     //     Utilities.startLoading()\n\n        //     //     Utilities.fetchData(url)\n        //     //         .then((res: any) => {\n        //     //             Utilities.finishLoading()\n        //     //             return res.json()\n        //     //         })\n        //     //         .then((json: any) => alert(`Here is the result of ${url}:\\n\\n ${JSON.stringify(json)}`))\n        //     // }}\n        //     >\n        //         <PlayFill />\n        //     </FluentBtn>\n        // </Fragment>)\n    }\n]\n\nexport class UtilitiesPage extends React.Component<\n    UtilitiesPageProps,\n    UtilitiesPageState\n> {\n    constructor(props: UtilitiesPageProps) {\n        super(props)\n\n        this.state = {\n            content: [],\n            didScroll: false\n        }\n    }\n    componentDidMount() {\n        document\n            .querySelector(\".router-page.active\")!\n            .addEventListener(\"scroll\", () => {\n                if (!this.state.didScroll) {\n                    this.setState({ didScroll: true })\n                }\n            })\n    }\n    render() {\n        const sections = [\n            {\n                title: \"Utilities\",\n                body: (\n                    <div>\n                        <p>A static class with a few useful helper functions</p>\n\n                        <h2 className=\"page-header\">Useful CSS classes</h2>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"blue-app-sidebar-bottom\">\n                                <code>.blue-app-sidebar-bottom</code>\n                            </HashLink>\n                            <p>\n                                With Sidebar Bottom, for example, a registered\n                                user can be displayed at the bottom left. Usable\n                                within{\" \"}\n                                <code>\n                                    &lt;SidebarMenu {\"bottomContent={}\"} /&gt;\n                                </code>\n                                .\n                            </p>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"blue-app-sidebar-hidden-on-open\">\n                                <code>.blue-app-sidebar-hidden-on-open</code>\n                            </HashLink>\n                            <p>\n                                The element is hidden as long as the sidebar is\n                                open.\n                            </p>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"blue-app-sidebar-visible-on-open\">\n                                <code>.blue-app-sidebar-visible-on-open</code>\n                            </HashLink>\n                            <p>\n                                The element is visible as long as the sidebar is\n                                open.\n                            </p>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"blue-normal-scrollbar\">\n                                <code>.blue-normal-scrollbar</code>\n                            </HashLink>\n                            <p>\n                                {\n                                    \"Normalizes elements in areas which still should not have the theme colors for their scrollbars. \"\n                                }\n                                <NormalScrollbarDemo />\n                            </p>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"btn-black\">\n                                <code>.btn-black</code>,{\" \"}\n                                <code>.btn-outline-black</code>\n                            </HashLink>\n                            <p>\n                                Additionally Bootstrap theme variable \"black\"\n                                for always black buttons.\n                            </p>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"btn-white\">\n                                <code>.btn-white</code>,{\" \"}\n                                <code>.btn-outline-white</code>\n                            </HashLink>\n                            <p>\n                                Additionally Bootstrap theme variable \"white\"\n                                for always white buttons.\n                            </p>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"form-horizontal\">\n                                <code>.form-horizontal</code>\n                            </HashLink>\n                            <p>\n                                To be used together with{\" \"}\n                                <a href=\"https://getbootstrap.com/docs/5.1/forms/layout/#horizontal-form\">\n                                    Bootstraps solutions\n                                </a>\n                                . <code>.form-horizontal</code> arranges the\n                                labels on the right on larger screens.\n                            </p>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"w-bla-sidebar-width\">\n                                <code>.w-bla-sidebar-width</code>\n                            </HashLink>\n                            <p>\n                                Gives element the width of the sidebar, defined\n                                with <code>$bla-sidebar-width</code>.\n                            </p>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"blue-tooltip-up\">\n                                <code>.blue-tooltip-up</code>,{\" \"}\n                                <code>.blue-tooltip-down</code>,{\" \"}\n                                <code>.blue-tooltip-start</code>,{\" \"}\n                                <code>.blue-tooltip-end</code>\n                            </HashLink>\n                            <p>\n                                Data Attribute of element is used as an tooltip.\n                                To be used together with{\" \"}\n                                <code>data-tooltip</code>.<br />\n                                Usage:\n                            </p>\n                            <strong\n                                data-tooltip=\"Put your tooltip text here\"\n                                className=\"blue-tooltip-up\"\n                            >\n                                Hover me!\n                            </strong>\n                            <SyntaxHighlighter\n                                style={syntaxHighlighterStyle}\n                                language=\"html\"\n                            >{`<strong data-tooltip=\"Put your tooltip text here\" className=\"blue-tooltip-up\">\n    Hover me!\n</strong>`}</SyntaxHighlighter>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"blue-btn-silent\">\n                                <code>.blue-btn-silent</code>\n                            </HashLink>\n                            <p>\n                                Removes border when the button is in normal\n                                state (no hover). Should be used together with{\" \"}\n                                <code>.btn-outline-*</code>.<br />\n                                Usage:\n                            </p>\n                            <button className=\"btn btn-outline-secondary blue-btn-silent\">\n                                Button\n                            </button>\n                            <SyntaxHighlighter\n                                style={syntaxHighlighterStyle}\n                                language=\"html\"\n                            >{`<button className=\"btn btn-outline-secondary blue-btn-silent\">\n    Button\n</button>`}</SyntaxHighlighter>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"blue-opacity-hover\">\n                                <code>.blue-opacity-hover</code>,{\" \"}\n                                <code>.blue-opacity-hover-content-active</code>,{\" \"}\n                                <code>.blue-opacity-hover-content-default</code>\n                            </HashLink>\n                            <p>\n                                With <code>.blue-opacity-hover</code> you can\n                                hide things by default and let them appear when\n                                the user hovers the area around it.\n                                <br />\n                                This way you can simplify the UI a bit and make\n                                controls disappear when they are not needed. On\n                                touch screens the elements will always be\n                                visible.\n                                <br />\n                                Usage:\n                            </p>\n\n                            <div className=\"card blue-opacity-hover p-3 flex-row justify-content-between\">\n                                <h5 className=\"blue-opacity-hover-content-default\">\n                                    Hover here to see a button\n                                </h5>\n                                <button className=\"btn btn-secondary blue-opacity-hover-content-active\">\n                                    Hey there\n                                </button>\n                            </div>\n                            <SyntaxHighlighter\n                                style={syntaxHighlighterStyle}\n                                language=\"html\"\n                            >{`<div className=\"card blue-opacity-hover p-3 flex-row justify-content-between\">\n    <h5 className=\"blue-opacity-hover-content-default\">Hover here to see a button</HashLink>\n    <button className=\"btn btn-secondary blue-opacity-hover-content-active\">Hey there</button>\n</div>`}</SyntaxHighlighter>\n                        </article>\n\n                        <article className=\"mb-5\">\n                            <HashLink id=\"blue-d-hover\">\n                                <code>.blue-d-hover</code>,{\" \"}\n                                <code>.blue-d-hover-content-active</code>,{\" \"}\n                                <code>.blue-d-hover-content-default</code>\n                            </HashLink>\n                            <p>\n                                <code>.blue-d-hover</code> is similar to{\" \"}\n                                <code>.blue-opacity-hover</code>, but the\n                                elements will disappear and appear with the{\" \"}\n                                <code>display</code> property.\n                                <br />\n                                It is ideal if you want to replace something\n                                with something else when the user hovers. On the\n                                example I used it to change the edit and delete\n                                icons from lineout to filled when hovering.\n                                <br />\n                                Usage:\n                            </p>\n\n                            <button className=\"btn blue-d-hover d-inline-flex align-items-center gap-1\">\n                                <CheckCircle className=\"blue-d-hover-content-default\" />\n                                <CheckCircleFill className=\"blue-d-hover-content-active\" />{\" \"}\n                                Hover to fill the icon\n                            </button>\n                            <SyntaxHighlighter\n                                style={syntaxHighlighterStyle}\n                                language=\"html\"\n                            >{`<button className=\"btn blue-d-hover d-inline-flex align-items-center gap-1\">\n    <CheckCircle className=\"blue-d-hover-content-default\" />\n    <CheckCircleFill className=\"blue-d-hover-content-active\" /> Hover to fill the icon\n</button>`}</SyntaxHighlighter>\n                        </article>\n\n                        <h2 className=\"page-header\">JavaScript Functions</h2>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>Definition</th>\n                                    <th>Description</th>\n                                    <th>Demo</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {utilitiesFunctions\n                                    .sort((a, b) =>\n                                        a.definition > b.definition\n                                            ? 1\n                                            : b.definition > a.definition\n                                            ? -1\n                                            : 0\n                                    )\n                                    .map((fun, index) => (\n                                        <tr key={index}>\n                                            <td>\n                                                <code>\n                                                    Utilities.{fun.definition}\n                                                </code>\n                                            </td>\n                                            <td>{fun.description}</td>\n                                            {fun.demo ? (\n                                                <td>{fun.demo}</td>\n                                            ) : (\n                                                <td />\n                                            )}\n                                        </tr>\n                                    ))}\n                            </tbody>\n                        </table>\n\n                        <h2 className=\"page-header\">Example</h2>\n                        <SyntaxHighlighter\n                            style={syntaxHighlighterStyle}\n                            language=\"javascript\"\n                        >{`import { Utilities } from \"blue-react\"\n                            \nUtilities.startLoading()`}</SyntaxHighlighter>\n                    </div>\n                )\n            }\n        ]\n        return (\n            <Page>\n                <Body containerClass=\"no-container pt-5 pt-md-0 d-flex flex-column docs-min-height-100vh\">\n                    <div className=\"container flex-grow-1\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                {sections.map((s, i) => (\n                                    <article\n                                        key={i}\n                                        id={\n                                            \"section-\" +\n                                            encodeURIComponent(s.title)\n                                        }\n                                    >\n                                        <h1 className=\"page-header\">\n                                            {s.title}\n                                        </h1>\n                                        {s.body}\n                                    </article>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Footer />\n                </Body>\n            </Page>\n        )\n    }\n}\nexport default UtilitiesPage\n","import React from \"react\"\nimport Utilities from \"./Utilities\"\n\nexport interface HeaderProps {\n    children?: any\n}\n\n/**\n * The top of a page.\n */\nexport default function Header({ children }: HeaderProps) {\n    return (\n        <div className=\"blue-app-header blue-app-header-extension\">\n            <div\n                className=\"ui-header-wrapper\"\n                onClick={Utilities.scrollToTop}\n            />\n\n            {children}\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { breakOption } from \"./shared\"\nimport Utilities from \"./Utilities\"\n\nexport interface ActionsProps {\n    /**\n     * Content that will appear on the menu when it's expanded.\n     */\n    children?: any\n\n    /**\n     * Extends the `className` of `.blue-actions`.\n     */\n    className?: string\n\n    /**\n     * Extends the `className` of `.blue-actions-controls`.\n     */\n    controlsClassName?: string\n\n    /**\n     * Content that will appear when the menu is shrunken.\n     */\n    featured?: any\n    open?: boolean\n\n    /**\n     * Will fire when the state of `open` will change inside of the component.\n     * **Example:** `onToggle={open => this.setState({ open })}`\n     */\n    onToggle?: (open: boolean) => void\n    break?: breakOption\n}\n\nfunction collapseSection(element: HTMLElement) {\n    /* Source of these functions: https://css-tricks.com/using-css-transitions-auto-dimensions/ */\n    var sectionHeight = element.scrollHeight\n    var elementTransition = element.style.transition\n    element.style.transition = \"\"\n\n    requestAnimationFrame(function () {\n        element.style.height = sectionHeight + \"px\"\n        element.style.transition = elementTransition\n        requestAnimationFrame(function () {\n            element.style.height = 84 + \"px\"\n        })\n    })\n    element.setAttribute(\"data-collapsed\", \"true\")\n}\n\nfunction expandSection(element: HTMLElement) {\n    var sectionHeight = element.scrollHeight\n    element.style.height = sectionHeight + \"px\"\n\n    const fun = function (e: TransitionEvent) {\n        element.removeEventListener(\"transitionend\", fun)\n        element.style.height = \"\"\n    }\n    element.addEventListener(\"transitionend\", fun)\n    element.setAttribute(\"data-collapsed\", \"false\")\n}\n\n/**\n * @deprecated Please use `ActionMenu` instead.\n */\nexport default function Actions(props: ActionsProps) {\n    const [open, setOpen] = useState<boolean>(props.open || false)\n    const id = `Actions-${Utilities.guid()}`\n\n    const toggle = () => {\n        const newOpen = !open\n        const element = document.getElementById(id) as HTMLElement\n        if (element) {\n            setOpen(newOpen)\n            if (newOpen) {\n                expandSection(element)\n            } else {\n                collapseSection(element)\n            }\n\n            if (props.onToggle) {\n                props.onToggle(open)\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (props.open !== open && props.open !== undefined) {\n            setOpen(props.open)\n        }\n    }, [props.open])\n\n    return (\n        <div\n            id={id}\n            className={\n                \"blue-actions \" +\n                props.className +\n                \" \" +\n                (open ? \"open\" : \"closed\") +\n                ` break-${props.break || \"md\"}`\n            }\n        >\n            <div\n                className={`blue-actions-indicator d-${props.break}-none`}\n                onClick={toggle}\n            />\n\n            <div className={\"blue-actions-controls \" + props.controlsClassName}>\n                {props.children}\n            </div>\n\n            <div className={`blue-actions-featured d-${props.break}-none`}>\n                <div className=\"fluent-btn\">\n                    <div className=\"fluent-btn-ball\" />\n                    {props.featured}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport Utilities from \"./Utilities\"\n\nexport interface HeaderTitleProps {\n    /**\n     * Can be an image. Will be placed inside of the `src` attribute.\n     */\n    logo?: string\n\n    /**\n     * Text next to the logo.\n     */\n    appTitle?: string\n\n    /**\n     * Disables that the app title will disappear at a specific view width.\n     */\n    keepAppTitle?: boolean\n\n    children?: any\n\n    /**\n     * Extends `className` from parent element.\n     */\n    className?: string\n\n    /**\n     * Is the component used on the sidebar?\n     */\n    sidebar?: boolean\n}\n\n/**\n * The title area at the header bar.\n * Depending on its content, the document's title will be set aswell (what will be shown in the browser title bar).\n */\nexport default function HeaderTitle({\n    logo,\n    appTitle,\n    keepAppTitle,\n    children,\n    className,\n    sidebar\n}: HeaderTitleProps) {\n    const uniqueId = \"HeaderTitle-\" + Utilities.guid()\n\n    const setDocumentTitle = () => {\n        if (\n            window.blueGridRef &&\n            window.blueGridRef.props &&\n            window.blueGridRef.props.disableTitleSet === false\n        ) {\n            const element = document.querySelector(\n                `#${uniqueId} .blue-app-header-logo-title-labels`\n            ) as HTMLElement\n            const titleElement = document.querySelector(\"title\")\n            if (element && element.innerText && titleElement) {\n                const titlePaths = element.innerText.split(\"/\")\n                if (titlePaths.length > 1) {\n                    titleElement.innerText = `${titlePaths[\n                        titlePaths.length - 1\n                    ].trim()} - ${titlePaths[0].trim()}`\n                } else {\n                    titleElement.innerText = element.innerText\n                }\n            }\n        }\n    }\n\n    useEffect(setDocumentTitle, [])\n    useEffect(setDocumentTitle, [children])\n\n    return (\n        <h3\n            id={uniqueId}\n            className={\n                \"blue-app-header-logo\" +\n                (className ? ` ${className}` : \"\") +\n                (sidebar ? \" sidebar\" : \"\")\n            }\n        >\n            <span className=\"blue-app-header-logo-title\">\n                {logo ? (\n                    <span>\n                        <a href=\"#\">\n                            <img\n                                src={logo}\n                                className=\"blue-app-header-logo-image\"\n                            />\n                        </a>\n                        &nbsp;\n                    </span>\n                ) : (\n                    \"\"\n                )}\n                <span\n                    className={\n                        \"blue-app-header-logo-title-labels \" +\n                        (keepAppTitle ? \"keep\" : \"\")\n                    }\n                >\n                    {appTitle ? (\n                        <span>\n                            <a href=\"#\">{appTitle}</a> {children ? \"/\" : \"\"}\n                            &nbsp;\n                        </span>\n                    ) : (\n                        \"\"\n                    )}\n                    {children}\n                </span>\n            </span>\n        </h3>\n    )\n}\n","import React, { Fragment } from \"react\"\nimport Page from \"../../components/Page\"\nimport Body from \"../../components/Body\"\nimport Header from \"../../components/Header\"\nimport Actions from \"../../components/Actions\"\nimport MenuItem from \"../../components/MenuItem\"\nimport HeaderTitle from \"../../components/HeaderTitle\"\nimport { useParams } from \"react-router-dom\"\n\nconst MyFeaturedMenuItem = () => (\n    <Fragment>\n        <MenuItem\n            icon={\n                <svg\n                    width=\"1em\"\n                    height=\"1em\"\n                    viewBox=\"0 0 16 16\"\n                    className=\"bi bi-bag-fill\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path d=\"M1 4h14v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4zm7-2.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\" />\n                </svg>\n            }\n            label=\"Test\"\n        />\n\n        <MenuItem\n            icon={\n                <svg\n                    width=\"1em\"\n                    height=\"1em\"\n                    viewBox=\"0 0 16 16\"\n                    className=\"bi bi-bell-fill\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\" />\n                </svg>\n            }\n            label=\"Test2\"\n        />\n    </Fragment>\n)\n\nexport const ActionsExamplePage = () => {\n    const { headerless } = useParams<any>()\n\n    return (\n        <Page>\n            {!headerless && (\n                <Header>\n                    <HeaderTitle appTitle=\"My app with actions\" />\n                </Header>\n            )}\n            <Actions featured={<MyFeaturedMenuItem />}>\n                <MyFeaturedMenuItem />\n                <MenuItem\n                    icon={\n                        <svg\n                            width=\"1em\"\n                            height=\"1em\"\n                            viewBox=\"0 0 16 16\"\n                            className=\"bi bi-bell-fill\"\n                            fill=\"currentColor\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\" />\n                        </svg>\n                    }\n                    label=\"Another one\"\n                />\n            </Actions>\n            <Body hasActions>...</Body>\n        </Page>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport MarkdownGitHub from \"react-markdown-github\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\nimport Utilities from \"../../components/Utilities\"\nimport { GitHubContent } from \"../gitHubApiTypes\"\n\nconst renderers = {\n    code: ({ language, value }: any) => {\n        return (\n            <SyntaxHighlighter\n                style={syntaxHighlighterStyle}\n                language={language}\n                children={value}\n            />\n        )\n    }\n}\n\nexport interface RecipeProps {\n    recipe: GitHubContent\n}\n\nexport function Recipe({ recipe }: RecipeProps) {\n    const [markdown, setMarkdown] = useState<string | null>(null)\n\n    useEffect(() => {\n        fetchRecipe()\n    }, [recipe])\n\n    const fetchRecipe = async () => {\n        if (recipe.download_url !== undefined) {\n            const r = await fetch(recipe.download_url)\n            const text = await r.text()\n            setMarkdown(text)\n        } else {\n            Utilities.setAlertMessage(\n                \"This GitHub file has no download_url\",\n                \"danger\",\n                true\n            )\n        }\n    }\n\n    const transformImageUri = ({ uri, github, org, repo, filename }: any) => {\n        // console.log(uri, github, org, repo, filename)\n        return `https://raw.githubusercontent.com/bruegmann/blue-react/master/recipes/${uri}`\n    }\n\n    return (\n        <>\n            {markdown !== null ? (\n                <MarkdownGitHub\n                    source={markdown}\n                    sourceUri={recipe.html_url}\n                    transformImageUri={transformImageUri}\n                    renderers={renderers}\n                    className=\"recipe-markdown\"\n                />\n            ) : (\n                <div>...</div>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Link, NavLink, useParams } from \"react-router-dom\"\nimport Body from \"../../components/Body\"\nimport Page from \"../../components/Page\"\nimport { Footer } from \"../components/Footer\"\nimport { Recipe } from \"../components/Recipe\"\nimport { GitHubContent } from \"../gitHubApiTypes\"\n\nexport function RecipesPage() {\n    const [recipes, setRecipes] = useState<GitHubContent[] | null>(null)\n    const { active } = useParams<any>()\n    const [activeRecipe, setActiveRecipe] = useState<GitHubContent | null>(null)\n\n    useEffect(() => {\n        if (recipes === null) {\n            fetchRecipes()\n        }\n    }, [recipes])\n\n    useEffect(() => {\n        if (active !== undefined && active !== null && recipes !== null) {\n            recipes.forEach((recipe: GitHubContent) => {\n                if (recipe.name.toLowerCase() === active.toLowerCase()) {\n                    setActiveRecipe(recipe)\n                }\n            })\n        } else {\n            setActiveRecipe(null)\n        }\n    }, [active, recipes])\n\n    const fetchRecipes = async () => {\n        const url =\n            \"https://api.github.com/repos/bruegmann/blue-react/contents/recipes\"\n        const r = await fetch(`${url}`)\n\n        const contents = (await r.json()) as GitHubContent[]\n\n        if (contents && Array.isArray(contents)) {\n            const recipes = contents.filter(\n                (c: GitHubContent) =>\n                    c.name.endsWith(\".md\") &&\n                    c.name.toLowerCase() !== \"readme.md\"\n            )\n            setRecipes(recipes)\n        }\n    }\n\n    return (\n        <Page>\n            <Body containerClass=\"d-flex flex-column docs-min-height-100vh\">\n                <div className=\"container-fluid pt-5 pt-md-0 flex-grow-1\">\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n                            <div className=\"sticky-top\" style={{ zIndex: 0 }}>\n                                <div>\n                                    <nav className=\"nav nav-pills flex-column mt-3\">\n                                        {recipes !== null ? (\n                                            recipes.map(\n                                                (recipe: GitHubContent) => (\n                                                    <div\n                                                        key={recipe.sha}\n                                                        className=\"nav-item\"\n                                                    >\n                                                        <NavLink\n                                                            to={`/recipes/${recipe.name}`}\n                                                            className=\"nav-link\"\n                                                        >\n                                                            {recipe.name.replace(\n                                                                \".md\",\n                                                                \"\"\n                                                            )}\n                                                        </NavLink>\n                                                    </div>\n                                                )\n                                            )\n                                        ) : (\n                                            <div>Loading...</div>\n                                        )}\n                                    </nav>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-10\">\n                            {activeRecipe !== null ? (\n                                <Recipe recipe={activeRecipe} />\n                            ) : (\n                                <>\n                                    <h1 className=\"page-header\">Recipes</h1>\n\n                                    <p>\n                                        Recipes are short tutorials or\n                                        instructions for specific scenarious. On\n                                        the side you see a list of all available\n                                        recipes.\n                                    </p>\n                                </>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                <Footer containerClass=\"container-fluid\" />\n            </Body>\n        </Page>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\r\nimport MenuItem from \"./MenuItem\"\r\nimport { breakOption } from \"./shared\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface ActionMenuProps {\r\n    /**\r\n     * Hides the toggle button in mobile view. Can be useful when using multiple ActionMenus and not show the toggle button for each menu.\r\n     */\r\n    hideToggleAction?: boolean\r\n\r\n    children?: any\r\n\r\n    /**\r\n     * Icon component for the toggle icon.\r\n     */\r\n    toggleIcon?: any\r\n\r\n    className?: string\r\n\r\n    /**\r\n     * \"sm\" | \"md\" | \"lg\" | \"xl\" | \"none\"\r\n     */\r\n    break?: breakOption | \"none\"\r\n}\r\n\r\n/**\r\n * The Action Menu on the top right of a page. You can place Actions here which are in context of the current page.\r\n */\r\nexport default function ActionMenu(props: ActionMenuProps) {\r\n    const {\r\n        hideToggleAction,\r\n        children,\r\n        className,\r\n        toggleIcon = \"bi-iconmonstr-menu-7\"\r\n    } = props\r\n    const _break = props.break || \"lg\"\r\n\r\n    const [actionsToggledIn, setActionsToggledIn] = useState<boolean>(false)\r\n\r\n    const toggleActions = () => {\r\n        Utilities.toggleActions()\r\n        initToggleStatus()\r\n    }\r\n\r\n    const initToggleStatus = () => {\r\n        setActionsToggledIn(\r\n            Utilities.hasClass(\r\n                document.querySelector(\".blue-app-actions\"),\r\n                \"open\"\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        initToggleStatus()\r\n\r\n        const appWrapper = document.querySelector(\r\n            \".blue-app-wrapper\"\r\n        ) as HTMLElement\r\n        if (appWrapper) {\r\n            appWrapper.onclick = toggleActions\r\n        }\r\n\r\n        document\r\n            .querySelectorAll(\".blue-app-actions-menu .nav-link\")\r\n            .forEach((link) => {\r\n                link.addEventListener(\"click\", () => {\r\n                    if (actionsToggledIn) {\r\n                        toggleActions()\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className={`blue-app-actions navbar ${className} navbar-expand${\r\n                _break !== \"none\" ? `-${_break}` : \"\"\r\n            } ${_break}`}\r\n        >\r\n            <div\r\n                className=\"ui-header-wrapper\"\r\n                onClick={Utilities.scrollToTop}\r\n            />\r\n            <ul className=\"blue-app-actions-menu nav navbar-nav navbar-right fluent-btn\">\r\n                <div className=\"fluent-btn-ball\" />\r\n\r\n                {!actionsToggledIn && !hideToggleAction ? (\r\n                    <MenuItem\r\n                        className=\"blue-app-actions-menu-toggle\"\r\n                        onClick={() => toggleActions()}\r\n                        icon={toggleIcon}\r\n                        aria-label=\"Toggle menu\"\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                {children}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/Body\"\r\nimport Header from \"../../components/Header\"\r\nimport MenuItem from \"../../components/MenuItem\"\r\nimport HeaderTitle from \"../../components/HeaderTitle\"\r\nimport ActionMenu from \"../../components/ActionMenu\"\r\nimport { CloudSleet, ThreeDotsVertical } from \"react-bootstrap-icons\"\r\nimport { breakOption } from \"../../components/shared\"\r\n\r\nexport const ActionMenuExamplePage = () => {\r\n    const [breakProp, setBreakProp] = useState<breakOption | \"none\">(\"md\")\r\n\r\n    return (\r\n        <Page>\r\n            <Header>\r\n                <HeaderTitle appTitle=\"My app with an action menu\" />\r\n\r\n                <ActionMenu\r\n                    toggleIcon={<ThreeDotsVertical />}\r\n                    break={breakProp}\r\n                >\r\n                    <MenuItem label=\"I'm a MenuItem\" />\r\n\r\n                    <MenuItem\r\n                        label=\"I'm a MenuItem with children\"\r\n                        supportOutside\r\n                        icon={<CloudSleet />}\r\n                    >\r\n                        <MenuItem label=\"I'm a MenuItem\" />\r\n                        <MenuItem label=\"Another one\" />\r\n                    </MenuItem>\r\n                </ActionMenu>\r\n            </Header>\r\n            <Body className=\"mt-5\">\r\n                <label\r\n                    className=\"my-1 me-2\"\r\n                    htmlFor=\"ActionMenuExamplePage-breakProp\"\r\n                >\r\n                    <code>break</code> prop\r\n                </label>\r\n                <select\r\n                    className=\"form-select my-1 me-sm-2\"\r\n                    id=\"ActionMenuExamplePage-breakProp\"\r\n                    value={breakProp}\r\n                    onChange={({ target }) => setBreakProp(target.value as any)}\r\n                >\r\n                    <option value=\"sm\">sm</option>\r\n                    <option value=\"md\">md</option>\r\n                    <option value=\"lg\">lg</option>\r\n                    <option value=\"xl\">xl</option>\r\n                    <option value=\"none\">none</option>\r\n                </select>\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React from \"react\"\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink,\n    Link\n} from \"react-router-dom\"\nimport Grid from \"../components/Grid\"\n\nimport \"./docs.scss\"\nimport { HomePage } from \"./pages/HomePage\"\nimport SidebarMenu from \"../components/SidebarMenu\"\nimport MenuItem from \"../components/MenuItem\"\n\nimport {\n    List,\n    House,\n    CodeSquare,\n    Puzzle,\n    Tools,\n    XCircleFill,\n    InfoCircleFill,\n    CheckCircleFill,\n    ExclamationCircleFill,\n    Palette2,\n    HouseFill,\n    PuzzleFill,\n    Stickies,\n    StickiesFill\n} from \"react-bootstrap-icons\"\n\nimport { ComponentPage } from \"./pages/ComponentPage\"\nimport { IntroDemoPage } from \"./pages/IntroDemoPage\"\nimport UtilitiesPage from \"./pages/UtilitiesPage\"\nimport { ActionsExamplePage } from \"./pages/ActionsExamplePage\"\nimport HeaderTitle from \"../components/HeaderTitle\"\nimport { appTitle, logo } from \"./Global\"\nimport { RecipesPage } from \"./pages/RecipesPage\"\nimport { ActionMenuExamplePage } from \"./pages/ActionMenuExamplePage\"\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Grid\n                pages={[]}\n                unrouteable\n                expandSidebar\n                sidebarToggleIconComponent={<List />}\n                statusIcons={{\n                    danger: <XCircleFill />,\n                    info: <InfoCircleFill />,\n                    success: <CheckCircleFill />,\n                    warning: <ExclamationCircleFill />\n                }}\n                disableHeaders\n            >\n                <HeaderTitle sidebar>\n                    <Link to=\"/\">\n                        <img\n                            src={logo}\n                            className=\"blue-app-header-logo-image\"\n                            alt=\"B\"\n                        />\n                    </Link>{\" \"}\n                    <Link to=\"/\">{appTitle}</Link>\n                </HeaderTitle>\n\n                <SidebarMenu\n                    bottomContent={\n                        <div className=\"fluent-btn\">\n                            <div className=\"fluent-btn-ball\" />\n\n                            <MenuItem\n                                href=\"https://bruegmann.github.io/themify/customize\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                label=\"Customize with Themify\"\n                                icon={<Palette2 />}\n                            />\n\n                            <MenuItem\n                                href=\"https://github.com/bruegmann/blue-react\"\n                                icon={<CodeSquare />}\n                                label=\"Code on GitHub\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            />\n                        </div>\n                    }\n                >\n                    <MenuItem\n                        icon={<House />}\n                        iconForActive={<HouseFill />}\n                        label=\"Start\"\n                        elementType={NavLink}\n                        exact\n                        to=\"/\"\n                    />\n                    <MenuItem\n                        icon={<Tools />}\n                        label=\"Utilities\"\n                        elementType={NavLink}\n                        to=\"/utilities\"\n                    />\n                    <MenuItem\n                        icon={<Puzzle />}\n                        iconForActive={<PuzzleFill />}\n                        label=\"React Components\"\n                        elementType={NavLink}\n                        to=\"/component\"\n                    />\n                    <MenuItem\n                        icon={<Stickies />}\n                        iconForActive={<StickiesFill />}\n                        label=\"Recipes\"\n                        elementType={NavLink}\n                        to=\"/recipes\"\n                    />\n                </SidebarMenu>\n\n                <div className=\"router-page active\">\n                    <Switch>\n                        <Route path=\"/utilities\">\n                            <UtilitiesPage />\n                        </Route>\n                        <Route path=\"/component/:selectedComponent?\">\n                            <ComponentPage />\n                        </Route>\n\n                        <Route path=\"/intro-demo\">\n                            <IntroDemoPage />\n                        </Route>\n\n                        <Route path=\"/actions-example/:headerless?\">\n                            <ActionsExamplePage />\n                        </Route>\n\n                        <Route path=\"/action-menu-example\">\n                            <ActionMenuExamplePage />\n                        </Route>\n\n                        <Route path=\"/recipes/:active?\">\n                            <RecipesPage />\n                        </Route>\n\n                        <Route path=\"/\">\n                            <HomePage />\n                        </Route>\n                    </Switch>\n                </div>\n            </Grid>\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It\"s the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\")\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can\"t reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\")\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            )\n        })\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister()\n            })\n            .catch((error) => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./docs/App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export type breakOption = \"sm\" | \"md\" | \"lg\" | \"xl\"\nexport type ModalType = \"ask\" | \"tell\" | \"verify\"\n\ninterface Phrases {\n    [key: string]: string[]\n}\n\nconst phrases: Phrases = {\n    Cancel: [\"Cancel\", \"Abbrechen\"],\n    Yes: [\"Yes\", \"Ja\"],\n    No: [\"No\", \"Nein\"],\n    Message: [\"Message\", \"Nachricht\"]\n}\n\nexport function getPhrase(\n    keyword: string,\n    countryCode: string | undefined = undefined,\n    _phrases: Phrases | undefined = undefined\n) {\n    countryCode =\n        countryCode || navigator.language.toLowerCase().indexOf(\"de\") > -1\n            ? \"de-DE\"\n            : \"en-US\"\n    _phrases = _phrases || phrases\n\n    if (_phrases[keyword]) {\n        if (countryCode.indexOf(\"de-\") > -1) {\n            return _phrases[keyword][1]\n        } else {\n            return _phrases[keyword][0]\n        }\n    } else {\n        return keyword\n    }\n}\n","import Utilities from \"./Utilities\"\nimport FluentBtn from \"./FluentBtn\"\nimport React, {\n    FormEvent,\n    useEffect,\n    useState,\n    MutableRefObject,\n    useRef\n} from \"react\"\nimport { Modal as BootstrapModal } from \"bootstrap\"\nimport { getPhrase, ModalType } from \"./shared\"\n\nexport interface ModalProps {\n    modalContent?: string\n    unSetModalContent: (modalContent?: string) => void\n\n    /**\n     * Type of `input` depends on `type` prop and which action occured.\n     * When it's a string, the user entered something. When it's a boolean, the user clicked \"Yes\" or \"No\".\n     * When it's `null`, the user cancelled the modal.\n     */\n    onSubmit?: (input: string | boolean | null) => void\n    defaultInput?: string\n\n    /**\n     * `\"ask\"` | `\"tell\"` | `\"verify\"`\n     */\n    type: ModalType\n}\n\n/**\n * Simple modal/dialog. Designed to work as an alternative to JavaScript's native `alert()`, `prompt()` and `confirm()` functions.\n * It uses Bootstrap's Modal components.\n *\n * For easy use, you should use the hook `useModal` together with `ModalProvider`. See the example below.\n */\nexport default function Modal({\n    modalContent,\n    unSetModalContent,\n    onSubmit,\n    defaultInput,\n    type\n}: ModalProps) {\n    const modalRef = useRef() as MutableRefObject<HTMLDivElement>\n    const [input, setInput] = useState<string>(defaultInput || \"\")\n    const cancel = () => {\n        unSetModalContent()\n        if (onSubmit) {\n            onSubmit(null)\n        }\n    }\n    const sayNo = () => {\n        unSetModalContent()\n        if (onSubmit) {\n            onSubmit(false)\n        }\n    }\n    const submit = (e: FormEvent) => {\n        e.preventDefault()\n        if (onSubmit) {\n            onSubmit(input || true)\n        }\n    }\n    const btnStyle = { maxWidth: \"10rem\" }\n    useEffect(() => {\n        setInput(defaultInput || \"\")\n    }, [defaultInput])\n    useEffect(() => {\n        Utilities.registerFluentBtns()\n    })\n\n    useEffect(() => {\n        const myModal = modalRef.current as unknown as Element\n        let bsModal = BootstrapModal.getInstance(myModal)\n\n        if (!bsModal) {\n            bsModal = new BootstrapModal(myModal)\n            bsModal.hide()\n\n            // When the user clicks on underlay to close the modal\n            myModal.addEventListener(\"hidden.bs.modal\", () => {\n                cancel()\n            })\n        } else {\n            modalContent !== undefined ? bsModal.show() : bsModal.hide()\n        }\n    }, [modalContent])\n\n    return (\n        <div className=\"modal\" ref={modalRef} tabIndex={-1}>\n            <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                    <form onSubmit={submit}>\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">\n                                {getPhrase(\"Message\")}\n                            </h5>\n                            <button\n                                type=\"button\"\n                                className=\"btn-close\"\n                                onClick={cancel}\n                            />\n                        </div>\n\n                        <div className=\"modal-body\">\n                            {modalContent}\n                            {type === \"ask\" && (\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control mt-1\"\n                                    value={input}\n                                    onChange={({ target }) =>\n                                        setInput(target.value)\n                                    }\n                                    autoFocus\n                                />\n                            )}\n                        </div>\n\n                        <div className=\"modal-footer\">\n                            <FluentBtn\n                                type=\"submit\"\n                                className=\"btn btn-primary d-block w-100\"\n                                style={btnStyle}\n                            >\n                                {type === \"verify\" ? getPhrase(\"Yes\") : \"OK\"}\n                            </FluentBtn>\n                            {(type === \"ask\" || type === \"verify\") &&\n                                (type === \"verify\" ? (\n                                    <FluentBtn\n                                        className=\"btn btn-outline-primary d-block w-100\"\n                                        style={btnStyle}\n                                        onClick={sayNo}\n                                    >\n                                        {getPhrase(\"No\")}\n                                    </FluentBtn>\n                                ) : (\n                                    <FluentBtn\n                                        className=\"btn btn-outline-primary d-block w-100\"\n                                        style={btnStyle}\n                                        onClick={cancel}\n                                    >\n                                        {getPhrase(\"Cancel\")}\n                                    </FluentBtn>\n                                ))}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { createContext, useCallback, useContext, useState } from \"react\"\nimport { ModalType } from \"./shared\"\nimport Modal from \"./Modal\"\n\nconst ModalContext = createContext({\n    ask: undefined as unknown as (text: string) => Promise<string | boolean>,\n    tell: undefined as unknown as (text: string) => Promise<boolean>,\n    verify: undefined as unknown as (text: string) => Promise<boolean>\n})\n\nconst ModalProvider = (props: any) => {\n    const [type, setType] = useState<ModalType>(\"tell\")\n    const [modalContent, setModalContent] = useState<string | undefined>()\n    const [defaultInput, setDefaultInput] = useState<string | undefined>()\n    const unSetModalContent = useCallback(() => {\n        setModalContent(undefined)\n    }, [setModalContent])\n\n    const [onSubmit, setOnSubmit] = useState<\n        ((input: string | boolean | null) => void) | undefined\n    >()\n\n    const ask = (text: string) => {\n        return new Promise((resolve: (input: string | boolean) => void) => {\n            setType(\"ask\")\n            setModalContent(text)\n            setDefaultInput(\"\")\n            setOnSubmit(() => (input: string | boolean) => {\n                resolve(input)\n                setModalContent(undefined)\n                setDefaultInput(undefined)\n            })\n        })\n    }\n\n    const tell = (text: string) => {\n        return new Promise((resolve: (input: boolean) => void) => {\n            setType(\"tell\")\n            setModalContent(text)\n            setOnSubmit(() => (input: string | boolean) => {\n                resolve(input ? true : false)\n                setModalContent(undefined)\n            })\n        })\n    }\n\n    const verify = (text: string) => {\n        return new Promise((resolve: (input: boolean) => void) => {\n            setType(\"verify\")\n            setModalContent(text)\n            setOnSubmit(() => (input: string | boolean) => {\n                resolve(input ? true : false)\n                setModalContent(undefined)\n            })\n        })\n    }\n\n    return (\n        <ModalContext.Provider\n            value={{\n                ask,\n                tell,\n                verify\n            }}\n            {...props}\n        >\n            {props.children}\n            <Modal\n                modalContent={modalContent}\n                unSetModalContent={unSetModalContent}\n                onSubmit={onSubmit}\n                defaultInput={defaultInput}\n                type={type}\n            />\n        </ModalContext.Provider>\n    )\n}\n\nconst useModal = () => {\n    const context = useContext(ModalContext)\n    if (context === undefined) {\n        throw new Error(\"useModal must be used within a ModalProvider\")\n    }\n    return context\n}\n\nexport { ModalProvider, useModal }\n","import { ModalProvider, useModal } from \"../../components/ModalProvider\"\nimport FluentBtn from \"../../components/FluentBtn\"\n\nfunction InsideComp() {\n    // Use the `useModal` hook.\n    const { tell, verify, ask } = useModal()\n\n    return (\n        <div className=\"d-flex gap-2\">\n            <FluentBtn\n                className=\"btn btn-outline-secondary\"\n                onClick={() => {\n                    tell(\"Hey, what's up\")\n                }}\n            >\n                tell\n            </FluentBtn>\n\n            <FluentBtn\n                className=\"btn btn-outline-secondary\"\n                onClick={\n                    // Make sure to make your function \"async\" when using \"await\"\n                    async () => {\n                        // Use \"await\" to wait until the user enters something\n                        const answer = await ask(\"What is 1 + 1?\")\n                        if (answer && parseInt(answer.toString()) === 2) {\n                            tell(\"That's correct!\")\n                        } else {\n                            tell(\"Wrong!\")\n                        }\n                    }\n                }\n            >\n                ask\n            </FluentBtn>\n\n            <FluentBtn\n                className=\"btn btn-outline-secondary\"\n                onClick={async () => {\n                    const answer = await verify(\"Are you sure?\")\n                    console.log({ answer })\n                    if (answer === true) {\n                        tell(\"So, you're sure\")\n                    }\n                }}\n            >\n                verify\n            </FluentBtn>\n\n            <FluentBtn\n                className=\"btn btn-secondary\"\n                onClick={async () => {\n                    const name = await ask(\"What is your name?\")\n                    console.log(name)\n                    if (name) {\n                        const retVal = await tell(\"Hello, \" + name)\n                        console.log(retVal)\n\n                        if (await verify(\"Is everything alright?\")) {\n                            await tell(\"Oh, nice\")\n                        } else {\n                            await tell(\"Oh no :(\")\n                        }\n                    }\n                }}\n            >\n                Start a conversation\n            </FluentBtn>\n        </div>\n    )\n}\n\n/**\n * Your component where you use `useModal` has to be wrapped around `<ModalProvider></ModalProvider>`.\n * Best practice is to wrap it around your root component.\n */\nexport default function ModalExample() {\n    return (\n        <ModalProvider>\n            <InsideComp />\n        </ModalProvider>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport Utilities from \"./Utilities\"\n\nexport interface DocumentViewProps {\n    /**\n     * Source of the content (URL)\n     */\n    src?: string\n\n    /**\n     * Instead of a source, you can also set the content directly (HTML)\n     */\n    content?: string\n\n    /**\n     * MIME type of the content (e.g. \"application/pdf\")\n     */\n    mimeType: string\n\n    /**\n     * Label for the button to display\n     */\n    showDocumentLabel: string\n}\n\n/**\n * Tries to display content in an iframe. When the content can't displayed in an iframe, it will show a download button instead.\n */\nexport default function DocumentView({\n    content,\n    mimeType,\n    src = \"about:blank\",\n    showDocumentLabel = \"Show document\"\n}: DocumentViewProps) {\n    const uniqueId = \"document-view-\" + Utilities.guid()\n\n    const supportsIframe = () =>\n        mimeType === \"application/pdf\" ||\n        mimeType === \"image/png\" ||\n        mimeType === \"image/jpeg\" ||\n        mimeType === \"image/gif\" ||\n        mimeType === \"image/tiff\" ||\n        mimeType === \"text/plain\" ||\n        mimeType === \"text/html\"\n\n    useEffect(() => {\n        if (supportsIframe()) {\n            Utilities.startLoading()\n\n            if (content) {\n                let iframe = document.getElementById(\n                    uniqueId\n                ) as HTMLIFrameElement\n\n                if (iframe && iframe.contentWindow) {\n                    iframe.contentWindow.document.open()\n                    iframe.contentWindow.document.write(content)\n                    iframe.contentWindow.document.close()\n                }\n            }\n        }\n    }, [])\n\n    return (\n        <div>\n            {supportsIframe() ? (\n                <iframe\n                    id={uniqueId}\n                    className=\"document-view-iframe\"\n                    src={src}\n                    onLoad={({ target }: any) => {\n                        Utilities.finishLoading()\n\n                        const iframeContent =\n                            target.contentDocument ||\n                            target.contentWindow.document\n\n                        if (mimeType.indexOf(\"image/\") > -1) {\n                            let image = iframeContent.querySelector(\"img\")\n\n                            if (image) {\n                                if (image.offsetWidth > image.offsetHeight) {\n                                    image.style.width = \"100%\"\n                                } else {\n                                    image.style.height = \"100%\"\n                                }\n                            }\n                        }\n                    }}\n                />\n            ) : (\n                <a href={src} className=\"btn btn-secondary btn-lg d-block\">\n                    {showDocumentLabel}\n                </a>\n            )}\n        </div>\n    )\n}\n","import React from \"react\"\nimport DocumentView from \"../../components/DocumentView\"\n\nclass DocumentViewExample extends React.Component {\n    render() {\n        return (\n            <div>\n                <DocumentView\n                    src=\"/blue-react/v7/example-document.pdf\"\n                    mimeType=\"application/pdf\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default DocumentViewExample\n","import React, { useState } from \"react\"\nimport Caret from \"./Caret\"\nimport Utilities from \"./Utilities\"\n\nexport interface DropdownMenuItemProps {\n    to?: string\n    icon?: any\n    label?: any\n    isActive?: boolean\n    children?: any\n}\n\n/**\n * Dropdown with button for sidebar.\n */\nexport default function DropdownMenuItem(props: DropdownMenuItemProps) {\n    const [active, setActive] = useState<boolean>(props.isActive || false)\n    const [showDropdown, setShowDropdown] = useState<boolean>(false)\n\n    const handleClick = () => {\n        if (props.children) {\n            setShowDropdown(!showDropdown)\n        }\n    }\n\n    let icon\n\n    if (typeof props.icon === \"string\") {\n        // is className\n        icon = (\n            <span\n                className={\n                    props.icon +\n                    (props.children ? \" blue-app-sidebar-dropdown-icon\" : \"\")\n                }\n            />\n        )\n    } else {\n        // is element / component\n        icon = props.icon\n    }\n\n    let id = {\n        id: \"blue-action-menu-item-\" + Utilities.guid()\n    }\n    return (\n        <div>\n            <div className=\"btn-group w-100\">\n                <a\n                    {...id}\n                    className={\n                        \"blue-app-toggle-page blue-app-sidebar-btn btn pe-0 \" +\n                        (active ? \"active\" : \"\")\n                    }\n                    href={props.to}\n                >\n                    {icon}\n                    <span className=\"blue-app-sidebar-label\">\n                        {props.label}\n                    </span>\n                </a>\n\n                <button\n                    type=\"button\"\n                    className=\"btn blue-app-sidebar-btn w-auto ps-0\"\n                    onClick={handleClick}\n                >\n                    <span className=\"sr-only\">Toggle Dropdown</span>\n                    <Caret\n                        open={showDropdown}\n                        mirrored\n                        className=\"w-auto ps-5 mt-2\"\n                    />\n                </button>\n            </div>\n            {showDropdown && (\n                <div className=\"blue-app-sidebar-dropdown\">\n                    {props.children}\n                </div>\n            )}\n        </div>\n    )\n}\n","import React from \"react\"\nimport MenuItem from \"../../components/MenuItem\"\nimport DropdownMenuItem from \"../../components/DropdownMenuItem\"\n\nclass DropdownMenuItemExample extends React.Component {\n    render() {\n        return (\n            <div\n                className=\"blue-app-sidebar position-relative\"\n                style={{ top: \"0\" }}\n            >\n                <DropdownMenuItem\n                    to=\"#\"\n                    label=\"DropdownMenuItem\"\n                    icon=\"bi-home\"\n                >\n                    <MenuItem href=\"#\" label=\"MenuItem\"></MenuItem>\n                </DropdownMenuItem>\n            </div>\n        )\n    }\n}\n\nexport default DropdownMenuItemExample\n","import React, { MutableRefObject, useEffect, useRef } from \"react\"\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nexport function useOutside(\n    ref: MutableRefObject<any>,\n    callback?: (event: MouseEvent) => void\n) {\n    useEffect(() => {\n        /**\n         * Alert if clicked on outside of element\n         */\n        function handleClickOutside(event: MouseEvent) {\n            console.log({ target: event.target })\n            if (\n                ref.current &&\n                !ref.current.contains(event.target) &&\n                callback\n            ) {\n                callback(event)\n            }\n        }\n        // Bind the event listener\n        document.addEventListener(\"mousedown\", handleClickOutside)\n        return () => {\n            // Unbind the event listener on clean up\n            document.removeEventListener(\"mousedown\", handleClickOutside)\n        }\n    }, [ref])\n}\n\nexport interface OutsideProps {\n    children: any\n    className?: string\n    onClickOutside?: (event: MouseEvent) => void\n}\n\n/**\n * Component that fires an event if you click outside of it\n */\nexport default function Outside({\n    children,\n    className,\n    onClickOutside\n}: OutsideProps) {\n    const wrapperRef = useRef(null)\n    useOutside(wrapperRef, onClickOutside)\n\n    return (\n        <div ref={wrapperRef} className={className}>\n            {children}\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport MenuItem from \"./MenuItem\"\nimport Utilities from \"./Utilities\"\n\nexport interface SearchProps {\n    autoFocus?: boolean\n\n    /**\n     * Is component inside of a page?\n     */\n    body?: boolean\n\n    className?: string\n    icon?: any\n    onChange?: (event: React.ChangeEvent) => void\n    onSubmit?: (event: React.FormEvent) => void\n    placeholder?: string\n\n    /**\n     * Allow reset?\n     */\n    reset?: boolean\n\n    /**\n     * Define custom icon for the reset button.\n     */\n    resetIcon?: any\n\n    /**\n     * Is component inside of the sidebar?\n     */\n    sidebar?: boolean\n\n    value?: string\n}\n\n/**\n * A search bar that can be placed to the sidebar or on a page.\n */\nexport default function Search(props: SearchProps) {\n    const {\n        autoFocus,\n        body,\n        className,\n        icon,\n        onChange,\n        onSubmit,\n        placeholder,\n        reset,\n        resetIcon,\n        sidebar\n    } = props\n    const SearchControlId = \"blue-app-search-control-\" + Utilities.guid()\n\n    const [value, setValue] = useState<string>(props.value || \"\")\n    const [focus, setFocus] = useState<boolean>(false)\n\n    const toggleSidebar = () => {\n        if (sidebar) {\n            document.dispatchEvent(window.toggleSidebarEvent)\n        }\n    }\n\n    return (\n        <form\n            className={\n                \"blue-app-search \" +\n                (body ? \"blue-app-search-body \" : \"\") +\n                (focus ? \"focus \" : \"\") +\n                className\n            }\n            onSubmit={(event) => {\n                event.preventDefault()\n                toggleSidebar()\n                if (onSubmit) onSubmit(event)\n            }}\n        >\n            <div className=\"blue-app-search-input-group input-group\">\n                <span\n                    className=\"input-group-text\"\n                    onClick={() =>\n                        document.getElementById(SearchControlId)?.focus()\n                    }\n                >\n                    {icon || (\n                        <span>\n                            <svg\n                                width=\"1em\"\n                                height=\"1em\"\n                                viewBox=\"0 0 16 16\"\n                                className=\"bi bi-search mt-n1\"\n                                fill=\"currentColor\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    fillRule=\"evenodd\"\n                                    d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"\n                                />\n                                <path\n                                    fillRule=\"evenodd\"\n                                    d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"\n                                />\n                            </svg>\n                        </span>\n                    )}\n                </span>\n\n                <input\n                    type=\"search\"\n                    value={value}\n                    onChange={(event) => {\n                        setValue(event.target.value)\n                        if (onChange) onChange(event)\n                    }}\n                    id={SearchControlId}\n                    className=\"blue-app-search-control form-control default input-lg\"\n                    placeholder={placeholder}\n                    autoFocus={autoFocus}\n                    style={{\n                        zIndex: body ? 0 : undefined\n                    }}\n                    onFocus={() => setFocus(true)}\n                    onBlur={() => setFocus(false)}\n                />\n\n                {reset && value.length > 0 && (\n                    <div className=\"input-group-btn\">\n                        <button\n                            type=\"button\"\n                            className=\"blue-app-search-reset-btn btn btn-link btn-lg\"\n                            onClick={() => {\n                                setValue(\"\")\n                                document\n                                    .getElementById(SearchControlId)\n                                    ?.focus()\n                                if (onChange)\n                                    onChange({\n                                        target: {\n                                            value: \"\"\n                                        }\n                                    } as any)\n                            }}\n                        >\n                            {resetIcon || (\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    width=\"1em\"\n                                    height=\"1em\"\n                                    fill=\"currentColor\"\n                                    className=\"bi bi-x mt-n1\"\n                                    viewBox=\"0 0 16 16\"\n                                >\n                                    <path d=\"M4.646 4.646a.5.5 0 01.708 0L8 7.293l2.646-2.647a.5.5 0 01.708.708L8.707 8l2.647 2.646a.5.5 0 01-.708.708L8 8.707l-2.646 2.647a.5.5 0 01-.708-.708L7.293 8 4.646 5.354a.5.5 0 010-.708z\"></path>\n                                </svg>\n                            )}\n                        </button>\n                    </div>\n                )}\n            </div>\n\n            {sidebar && (\n                <MenuItem\n                    href=\"#\"\n                    className=\"blue-app-search-btn\"\n                    icon={icon}\n                    onClick={(event) => {\n                        event.preventDefault()\n                        toggleSidebar()\n                        setTimeout(() => {\n                            ;(\n                                document.querySelector(\n                                    \".blue-app-search-control\"\n                                ) as HTMLInputElement | null\n                            )?.select()\n                        }, 200)\n                    }}\n                />\n            )}\n        </form>\n    )\n}\n"],"sourceRoot":""}