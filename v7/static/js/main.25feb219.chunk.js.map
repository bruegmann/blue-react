{"version":3,"sources":["components/MenuItem.tsx","components/Switch.tsx","components/Caret.tsx","components/Utilities.js","docs/examples sync /^/.*/.tsx$","docs/examples sync /^/.*/.js$","docs/examples/ActionMenu.js","docs/examples/Actions.js","docs/examples/Caret.js","docs/examples/Search.js","docs/examples/Switch.js","components/Grid.tsx","components/Page.tsx","components/Body.tsx","docs/images/blue.svg","docs/Global.ts","docs/components/ReactIcon.tsx","docs/components/VersionToggle.tsx","docs/components/Footer.tsx","docs/components/IntroductionSections.tsx","docs/images/stackblitz.png","docs/components/StackblitzEmbed.tsx","docs/pages/HomePage.tsx","components/SidebarMenu.tsx","components/BodyRounded.tsx","docs/components/ComponentDocs.tsx","docs/pages/ComponentPage.tsx","components/Intro.tsx","docs/pages/IntroDemoPage.tsx","docs/components/NormalScrollbarDemo.tsx","docs/components/HashLink.tsx","docs/pages/UtilitiesPage.tsx","components/Header.tsx","components/Actions.tsx","components/HeaderTitle.tsx","docs/pages/ActionsExamplePage.tsx","docs/components/Recipe.tsx","docs/pages/RecipesPage.tsx","components/ActionMenu.tsx","docs/pages/ActionMenuExamplePage.tsx","docs/App.tsx","serviceWorker.ts","index.tsx","components/shared.ts","components/Modal.tsx","components/ModalProvider.tsx","docs/examples/Modal.tsx","components/DocumentView.tsx","docs/examples/DocumentView.js","components/Outside.tsx","components/DropdownMenuItem.tsx","docs/examples/DropdownMenuItem.js","components/FluentBtn.tsx","docs/examples/FluentBtn.js","components/Search.tsx"],"names":["MenuItem","props","useState","showDropdown","setShowDropdown","active","setActive","checkActive","href","window","location","hash","indexOf","isHome","useEffect","addEventListener","undefined","icon","iconForActive","className","isActive","children","passingProps","id","Utilities","guid","removeFromAttrs","Object","keys","forEach","key","includes","createElement","elementType","label","onClick","event","preventDefault","scrollToTop","clsx","hasIconForActive","open","mirrored","supportOutside","dropdownClassName","onClickOutside","target","hasClass","Switch","checked","onChange","sliderLabel","disabled","type","Caret","el","classList","contains","match","RegExp","add","remove","replace","element","classString","nameIndex","substr","length","document","querySelectorAll","style","display","this","toggleClass","querySelector","els","i","alertClassName","alertElement","removeClass","message","close","detailText","addClass","innerHTML","onclick","resetAlertMessage","s4","Math","floor","random","toString","substring","scroll","behavior","left","top","btn","input","init","showErrorDetail","onError","fetch","then","response","ok","catch","reason","text","errorMessage","setAlertMessage","status","statusText","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","ActionMenuExample","isChecked","setIsChecked","width","innerWidth","to","rel","src","process","title","ActionsExample","headerless","setHeaderless","CaretExample","state","isOpen","setState","React","Component","SearchExample","search","body","value","onSubmit","alert","placeholder","reset","SwitchExample","toggleSidebarEvent","CustomEvent","Grid","defaultMatch","eventListeners","blueGridRef","sidebarIn","history","hashHistory","blockRouting","hideSidebar","bind","initMatch","me","toggleSidebar","xPos","touches","pageX","registerFluentBtns","onHashChange","removeEventListener","prevProps","prevState","eventListener","pageId","callback","newMatch","split","filter","n","unrouteable","push","concat","param1","param2","param3","listenerId","removeDuplicatedEventListeners","param","index","self","findIndex","t","hideSidebarMenu","expandSidebar","disableHeaders","sidebarToggleIconComponent","pages","page","name","component","statusIcons","success","info","warning","danger","disableTitleSet","Page","hasHeader","setHasHeader","elementRef","useRef","current","headerElement","titleElement","innerText","ref","Body","containerClass","hasActions","rest","pageBodyClassName","break","logo","appTitle","ReactIcon","xmlns","fillRule","strokeLinejoin","strokeMiterlimit","clipRule","viewBox","fill","height","d","transform","cx","cy","r","VersionToggle","show","setShow","dropdownRef","myElement","bsDropdown","Dropdown","getInstance","hide","Outside","minWidth","Footer","Date","getFullYear","IntroductionSections","appCode","setAppCode","pageCode","setPageCode","scssCode","setScssCode","fetchFromGitHub","path","a","url","json","ghContent","content","decoded","atob","fetchAppCode","sections","syntaxHighlighterStyle","language","s","encodeURIComponent","StackblitzEmbed","loadIframe","setLoadIframe","backgroundImage","image","packageJson","require","HomePage","version","alt","SidebarMenu","fluent","hasShadow","setHasShadow","updateDimensions","innerHeight","blueAppSidebar","scrollHeight","clientHeight","scrollTop","sidebarClass","sidebarStyle","topContent","menuClass","menuStyle","bottomContent","BodyRounded","classNameTop","classNameBottom","bodyProps","ComponentDocs","ExampleComponent","comp","displayName","ex","standalone","prepareForMarkdown","description","j","defaultValue","tsType","raw","exampleCode","scrollTo","console","log","docs","ComponentPage","selectedComponent","useParams","setValue","components","setComponents","array_docs","values","routerPageElement","zIndex","Search","arr","target_value","toLowerCase","featured","hideToggleAction","light","mimeType","navItemClassName","onToggle","showDocumentLabel","display_Name","some","val","maxHeight","Intro","logoMaxWidth","maxWidth","IntroDemoPage","dangerouslySetInnerHTML","__html","NormalScrollbarDemo","showModal","setShowModal","toggleShowModal","Modal","toggle","ModalHeader","multiple","HashLink","utilitiesFunctions","definition","demo","startLoading","finishLoading","showSuccess","hideSuccess","UtilitiesPage","didScroll","sort","b","fun","Header","Actions","setOpen","newOpen","getElementById","sectionHeight","setAttribute","expandSection","elementTransition","transition","requestAnimationFrame","collapseSection","controlsClassName","HeaderTitle","keepAppTitle","sidebar","uniqueId","setDocumentTitle","titlePaths","trim","MyFeaturedMenuItem","ActionsExamplePage","renderers","Recipe","recipe","markdown","setMarkdown","fetchRecipe","download_url","source","sourceUri","html_url","transformImageUri","uri","github","org","repo","filename","RecipesPage","recipes","setRecipes","activeRecipe","setActiveRecipe","fetchRecipes","contents","Array","isArray","c","endsWith","sha","ActionMenu","toggleIcon","_break","actionsToggledIn","setActionsToggledIn","toggleActions","initToggleStatus","appWrapper","link","ActionMenuExamplePage","breakProp","setBreakProp","htmlFor","App","basename","NavLink","exact","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","phrases","Cancel","Yes","No","Message","getPhrase","keyword","countryCode","_phrases","modalContent","unSetModalContent","defaultInput","modalRef","setInput","cancel","btnStyle","myModal","bsModal","BootstrapModal","tabIndex","autoFocus","ModalContext","createContext","ask","tell","verify","ModalProvider","setType","setModalContent","setDefaultInput","useCallback","setOnSubmit","Provider","Promise","InsideComp","context","useContext","useModal","answer","parseInt","retVal","ModalExample","DocumentView","supportsIframe","iframe","contentWindow","write","onLoad","iframeContent","contentDocument","offsetWidth","offsetHeight","DocumentViewExample","wrapperRef","handleClickOutside","DropdownMenuItem","DropdownMenuItemExample","FluentBtn","ballClassName","_props","FluentBtnExample","resetIcon","SearchControlId","focus","setFocus","dispatchEvent","onFocus","onBlur","setTimeout","select"],"mappings":"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","file":"static/js/main.25feb219.chunk.js","sourcesContent":["import clsx from \"clsx\"\r\nimport React, { createElement, useEffect, useState } from \"react\"\r\nimport Caret from \"./Caret\"\r\nimport Outside from \"./Outside\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface MenuItemProps {\r\n    /**\r\n     * Sets `to` prop, e.g. when you use the `NavLink` component from React Router.\r\n     */\r\n    to?: string\r\n\r\n    /**\r\n     * Prop for components by React Router.\r\n     */\r\n    exact?: boolean\r\n\r\n    href?: string\r\n    onClick?: (event: React.MouseEvent) => void\r\n\r\n    /**\r\n     * Icon component or a class name.\r\n     */\r\n    icon?: any\r\n\r\n    /**\r\n     * Icon component or a class name when the MenuItem is active.\r\n     */\r\n    iconForActive?: any\r\n\r\n    /**\r\n     * Label of the link.\r\n     */\r\n    label?: any\r\n\r\n    /**\r\n     * Should be set as active.\r\n     */\r\n    isActive?: boolean\r\n\r\n    /**\r\n     * When using Blue React's routing system: define this link as home page link.\r\n     */\r\n    isHome?: boolean\r\n\r\n    /**\r\n     * Extends class name of the dropdown menu.\r\n     */\r\n    dropdownClassName?: string\r\n\r\n    /**\r\n     * Set children to create a nested `MenuItem` as a dropdown.\r\n     */\r\n    children?: any\r\n\r\n    /**\r\n     * Defines class name.\r\n     */\r\n    className?: any\r\n\r\n    /**\r\n     * Defines dropdown status from outside.\r\n     */\r\n    showDropdown?: boolean\r\n\r\n    /**\r\n     * Close on click outside.\r\n     */\r\n    supportOutside?: boolean\r\n\r\n    /**\r\n     * By default, MenuItem is a `\"button\"</button>. If you set a `href`, it's a `\"a\"`.\r\n     * If you want to have it another type, you can pass a component reference with this prop (e.g. `Link`).\r\n     */\r\n    elementType?: any\r\n\r\n    target?: string\r\n    rel?: string\r\n    title?: string\r\n}\r\n\r\n/**\r\n * Link, button or custom component for Sidebar, Actions or ActionMenu\r\n */\r\nexport default function MenuItem(props: MenuItemProps) {\r\n    const [showDropdown, setShowDropdown] = useState<boolean>(false)\r\n    const [active, setActive] = useState<boolean>(false)\r\n\r\n    const checkActive = () => {\r\n        setActive(\r\n            (props.href && window.location.hash.indexOf(props.href) > -1) ||\r\n                (props.isHome &&\r\n                    (window.location.hash === \"\" ||\r\n                        window.location.hash === \"#/\"))\r\n                ? true\r\n                : false\r\n        )\r\n    }\r\n\r\n    const onClick = (event: MouseEvent) => {\r\n        if (props.href === \"#\") {\r\n            event.preventDefault()\r\n        }\r\n\r\n        if (props.onClick) {\r\n            props.onClick(event as any)\r\n        }\r\n\r\n        if (props.children) {\r\n            setShowDropdown(!showDropdown)\r\n        }\r\n\r\n        // When user clicks again on active menu item, scroll to top of page\r\n        if (props.href && props.href === window.location.hash) {\r\n            Utilities.scrollToTop()\r\n        }\r\n    }\r\n\r\n    const onClickOutside = ({ target }: MouseEvent) => {\r\n        // Don't trigger when clicking on MenuItem\r\n        if (\r\n            !Utilities.hasClass(target, \"blue-app-sidebar-dropdown-toggle\") &&\r\n            !Utilities.hasClass(target, \"blue-app-sidebar-label\")\r\n        ) {\r\n            setShowDropdown(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkActive()\r\n        window.addEventListener(\"hashchange\", () => {\r\n            checkActive()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.showDropdown !== undefined)\r\n            setShowDropdown(props.showDropdown)\r\n    }, [props.showDropdown])\r\n\r\n    const className =\r\n        \"blue-app-toggle-page blue-app-sidebar-btn btn\" +\r\n        (props.isActive ? \" active\" : \"\") +\r\n        (props.className ? \" \" + props.className : \"\") +\r\n        (props.children ? \" blue-app-sidebar-dropdown-toggle\" : \"\")\r\n\r\n    let icon, iconForActive\r\n\r\n    if (typeof props.icon === \"string\") {\r\n        // is className\r\n        icon = (\r\n            <span\r\n                className={\r\n                    props.icon +\r\n                    (props.children ? \" blue-app-sidebar-dropdown-icon\" : \"\")\r\n                }\r\n            />\r\n        )\r\n    } else {\r\n        // is element / component\r\n        icon = props.icon\r\n    }\r\n\r\n    if (typeof props.iconForActive === \"string\") {\r\n        // is className\r\n        iconForActive = (\r\n            <span\r\n                className={\r\n                    props.iconForActive +\r\n                    (props.children ? \" blue-app-sidebar-dropdown-icon\" : \"\")\r\n                }\r\n            />\r\n        )\r\n    } else {\r\n        // is element / component\r\n        iconForActive = props.iconForActive\r\n    }\r\n\r\n    let passingProps = {\r\n        id: \"blue-action-menu-item-\" + Utilities.guid()\r\n    } as { [key: string]: any }\r\n\r\n    const removeFromAttrs = [\r\n        \"isActive\",\r\n        \"isHome\",\r\n        \"children\",\r\n        \"dropdownClassName\",\r\n        \"showDropdown\",\r\n        \"supportOutside\",\r\n        \"elementType\"\r\n    ]\r\n\r\n    Object.keys(props).forEach((key) => {\r\n        if (!removeFromAttrs.includes(key)) {\r\n            passingProps[key] = (props as { [key: string]: any })[key]\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {createElement(\r\n                props.elementType || (props.href ? \"a\" : \"button\"),\r\n                {\r\n                    ...passingProps,\r\n                    className:\r\n                        className +\r\n                        (props.isActive || active ? \" active\" : \"\") +\r\n                        (props.label ? \" has-label\" : \"\"),\r\n                    onClick\r\n                },\r\n                <>\r\n                    <span\r\n                        className={clsx(\"blue-app-menu-item-icon\", {\r\n                            hasIconForActive: iconForActive\r\n                        })}\r\n                    >\r\n                        {icon}\r\n                    </span>\r\n                    {iconForActive && (\r\n                        <span className=\"blue-app-menu-item-icon iconForActive\">\r\n                            {iconForActive}\r\n                        </span>\r\n                    )}\r\n                    {props.label && (\r\n                        <span className=\"blue-app-sidebar-label text-truncate\">\r\n                            {props.label}\r\n                        </span>\r\n                    )}\r\n                    {props.children && (\r\n                        <Caret\r\n                            open={showDropdown}\r\n                            mirrored\r\n                            className=\"blue-app-sidebar-dropdown-caret mt-2\"\r\n                        />\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            {showDropdown &&\r\n                (props.supportOutside ? (\r\n                    <Outside\r\n                        className={`blue-app-sidebar-dropdown ${props.dropdownClassName}`}\r\n                        onClickOutside={onClickOutside}\r\n                    >\r\n                        {props.children}\r\n                    </Outside>\r\n                ) : (\r\n                    <div\r\n                        className={`blue-app-sidebar-dropdown ${props.dropdownClassName}`}\r\n                    >\r\n                        {props.children}\r\n                    </div>\r\n                ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { createElement } from \"react\"\r\n\r\nexport interface SwitchProps {\r\n    className?: string\r\n    checked?: boolean\r\n    onChange?: (event: React.ChangeEvent) => void\r\n\r\n    /**\r\n     * Sets label inside of the switch. If you set this, you should also set the className \"lg\" to make the switch larger.\r\n     */\r\n    sliderLabel?: string\r\n\r\n    /**\r\n     * You can change the type of the wrapper element. If you do, the `onChange` event might not be triggered.\r\n     */\r\n    elementType?: string\r\n\r\n    disabled?: boolean\r\n}\r\n\r\n/**\r\n * Switch.\r\n */\r\nexport default function Switch({\r\n    className,\r\n    checked,\r\n    onChange,\r\n    sliderLabel,\r\n    disabled,\r\n    elementType = \"label\"\r\n}: SwitchProps) {\r\n    return createElement(\r\n        elementType,\r\n        {\r\n            className: \"switch \" + (disabled ? \"disabled \" : \"\") + className\r\n        },\r\n        [\r\n            <input\r\n                key={0}\r\n                type=\"checkbox\"\r\n                checked={checked}\r\n                onChange={onChange}\r\n                disabled={disabled}\r\n            />,\r\n            <span key={1} className=\"slider round\" data-label={sliderLabel} />\r\n        ]\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport interface CaretProps {\r\n    /**\r\n     * Indicates if open or not.\r\n     */\r\n    open?: boolean\r\n\r\n    /**\r\n     * By default the caret points to the right when closed. Set mirrored and it will point to the left.\r\n     */\r\n    mirrored?: boolean\r\n\r\n    className?: string\r\n}\r\n\r\n/**\r\n * Caret icon component.\r\n */\r\nexport default function Caret({ open, mirrored, className }: CaretProps) {\r\n    return (\r\n        <span\r\n            className={\r\n                \"caret \" +\r\n                (open ? \" caret-open \" : \"\") +\r\n                (mirrored ? \" caret-mirrored \" : \"\") +\r\n                className\r\n            }\r\n        />\r\n    )\r\n}\r\n","let Utilities = {}\r\n\r\nUtilities.hasClass = function (el, className) {\r\n    if (el.classList) return el.classList.contains(className)\r\n    else\r\n        return !!el.className.match(\r\n            new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\")\r\n        )\r\n}\r\n\r\nUtilities.addClass = function (el, className) {\r\n    if (el.classList) el.classList.add(className)\r\n    else if (!Utilities.hasClass(el, className)) el.className += \" \" + className\r\n}\r\n\r\nUtilities.removeClass = function (el, className) {\r\n    if (el.classList) el.classList.remove(className)\r\n    else if (Utilities.hasClass(el, className))\r\n        el.className = el.className.replace(\r\n            new RegExp(\"(\\\\s|^)\" + className + \"(\\\\s|$)\"),\r\n            \" \"\r\n        )\r\n}\r\n\r\nUtilities.toggleClass = function (element, className) {\r\n    if (!element || !className) {\r\n        return\r\n    }\r\n\r\n    var classString = element.className,\r\n        nameIndex = classString.indexOf(className)\r\n    if (nameIndex === -1) {\r\n        classString += \" \" + className\r\n    } else {\r\n        classString =\r\n            classString.substr(0, nameIndex) +\r\n            classString.substr(nameIndex + className.length)\r\n    }\r\n    element.className = classString\r\n}\r\n\r\nUtilities.startLoading = function () {\r\n    document.querySelectorAll(\".blue-app-loading\")[0].style.display = \"block\"\r\n}\r\n\r\nUtilities.finishLoading = function () {\r\n    document.querySelectorAll(\".blue-app-loading\")[0].style.display = \"\"\r\n}\r\n\r\nUtilities.showSuccess = function () {\r\n    document.querySelectorAll(\".blue-app-status-success\")[0].style.display =\r\n        \"flex\"\r\n}\r\n\r\nUtilities.hideSuccess = function () {\r\n    document.querySelectorAll(\".blue-app-status-success\")[0].style.display = \"\"\r\n}\r\n\r\nUtilities.toggleActions = function () {\r\n    this.toggleClass(document.querySelector(\".blue-app-wrapper\"), \"active\")\r\n    this.toggleClass(document.querySelector(\".blue-app-grid\"), \"wrapper-in\")\r\n\r\n    var els = document.querySelectorAll(\".blue-app-actions\")\r\n    for (var i = 0; i < els.length; i++) {\r\n        this.toggleClass(els[i], \"open\")\r\n    }\r\n}\r\n\r\nUtilities.resetAlertMessage = function (alertClassName = \"info\") {\r\n    const alertElement = document.querySelectorAll(\".blue-app-status-alert\")[0]\r\n    document.querySelectorAll(\r\n        \".blue-app-status-\" + alertClassName\r\n    )[0].style.display = \"\"\r\n    alertElement.style.display = \"\"\r\n    this.removeClass(\r\n        alertElement,\r\n        \"alert-\" + (alertClassName === \"loading\" ? \"info\" : alertClassName)\r\n    )\r\n}\r\n\r\nUtilities.setAlertMessage = function (\r\n    message,\r\n    alertClassName = \"info\",\r\n    close = undefined,\r\n    detailText = undefined\r\n) {\r\n    const alertElement = document.querySelectorAll(\".blue-app-status-alert\")[0]\r\n\r\n    if (alertClassName.indexOf(\"alert-\") > -1) {\r\n        alertClassName = alertClassName.replace(\"alert-\", \"\")\r\n    }\r\n\r\n    document.querySelectorAll(\r\n        \".blue-app-status-\" + alertClassName\r\n    )[0].style.display = \"flex\"\r\n    alertElement.style.display = \"block\"\r\n    this.addClass(\r\n        alertElement,\r\n        \"alert-\" + (alertClassName === \"loading\" ? \"info\" : alertClassName)\r\n    )\r\n\r\n    alertElement.querySelector(\".alert-body\").innerHTML =\r\n        `<h2>` + message + `</h2>`\r\n    if (detailText) {\r\n        alertElement.querySelector(\".alert-body\").innerHTML +=\r\n            `<span>` + detailText + `</span>`\r\n    }\r\n\r\n    if (close) {\r\n        alertElement.querySelector(\".btn-close\").style.display = \"inline-block\"\r\n        alertElement.querySelector(\".btn-close\").onclick = () => {\r\n            this.resetAlertMessage(alertClassName)\r\n        }\r\n    } else {\r\n        alertElement.querySelector(\".btn-close\").style.display = \"none\"\r\n    }\r\n}\r\n\r\nUtilities.guid = function () {\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1)\r\n    }\r\n    return (\r\n        s4() +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        s4() +\r\n        s4()\r\n    )\r\n}\r\n\r\nUtilities.scrollToTop = () => {\r\n    const routerPage = document.querySelector(\".router-page.active\")\r\n\r\n    routerPage.scroll({\r\n        behavior: \"smooth\",\r\n        left: 0,\r\n        top: 0\r\n    })\r\n}\r\n\r\n/**\r\n * @deprecated Fluent buttons got removed from blue-react.\r\n */\r\nUtilities.fluentBtnsListener = (event, btn) => {\r\n}\r\n\r\n/**\r\n * @deprecated Fluent buttons got removed from blue-react.\r\n */\r\nUtilities.unregisterFluentBtns = () => {\r\n}\r\n\r\n/**\r\n * @deprecated Fluent buttons got removed from blue-react.\r\n */\r\nUtilities.registerFluentBtns = () => {\r\n}\r\n\r\nUtilities.fetchData = function (\r\n    input,\r\n    init = undefined,\r\n    showErrorDetail = true,\r\n    onError = undefined\r\n) {\r\n    return fetch(input, init)\r\n        .then((response) => {\r\n            if (!response.ok) throw response\r\n            return response\r\n        })\r\n        .catch((reason) => {\r\n            if (reason.text) {\r\n                reason.text().then((errorMessage) => {\r\n                    Utilities.setAlertMessage(\r\n                        `${reason.status} - ${reason.statusText}`,\r\n                        \"danger\",\r\n                        true,\r\n                        showErrorDetail ? errorMessage : undefined\r\n                    )\r\n\r\n                    if (onError) {\r\n                        onError(errorMessage, reason)\r\n                    }\r\n                })\r\n            }\r\n            throw reason\r\n        })\r\n}\r\n\r\nexport default Utilities\r\n","var map = {\n\t\"./Modal.tsx\": 478\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 462;","var map = {\n\t\"./ActionMenu.js\": 464,\n\t\"./Actions.js\": 466,\n\t\"./Caret.js\": 467,\n\t\"./DocumentView.js\": 479,\n\t\"./DropdownMenuItem.js\": 480,\n\t\"./FluentBtn.js\": 481,\n\t\"./Search.js\": 468,\n\t\"./Switch.js\": 469\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 463;","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Switch from \"../../components/Switch\"\r\n\r\nfunction ActionMenuExample() {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    const toggleIsChecked = () => setIsChecked(!isChecked)\r\n\r\n    const style = {\r\n        width: isChecked && window.innerWidth > 600 ? \"600px\" : \"\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Switch\r\n                className=\"lg me-3\"\r\n                checked={isChecked}\r\n                onChange={toggleIsChecked}\r\n                sliderLabel={isChecked ? \"Mobile\" : \"PC\"}\r\n            />\r\n\r\n            <p>\r\n                <Link\r\n                    to=\"/action-menu-example\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Open in new tab\r\n                </Link>\r\n            </p>\r\n\r\n            <div className=\"ratio ratio-16x9\">\r\n                <iframe\r\n                    src={`${process.env.PUBLIC_URL}/action-menu-example`}\r\n                    style={style}\r\n                    title=\"Actions Demo page\"\r\n                />\r\n                {/**\r\n                     * This is how the Code looks like: \r\n                    import React from \"react\"\r\n                    import {Page, Body, Header, Actions, MenuItem} from \"blue-react\"\r\n                    \r\n                    export const ActionMenuExamplePage = () => {\r\n                        return (\r\n                            <Page hasActions={true}>\r\n                                <Header>\r\n                                </Header>\r\n                                <Actions>\r\n                                    <MenuItem\r\n                                        icon={\r\n                                            <svg\r\n                                                width=\"1em\"\r\n                                                height=\"1em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-bag-fill\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M1 4h14v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4zm7-2.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\"\r\n                                                />\r\n                                            </svg>\r\n                                        }\r\n                                        label=\"Test\"\r\n                                    ></MenuItem>\r\n                                    <MenuItem\r\n                                        icon={\r\n                                            <svg\r\n                                                width=\"1em\"\r\n                                                height=\"1em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-bell-fill\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"\r\n                                                />\r\n                                            </svg>\r\n                                        }\r\n                                        label=\"Test2\"\r\n                                    >  </MenuItem>\r\n                                </Actions>\r\n                                <Body>...</Body>\r\n                            </Page>\r\n                        )\r\n                    }\r\n                    */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionMenuExample\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Switch from \"../../components/Switch\"\r\n\r\nfunction ActionsExample() {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    const toggleIsChecked = () => setIsChecked(!isChecked)\r\n    const [headerless, setHeaderless] = useState(true)\r\n    const toggleHeaderless = () => setHeaderless(!headerless)\r\n\r\n    const style = {\r\n        width: isChecked && window.innerWidth > 600 ? \"600px\" : \"\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Switch\r\n                className=\"lg me-3\"\r\n                checked={isChecked}\r\n                onChange={toggleIsChecked}\r\n                sliderLabel={isChecked ? \"Mobile\" : \"PC\"}\r\n            />\r\n            <Switch\r\n                className=\"lg\"\r\n                checked={!headerless}\r\n                onChange={toggleHeaderless}\r\n                sliderLabel={\"Header\"}\r\n            />\r\n\r\n            <p>\r\n                <Link\r\n                    to={`/actions-example/${headerless ? \"headerless\" : \"\"}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Open in new tab\r\n                </Link>\r\n            </p>\r\n\r\n            <div className=\"ratio ratio-16x9\">\r\n                <iframe\r\n                    src={`${process.env.PUBLIC_URL}/actions-example/${\r\n                        headerless ? \"headerless\" : \"\"\r\n                    }`}\r\n                    style={style}\r\n                    title=\"Actions Demo page\"\r\n                />\r\n                {/**\r\n                     * This is how the Code looks like: \r\n                    import React from \"react\"\r\n                    import {Page, Body, Header, Actions, MenuItem} from \"blue-react\"\r\n                    \r\n                    export const ActionsExamplePage = () => {\r\n                        return (\r\n                            <Page hasActions={true}>\r\n                                <Header>\r\n                                </Header>\r\n                                <Actions>\r\n                                    <MenuItem\r\n                                        icon={\r\n                                            <svg\r\n                                                width=\"1em\"\r\n                                                height=\"1em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-bag-fill\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M1 4h14v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4zm7-2.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\"\r\n                                                />\r\n                                            </svg>\r\n                                        }\r\n                                        label=\"Test\"\r\n                                    ></MenuItem>\r\n                                    <MenuItem\r\n                                        icon={\r\n                                            <svg\r\n                                                width=\"1em\"\r\n                                                height=\"1em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-bell-fill\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path\r\n                                                    d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"\r\n                                                />\r\n                                            </svg>\r\n                                        }\r\n                                        label=\"Test2\"\r\n                                    >  </MenuItem>\r\n                                </Actions>\r\n                                <Body>...</Body>\r\n                            </Page>\r\n                        )\r\n                    }\r\n                    */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionsExample\r\n","import React from \"react\"\r\nimport Caret from \"../../components/Caret\"\r\n\r\nclass CaretExample extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() =>\r\n                        this.setState({ isOpen: !this.state.isOpen })\r\n                    }\r\n                >\r\n                    <Caret open={this.state.isOpen} />{\" \"}\r\n                    <span>Click to toggle the caret</span>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CaretExample\r\n","import React from \"react\"\r\nimport Search from \"../../components/Search\"\r\n\r\nclass SearchExample extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            search: \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search\r\n                    body\r\n                    className=\"w-50\"\r\n                    onChange={({ target }) =>\r\n                        this.setState({ search: target.value })\r\n                    }\r\n                    onSubmit={() => alert(\"Do form submit now!\")}\r\n                    placeholder=\"Begin typing...\"\r\n                    reset\r\n                    value={this.state.search}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchExample\r\n","import React from \"react\"\r\nimport Switch from \"../../components/Switch\"\r\n\r\nclass SwitchExample extends React.Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            isChecked: true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch\r\n                    className=\"lg\"\r\n                    checked={this.state.isChecked}\r\n                    onChange={() =>\r\n                        this.setState({ isChecked: !this.state.isChecked })\r\n                    }\r\n                    sliderLabel={this.state.isChecked ? \"Yay🎉\" : \"😒\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SwitchExample\r\n","import React, { Component, CSSProperties } from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\ndeclare global {\r\n    interface Window {\r\n        blueGridRef: any\r\n        toggleSidebarEvent: any\r\n    }\r\n}\r\n\r\nwindow.toggleSidebarEvent = new CustomEvent(\"toggleSidebar\")\r\n\r\nexport interface GridProps {\r\n    id?: string\r\n    sidebarIn?: boolean\r\n    style?: CSSProperties\r\n    /**\r\n     * Sidebar is automatically expanded on wider views.\r\n     */\r\n    expandSidebar?: boolean\r\n\r\n    /**\r\n     * Disables sidebar.\r\n     */\r\n    hideSidebarMenu?: boolean\r\n\r\n    /**\r\n     * Registers pages for the built-in routing system. Example: `[{name: \"home\", component: <HomePage />}]`\r\n     */\r\n    pages?: { name: string; component: JSX.Element }[]\r\n\r\n    /**\r\n     * When `true`, always the \"home\" route will be rendered.\r\n     */\r\n    unrouteable?: boolean\r\n\r\n    /**\r\n     * Extends `className`.\r\n     */\r\n    className?: string\r\n\r\n    /**\r\n     * By default, the document title will automatically set. Set this prop to `true` to disable this behaviour.\r\n     */\r\n    disableTitleSet?: boolean\r\n\r\n    /**\r\n     * If you don't use blueicon, you can define another icon element for the sidebar toggle button.\r\n     */\r\n    sidebarToggleIconComponent?: any\r\n\r\n    /**\r\n     * Will replace status icons with custom ones. This will also overwrite the `useBlueicons` option.\r\n     * This can be a SVG component or a normal element component.\r\n     */\r\n    statusIcons?: {\r\n        danger: any\r\n        info: any\r\n        success: any\r\n        warning: any\r\n    }\r\n\r\n    /**\r\n     * Disables the header bars on pages.\r\n     */\r\n    disableHeaders?: boolean\r\n\r\n    /**\r\n     * Define a function, that will be fired when switching routes. When your function returns `true`, the default route behaviour will be blocked.\r\n     * You can use something like `window.blueGridRef.setState({ blockRouting: onHashChange })` globally to set the value from anywhere in your app.\r\n     */\r\n    blockRouting?: (\r\n        newMatch: string[],\r\n        currentMatch: string[]\r\n    ) => void | boolean\r\n}\r\n\r\nexport interface GridState {\r\n    sidebarIn?: boolean\r\n    match: any\r\n    history: string[]\r\n    hash: string\r\n    hashHistory: string[]\r\n    blockRouting?: (\r\n        newMatch: string[],\r\n        currentMatch: string[]\r\n    ) => void | boolean\r\n}\r\n\r\n/**\r\n * The main component. As soon this component is mounted, it is globally available under `window.blueGridRef`.\r\n * You can also append your own event listeners.\r\n *\r\n * Allowed events:\r\n *\r\n * * **componentDidUpdate** - Component was updated.\r\n *   Example: `window.blueGridRef.addEventListener(\"componentDidUpdate\", (prevProps, prevState) => { })`\r\n * * **pageDidShowAgain** - Page appeared again with the same old state. In the callback function you can reinitialize things.\r\n *   Example: `window.blueGridRef.addEventListener(\"pageDidShowAgain\", \"home\", (prevProps, prevState) => { })`\r\n * * **pageDidHide** - This page disappeared and another page appears instead.\r\n *   Example: `window.blueGridRef.addEventListener(\"pageDidHide\", \"home\", (prevProps, prevState) => { })`\r\n * \r\n * Method to add event listeners:\r\n * * `window.blueGridRef.`**addEventListener**`(eventName: string, param2: any, param3: any, listenerId?: string)`\r\n * \r\n * Methods to remove event listeners:\r\n * * `window.blueGridRef.`**removeEventListener**`(eventName: string, listenerId: string)`\r\n * * `window.blueGridRef.`**removeDuplicatedEventListeners**`()` - Will automatically be called when running `addEventListener`\r\n */\r\nexport default class Grid extends Component<GridProps, GridState> {\r\n    defaultMatch: string[]\r\n    eventListeners: any[]\r\n    constructor(props: GridProps) {\r\n        super(props)\r\n\r\n        window.blueGridRef = this\r\n\r\n        this.defaultMatch = [\"home\"]\r\n\r\n        this.state = {\r\n            sidebarIn: props.sidebarIn,\r\n            match: null,\r\n            history: [],\r\n            hash: window.location.hash,\r\n            hashHistory: [],\r\n            blockRouting: props.blockRouting || undefined\r\n        }\r\n\r\n        this.hideSidebar = this.hideSidebar.bind(this)\r\n\r\n        this.eventListeners = []\r\n    }\r\n\r\n    onHashChange(event: HashChangeEvent) {\r\n        window.blueGridRef.initMatch()\r\n    }\r\n\r\n    static get defaultProps() {\r\n        return {\r\n            expandSidebar: false,\r\n            hideSidebarMenu: false,\r\n            unrouteable: false,\r\n            disableTitleSet: false,\r\n            sidebarToggleIconComponent: <span className=\"bi-menu\" />,\r\n            statusIcons: {\r\n                danger: <span className=\"bi-error\" />,\r\n                info: <span className=\"bi-information\" />,\r\n                success: <span className=\"bi-check\" />,\r\n                warning: <span className=\"bi-sign_warning\" />\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const me = this\r\n\r\n        document.addEventListener(\r\n            \"toggleSidebar\",\r\n            () => {\r\n                this.toggleSidebar(undefined)\r\n            },\r\n            false\r\n        )\r\n\r\n        this.initMatch()\r\n\r\n        document.addEventListener(\"touchstart\", (event) => {\r\n            const xPos = event.touches[0].pageX\r\n\r\n            if (xPos < 5) {\r\n                me.toggleSidebar(event)\r\n            } else if (me.state.sidebarIn && xPos > 20) {\r\n                me.toggleSidebar(event)\r\n            }\r\n        })\r\n\r\n        Utilities.registerFluentBtns()\r\n\r\n        window.addEventListener(\"hashchange\", this.onHashChange)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"hashchange\", this.onHashChange)\r\n    }\r\n\r\n    componentDidUpdate(prevProps: GridProps, prevState: GridState) {\r\n        if (\r\n            prevProps.blockRouting !== this.props.blockRouting &&\r\n            this.props.blockRouting !== this.state.blockRouting\r\n        ) {\r\n            this.setState({ blockRouting: this.props.blockRouting })\r\n        }\r\n        this.eventListeners.forEach((eventListener) => {\r\n            if (eventListener[0] === \"componentDidUpdate\") {\r\n                eventListener[1](prevProps, prevState)\r\n            }\r\n\r\n            if (eventListener[0] === \"pageDidShowAgain\") {\r\n                let pageId = eventListener[1]\r\n                let callback = eventListener[2]\r\n\r\n                if (\r\n                    prevState.hash !== this.state.hash &&\r\n                    this.state.match[0] === pageId\r\n                ) {\r\n                    callback(prevProps, prevState)\r\n                }\r\n            }\r\n\r\n            if (eventListener[0] === \"pageDidHide\") {\r\n                let pageId = eventListener[1]\r\n                let callback = eventListener[2]\r\n\r\n                if (\r\n                    prevState.hash !== this.state.hash &&\r\n                    prevState.match[0] === pageId\r\n                ) {\r\n                    callback(prevProps, prevState)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleSidebar(event: any) {\r\n        if (this.state.sidebarIn) {\r\n            this.hideSidebar(event)\r\n        }\r\n        this.setState({ sidebarIn: true })\r\n    }\r\n\r\n    hideSidebar(e: any) {\r\n        if (\r\n            !(\r\n                Utilities.hasClass(e.target, \"blue-app-open-menu\") ||\r\n                Utilities.hasClass(e.target, \"bi-menu\") ||\r\n                Utilities.hasClass(e.target, \"blue-app-search\") ||\r\n                Utilities.hasClass(e.target, \"blue-app-search-control\") ||\r\n                Utilities.hasClass(e.target, \"blue-app-search-btn\") ||\r\n                Utilities.hasClass(e.target, \"blue-app-search-btn-icon\") ||\r\n                Utilities.hasClass(e.target, \"blue-app-sidebar-label\") ||\r\n                Utilities.hasClass(\r\n                    e.target,\r\n                    \"blue-app-sidebar-dropdown-toggle\"\r\n                ) ||\r\n                Utilities.hasClass(\r\n                    e.target,\r\n                    \"blue-app-sidebar-dropdown-caret\"\r\n                ) ||\r\n                Utilities.hasClass(\r\n                    e.target,\r\n                    \"blue-app-sidebar-dropdown-icon\"\r\n                ) ||\r\n                Utilities.hasClass(e.target, \"blue-app-sidebar-exception\")\r\n            )\r\n        ) {\r\n            this.setState({ sidebarIn: false })\r\n        }\r\n    }\r\n\r\n    initMatch() {\r\n        let newMatch\r\n\r\n        if (\r\n            window.location.hash &&\r\n            window.location.hash !== \"\" &&\r\n            window.location.hash !== \"#/\"\r\n        ) {\r\n            newMatch = window.location.hash\r\n                .replace(\"#\", \"\")\r\n                .split(\"/\")\r\n                .filter((n) => n !== \"\")\r\n        } else {\r\n            newMatch = this.defaultMatch\r\n        }\r\n\r\n        if (this.props.unrouteable) {\r\n            newMatch = this.defaultMatch\r\n        }\r\n\r\n        if (\r\n            this.state.blockRouting &&\r\n            this.state.blockRouting(newMatch, this.state.match) === true\r\n        ) {\r\n            window.location.hash = this.state.hash\r\n        } else {\r\n            if (!(this.state.history.indexOf(newMatch[0]) > -1)) {\r\n                this.state.history.push(newMatch[0])\r\n            }\r\n\r\n            this.setState({\r\n                match: newMatch,\r\n                history: this.state.history,\r\n                hash: window.location.hash,\r\n                hashHistory: this.state.hashHistory.concat([\r\n                    window.location.hash\r\n                ])\r\n            })\r\n        }\r\n    }\r\n\r\n    addEventListener(param1: any, param2: any, param3: any, listenerId?: string) {\r\n        this.eventListeners.push([param1, param2, param3, listenerId])\r\n        this.removeDuplicatedEventListeners()\r\n    }\r\n\r\n    removeEventListener(type: string, listenerId: string) {\r\n        this.eventListeners = this.eventListeners.filter((param: any[]) => {\r\n            if (param[0] !== type) {\r\n                return param\r\n            } else if (param[0] === type && param[3] !== listenerId) {\r\n                return param\r\n            }\r\n        })\r\n    }\r\n\r\n    removeDuplicatedEventListeners() {\r\n        this.eventListeners = this.eventListeners.filter((value, index, self) =>\r\n            index === self.findIndex((t) => (\r\n                t[3] === value[3] && t[0] === value[0]\r\n            ))\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"blue-app-wrapper\"></div>\r\n                <div\r\n                    id={this.props.id ? this.props.id : \"\"}\r\n                    style={this.props.style ? this.props.style : {}}\r\n                    className={\r\n                        \"blue-app-grid\" +\r\n                        (this.props.className\r\n                            ? \" \" + this.props.className\r\n                            : \"\") +\r\n                        (this.state.sidebarIn ? \" open\" : \"\") +\r\n                        (this.props.hideSidebarMenu\r\n                            ? \" hasNoSidebarMenu\"\r\n                            : \" hasSidebarMenu\") +\r\n                        (this.props.expandSidebar ? \" expand-sidebar\" : \"\") +\r\n                        (this.props.disableHeaders ? \" disableHeaders\" : \"\")\r\n                    }\r\n                    onClick={this.hideSidebar}\r\n                >\r\n                    <div className=\"blue-app-sidebar-toggler\">\r\n                        {!this.props.hideSidebarMenu ? (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"blue-app-open-menu blue-app-sidebar-btn btn\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        sidebarIn: !this.state.sidebarIn\r\n                                    })\r\n                                }}\r\n                            >\r\n                                <div className=\"blue-app-sidebar-exception position-absolute w-100 h-100\" />\r\n                                {this.props.sidebarToggleIconComponent}\r\n                            </button>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n\r\n                    {this.props.children}\r\n\r\n                    {this.props.pages?.map(\r\n                        (page) =>\r\n                            this.state.history.indexOf(page.name) > -1 && (\r\n                                <div\r\n                                    key={page.name}\r\n                                    className={\r\n                                        \"router-page \" +\r\n                                        (this.state.match[0] === page.name\r\n                                            ? \"active\"\r\n                                            : \"\")\r\n                                    }\r\n                                >\r\n                                    {page.component}\r\n                                </div>\r\n                            )\r\n                    )}\r\n\r\n                    <div className=\"blue-app-status-circle blue-app-loading blue-app-status-loading\">\r\n                        <div className=\"spinner-bounce-circle\">\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"blue-app-status-circle blue-app-status-success\">\r\n                        {this.props.statusIcons!.success}\r\n                    </div>\r\n\r\n                    <div className=\"blue-app-status-circle blue-app-status-info\">\r\n                        {this.props.statusIcons!.info}\r\n                    </div>\r\n\r\n                    <div className=\"blue-app-status-circle blue-app-status-warning\">\r\n                        {this.props.statusIcons!.warning}\r\n                    </div>\r\n\r\n                    <div className=\"blue-app-status-circle blue-app-status-danger\">\r\n                        {this.props.statusIcons!.danger}\r\n                    </div>\r\n\r\n                    <div className=\"blue-app-status-alert alert\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn-close float-end mb-1\"\r\n                            aria-label=\"Close\"\r\n                        />\r\n                        <div className=\"alert-body\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\r\nimport clsx from \"clsx\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface PageProps {\r\n    /**\r\n     * Will be set to the document's `<title>` tag.\r\n     */\r\n    title?: string\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Main component for each page.\r\n */\r\nexport default function Page({ children, title }: PageProps) {\r\n    const [hasHeader, setHasHeader] = useState(false)\r\n    const elementRef = useRef(null) as MutableRefObject<any>\r\n\r\n    useEffect(() => {\r\n        Utilities.registerFluentBtns()\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (elementRef && elementRef.current) {\r\n            const headerElement =\r\n                elementRef.current.querySelector(\".blue-app-header\")\r\n            setHasHeader(headerElement !== null && headerElement !== undefined)\r\n        }\r\n    }, [elementRef])\r\n\r\n    useEffect(() => {\r\n        const titleElement = document.querySelector(\"title\")\r\n        if (title && titleElement) {\r\n            titleElement.innerText = title\r\n        }\r\n    }, [title])\r\n\r\n    return (\r\n        <div\r\n            className={clsx(\"blue-app-page-wrapper\", { hasHeader: hasHeader })}\r\n            ref={elementRef}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { breakOption } from \"./shared\"\r\n\r\nexport interface BodyProps {\r\n    id?: string\r\n    className?: string\r\n\r\n    /**\r\n     * Class name for the container. More info: https://getbootstrap.com/docs/4.0/layout/overview/#containers\r\n     */\r\n    containerClass?: string\r\n\r\n    /**\r\n     * Set `true` if this page uses `<Actions />`, so this component will get enough padding to avoid overlapping of the content.\r\n     */\r\n    hasActions?: boolean\r\n    break?: breakOption\r\n    onClick?: (event: any) => void\r\n\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Contains the content of the page.\r\n */\r\nexport default function Body({\r\n    id,\r\n    className,\r\n    containerClass,\r\n    hasActions,\r\n    onClick,\r\n    children,\r\n    ...rest\r\n}: BodyProps) {\r\n    const pageBodyClassName = \"blue-app-page\"\r\n\r\n    return (\r\n        <div\r\n            id={id}\r\n            className={\r\n                className\r\n                    ? pageBodyClassName + \" \" + className\r\n                    : pageBodyClassName +\r\n                      (hasActions ? \" has-actions\" : \"\") +\r\n                      ` break-${rest.break || \"md\"}`\r\n            }\r\n            onClick={onClick}\r\n        >\r\n            <div className={containerClass || \"container-fluid\"}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/blue.101f7419.svg\";","import image from \"./images/blue.svg\"\r\n\r\nexport const logo = image\r\nexport const appTitle = \"Blue\"\r\n","import React from \"react\"\r\n\r\nexport function ReactIcon() {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fillRule=\"evenodd\"\r\n            strokeLinejoin=\"round\"\r\n            strokeMiterlimit=\"2\"\r\n            clipRule=\"evenodd\"\r\n            viewBox=\"0 0 16 16\"\r\n            fill=\"currentColor\"\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n        >\r\n            <path\r\n                fillRule=\"nonzero\"\r\n                d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6z\"\r\n                transform=\"matrix(.03261 0 0 .03261 7.74 7.74) translate(-413 -288.45)\"\r\n            ></path>\r\n            <circle\r\n                cx=\"420.9\"\r\n                cy=\"296.5\"\r\n                r=\"45.7\"\r\n                transform=\"matrix(.03261 0 0 .03261 7.74 7.74) translate(-413 -288.45)\"\r\n            ></circle>\r\n        </svg>\r\n    )\r\n}\r\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\r\nimport { Dropdown } from \"bootstrap\"\r\nimport Outside from \"../../components/Outside\"\r\n\r\nexport function VersionToggle() {\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const toggle = () => setShow(!show)\r\n    const dropdownRef = useRef() as MutableRefObject<HTMLButtonElement>\r\n\r\n    useEffect(() => {\r\n        const myElement = dropdownRef.current as unknown as Element\r\n        let bsDropdown = Dropdown.getInstance(myElement)\r\n\r\n        if (!bsDropdown) {\r\n            bsDropdown = new Dropdown(myElement)\r\n            bsDropdown.hide()\r\n            setShow(false)\r\n        } else {\r\n            show ? bsDropdown.show() : bsDropdown.hide()\r\n        }\r\n    }, [show])\r\n\r\n    return (\r\n        <Outside onClickOutside={() => setShow(false)}>\r\n            <div className=\"dropdown\">\r\n                <button\r\n                    className=\"btn btn-secondary dropdown-toggle\"\r\n                    type=\"button\"\r\n                    onClick={toggle}\r\n                    ref={dropdownRef}\r\n                    title=\"Switch to another version\"\r\n                >\r\n                    /v7\r\n                </button>\r\n                <ul\r\n                    className=\"dropdown-menu dropdown-menu-end\"\r\n                    style={{ minWidth: \"5rem\" }}\r\n                >\r\n                    <li>\r\n                        <a className=\"dropdown-item\" href=\"/blue-react/v6/\">\r\n                            /v6\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </Outside>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\ninterface FooterProps {\r\n    containerClass?: string\r\n}\r\n\r\nexport function Footer({ containerClass = \"container\" }: FooterProps) {\r\n    return (\r\n        <footer className=\"docs-footer mb-1\">\r\n            <div className={`${containerClass} mt-5`}>\r\n                <p className=\"text-muted mb-0\">\r\n                    <small>\r\n                        {`©${\r\n                            new Date().getFullYear() || \"2021\"\r\n                        } Brügmann Software GmbH. `}\r\n                        {\"Licensed under \"}\r\n                        <a\r\n                            href=\"https://github.com/bruegmann/blue-react/blob/master/LICENSE\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            GNU General Public License v3.0\r\n                        </a>\r\n                        {\". \"}\r\n                        <a\r\n                            href=\"https://patorg.de/imprint/\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Imprint\r\n                        </a>\r\n                        {\". \"}\r\n                        <a\r\n                            href=\"https://patorg.de/privacy-policy/\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Privacy Policy\r\n                        </a>\r\n                    </small>\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { GitHubContent } from \"../gitHubApiTypes\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\n\r\nexport default function IntroductionSections() {\r\n    const [appCode, setAppCode] = useState<string>(\"\")\r\n    const [pageCode, setPageCode] = useState<string>(\"\")\r\n    const [scssCode, setScssCode] = useState<string>(\"\")\r\n\r\n    const fetchFromGitHub = async (path: string) => {\r\n        const url = `https://api.github.com/repos/bruegmann/cra-template-ts-blue/contents/template/${path}`\r\n        const r = await fetch(`${url}`)\r\n\r\n        const ghContent: GitHubContent = await r.json()\r\n\r\n        if (ghContent.content) {\r\n            const decoded = atob(ghContent.content)\r\n\r\n            return decoded\r\n        }\r\n    }\r\n\r\n    const fetchAppCode = async () => {\r\n        setAppCode((await fetchFromGitHub(\"src/App.tsx\")) || \"\")\r\n        setPageCode((await fetchFromGitHub(\"src/pages/HomePage.tsx\")) || \"\")\r\n        setScssCode((await fetchFromGitHub(\"src/styles/main.scss\")) || \"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAppCode()\r\n    }, [])\r\n\r\n    const sections = [\r\n        {\r\n            title: \"Bootstrap\",\r\n            body: (\r\n                <div>\r\n                    An adapted Bootstrap is mainly used for the stylesheet.\r\n                    <br />\r\n                    Bootstrap documentation is available here:{\" \"}\r\n                    <a\r\n                        href=\"https://getbootstrap.com/docs/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        https://getbootstrap.com/docs/\r\n                    </a>\r\n                    <br />\r\n                    <br />\r\n                    To use Bootstrap components with JavaScript functions in\r\n                    React, you should use a library like{\" \"}\r\n                    <a\r\n                        href=\"https://reactstrap.github.io/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        React Bootstrap\r\n                    </a>\r\n                    .\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            title: \"Implementation\",\r\n            body: (\r\n                <div>\r\n                    <p>\r\n                        See the whole project:{\" \"}\r\n                        <a\r\n                            href=\"https://github.com/bruegmann/cra-template-ts-blue/tree/master/template\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            https://github.com/bruegmann/cra-template-ts-blue/tree/master/template\r\n                        </a>\r\n                    </p>\r\n\r\n                    <h2>App (app.tsx)</h2>\r\n                    <SyntaxHighlighter\r\n                        style={syntaxHighlighterStyle}\r\n                        language=\"javascript\"\r\n                    >\r\n                        {appCode}\r\n                    </SyntaxHighlighter>\r\n\r\n                    <h2 className=\"mt-3\">Page (pages/HomePage.tsx)</h2>\r\n                    <SyntaxHighlighter\r\n                        style={syntaxHighlighterStyle}\r\n                        language=\"javascript\"\r\n                    >\r\n                        {pageCode}\r\n                    </SyntaxHighlighter>\r\n\r\n                    <h2 className=\"mt-3\">CSS (main.scss)</h2>\r\n                    <SyntaxHighlighter\r\n                        style={syntaxHighlighterStyle}\r\n                        language=\"scss\"\r\n                    >\r\n                        {scssCode}\r\n                    </SyntaxHighlighter>\r\n                </div>\r\n            )\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                {sections.map((s, i) => (\r\n                    <article\r\n                        key={i}\r\n                        id={\"section-\" + encodeURIComponent(s.title)}\r\n                    >\r\n                        <h1 className=\"page-header\">{s.title}</h1>\r\n                        {s.body}\r\n                    </article>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/stackblitz.f72cfdf8.png\";","import { useState } from \"react\"\r\nimport { PencilSquare, PlayFill } from \"react-bootstrap-icons\"\r\nimport image from \"../images/stackblitz.png\"\r\n\r\nexport default function StackblitzEmbed() {\r\n    const [loadIframe, setLoadIframe] = useState<boolean>(false)\r\n\r\n    return (\r\n        <>\r\n            {loadIframe ? (\r\n                <div className=\"ratio ratio-16x9 bg-light rounded\">\r\n                    <iframe\r\n                        className=\"rounded\"\r\n                        src=\"https://stackblitz.com/edit/blue-react-app-stackblitz-rr6xeh?embed=1&file=index.tsx&hideExplorer=1\"\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <div\r\n                    className=\"bg-primary text-white rounded p-4 d-flex justify-content-between\"\r\n                    style={{ backgroundImage: `url(${image})` }}\r\n                >\r\n                    <div>\r\n                        <h5>\r\n                            Do you want to load external content from\r\n                            Stackblitz?\r\n                        </h5>\r\n                        <p>\r\n                            It will contain a live editor, which lets you edit a\r\n                            demo app with Blue React.\r\n                        </p>\r\n\r\n                        <button\r\n                            className=\"btn btn-white d-inline-flex align-items-center\"\r\n                            onClick={() => setLoadIframe(true)}\r\n                        >\r\n                            <PlayFill className=\"me-1\" /> Load content\r\n                        </button>\r\n                        <a\r\n                            className=\"btn btn-link text-white\"\r\n                            href=\"https://stackblitz.com/edit/blue-react-app-stackblitz-rr6xeh?\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Open content in new tab\r\n                        </a>\r\n                        <a\r\n                            className=\"btn btn-link text-white\"\r\n                            href=\"https://stackblitz.com/privacy-policy\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Privacy Policy by Stackblitz\r\n                        </a>\r\n                    </div>\r\n                    <h1 className=\"display-1\">\r\n                        <PencilSquare />\r\n                    </h1>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/Body\"\r\nimport { logo, appTitle } from \"../Global\"\r\nimport { Bootstrap, BoxSeam, Code, WindowSidebar } from \"react-bootstrap-icons\"\r\nimport { ReactIcon } from \"../components/ReactIcon\"\r\nimport { VersionToggle } from \"../components/VersionToggle\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport IntroductionSections from \"../components/IntroductionSections\"\r\nimport StackblitzEmbed from \"../components/StackblitzEmbed\"\r\n\r\nconst packageJson = require(\"../../../package.json\")\r\n\r\nexport const HomePage = () => (\r\n    <Page>\r\n        <Body\r\n            className=\"pt-0\"\r\n            containerClass=\"no-container d-flex flex-column docs-min-height-100vh\"\r\n        >\r\n            <main className=\"flex-grow-1\">\r\n                <div className=\"welcome-jumbotron pt-5 bg-theme text-white\">\r\n                    <div className=\"container pt-3 pt-md-0\">\r\n                        <section className=\"d-flex justify-content-between\">\r\n                            <div>\r\n                                <h1>\r\n                                    React component library based on Bootstrap 5\r\n                                </h1>\r\n                                <h2>\r\n                                    <Bootstrap /> <ReactIcon /> <Code />{\" \"}\r\n                                    <WindowSidebar /> <BoxSeam />\r\n                                </h2>\r\n                                <h3 className=\"d-flex align-content-center gap-3\">\r\n                                    <span className=\"badge bg-white text-theme\">\r\n                                        {packageJson.version}\r\n                                    </span>\r\n\r\n                                    <VersionToggle />\r\n                                </h3>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h1 className=\"display-1 d-inline-flex align-items-center\">\r\n                                    <img\r\n                                        src={logo}\r\n                                        alt={appTitle}\r\n                                        style={{ height: \"1em\" }}\r\n                                        className=\"me-3\"\r\n                                    />{\" \"}\r\n                                    Blue\r\n                                </h1>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"mt-5 rounded-top bg-body\"\r\n                        style={{ height: \"1rem\" }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <StackblitzEmbed />\r\n\r\n                    <h1 className=\"page-header\">Use Blue React</h1>\r\n\r\n                    <h2 className=\"mt-4 mb-3\">Create new project using CRA</h2>\r\n                    <code>\r\n                        npx create-react-app <strong>name-of-my-app</strong>{\" \"}\r\n                        --template blue\r\n                    </code>\r\n\r\n                    <div className=\"mt-3\">\r\n                        Or if you want to use TypeScript:\r\n                    </div>\r\n                    <code>\r\n                        npx create-react-app <strong>name-of-my-app</strong>{\" \"}\r\n                        --template ts-blue\r\n                    </code>\r\n\r\n                    <h2 className=\"mt-4 mb-3\">Install to existing project</h2>\r\n                    <code>npm i blue-react</code>\r\n\r\n                    <IntroductionSections />\r\n                </div>\r\n            </main>\r\n\r\n            <Footer />\r\n\r\n            <div\r\n                className=\"RoundedBottom bg-theme pb-1\"\r\n                style={{ height: \"1rem\" }}\r\n            >\r\n                <div className=\"rounded-bottom bg-body w-100 h-100\" />\r\n            </div>\r\n        </Body>\r\n    </Page>\r\n)\r\n","import React, { Fragment, useEffect, useState } from \"react\"\r\n\r\nexport interface SidebarMenuProps {\r\n    /**\r\n     * Should menu items have a Fluent effect. Default: `true`\r\n     */\r\n    fluent?: boolean\r\n\r\n    /**\r\n     * Extends the class name by the sidebar.\r\n     */\r\n    sidebarClass?: string\r\n\r\n    /**\r\n     * Sets the `style` prop by the sidebar.\r\n     */\r\n    sidebarStyle?: object\r\n\r\n    /**\r\n     * Extends the class name by the menu.\r\n     */\r\n    menuClass?: string\r\n\r\n    /**\r\n     * Sets the `style` prop by the menu.\r\n     */\r\n    menuStyle?: object\r\n\r\n    /**\r\n     * Content on top of the menu.\r\n     */\r\n    topContent?: any\r\n\r\n    /**\r\n     * Content for the bottom part of the sidebar.\r\n     */\r\n    bottomContent?: any\r\n\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Sidebar for the `Grid` component.\r\n */\r\nexport default function SidebarMenu(props: SidebarMenuProps) {\r\n    const { fluent = false } = props\r\n\r\n    const [hasShadow, setHasShadow] = useState<boolean>(false)\r\n\r\n    const updateDimensions = () => {\r\n        if (window.innerHeight > 500) {\r\n            setHasShadow(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const blueAppSidebar = document.querySelector(\r\n            \".blue-app-sidebar\"\r\n        ) as HTMLElement\r\n\r\n        window.addEventListener(\"resize\", updateDimensions)\r\n\r\n        if (blueAppSidebar.scrollHeight > blueAppSidebar.clientHeight) {\r\n            setHasShadow(true)\r\n        }\r\n\r\n        blueAppSidebar.addEventListener(\"scroll\", () => {\r\n            if (\r\n                blueAppSidebar.scrollHeight - blueAppSidebar.scrollTop ===\r\n                blueAppSidebar.clientHeight\r\n            ) {\r\n                setHasShadow(false)\r\n            } else {\r\n                setHasShadow(true)\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", updateDimensions)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                \"blue-app-sidebar \" +\r\n                (props.sidebarClass ? props.sidebarClass : \"\")\r\n            }\r\n            style={props.sidebarStyle ? props.sidebarStyle : {}}\r\n        >\r\n            {props.topContent && (\r\n                <div className=\"blue-app-sidebar-top\">{props.topContent}</div>\r\n            )}\r\n\r\n            <div\r\n                className={\r\n                    \"blue-app-menu \" + (props.menuClass ? props.menuClass : \"\")\r\n                }\r\n                style={props.menuStyle ? props.menuStyle : {}}\r\n            >\r\n                <div className={fluent === true ? \"fluent-btn\" : \"\"}>\r\n                    {fluent === true ? (\r\n                        <div className=\"fluent-btn-ball\" />\r\n                    ) : (\r\n                        <Fragment />\r\n                    )}\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n\r\n            {props.bottomContent && (\r\n                <div\r\n                    className={\r\n                        \"blue-app-sidebar-bottom \" +\r\n                        (hasShadow ? \" has-shadow\" : \"\")\r\n                    }\r\n                >\r\n                    {props.bottomContent}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Body, { BodyProps } from \"./Body\"\r\n\r\nexport interface BodyRoundedProps extends BodyProps {\r\n    classNameTop?: string\r\n    classNameBottom?: string\r\n}\r\n\r\n/**\r\n * Extended variation of `Body` with rounded elements on top and bottom of the page.\r\n */\r\nexport default function BodyRounded({\r\n    classNameTop,\r\n    classNameBottom,\r\n    children,\r\n    ...bodyProps\r\n}: BodyRoundedProps) {\r\n    return (\r\n        <Body {...bodyProps}>\r\n            <div\r\n                className={\"blue-app-body-rounded-top bg-theme pt-1 d-none d-md-block \" + classNameTop}\r\n                style={{ height: \"1rem\" }}\r\n            >\r\n                <div className=\"rounded-top bg-body w-100 h-100\" />\r\n            </div>\r\n            {children}\r\n            <div\r\n                className={\"blue-app-body-rounded-bottom bg-theme pb-1 d-none d-md-block \" + classNameBottom}\r\n                style={{ height: \"1rem\" }}\r\n            >\r\n                <div className=\"rounded-bottom bg-body w-100 h-100\" />\r\n            </div>\r\n        </Body>\r\n    )\r\n}\r\n","import React, { Component, ComponentClass } from \"react\"\r\nimport MarkdownGitHub from \"react-markdown-github\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport interface IComponentDocsProps {\r\n    standalone: boolean\r\n    comp: {\r\n        displayName: string\r\n        description: string\r\n        props: any\r\n        exampleCode?: string\r\n    }\r\n}\r\n\r\nexport class ComponentDocs extends Component<\r\n    IComponentDocsProps,\r\n    { ExampleComponent: ComponentClass<any> }\r\n> {\r\n    state = {\r\n        ExampleComponent: null as unknown as ComponentClass<any>\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            const { comp } = this.props\r\n            const ExampleComponent = require(`../examples/${comp.displayName}.tsx`)\r\n            this.setState({ ExampleComponent: ExampleComponent[\"default\"] })\r\n        } catch (ex) {\r\n            // console.error(ex)\r\n            // This component has no example\r\n        }\r\n\r\n        try {\r\n            const { comp } = this.props\r\n            const ExampleComponent = require(`../examples/${comp.displayName}.js`)\r\n            this.setState({ ExampleComponent: ExampleComponent[\"default\"] })\r\n        } catch (ex) {\r\n            // console.error(ex)\r\n            // This component has no example\r\n        }\r\n    }\r\n\r\n    prepareForMarkdown(text: string) {\r\n        return text.replace(\"@deprecated\", \"***@deprecated***\")\r\n    }\r\n\r\n    render() {\r\n        const { comp, standalone } = this.props\r\n        const { ExampleComponent } = this.state\r\n\r\n        return (\r\n            <article className=\"pt-5\">\r\n                <h1 className=\"page-header mt-0 blue-opacity-hover\">\r\n                    {comp.displayName}{\" \"}\r\n                    <Link\r\n                        to={`/component/${comp.displayName}`}\r\n                        className=\"blue-opacity-hover-content-active\"\r\n                    >\r\n                        #\r\n                    </Link>\r\n                </h1>\r\n\r\n                <MarkdownGitHub>\r\n                    {this.prepareForMarkdown(comp.description)}\r\n                </MarkdownGitHub>\r\n\r\n                {comp.displayName == \"Intro\" && (\r\n                    <p>\r\n                        <Link to=\"/intro-demo\">Take a look at this demo</Link>\r\n                    </p>\r\n                )}\r\n\r\n                {comp.props && (\r\n                    <div>\r\n                        <h2 className=\"mt-4 mb-3\">Props</h2>\r\n\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Description</th>\r\n                                    <th>Type</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {comp.props &&\r\n                                    Object.keys(comp.props).map((j) => (\r\n                                        <tr key={j}>\r\n                                            <th>{j}</th>\r\n                                            <td>\r\n                                                <MarkdownGitHub>\r\n                                                    {this.prepareForMarkdown(\r\n                                                        comp.props[j]\r\n                                                            .description\r\n                                                    )}\r\n                                                </MarkdownGitHub>\r\n\r\n                                                {comp.props[j].defaultValue ? (\r\n                                                    <div>\r\n                                                        <strong>\r\n                                                            Default:\r\n                                                        </strong>\r\n                                                        &nbsp;\r\n                                                        <code>\r\n                                                            {\r\n                                                                comp.props[j]\r\n                                                                    .defaultValue\r\n                                                                    .value\r\n                                                            }\r\n                                                        </code>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n                                            </td>\r\n                                            <td>\r\n                                                {comp.props[j].tsType &&\r\n                                                    (comp.props[j].tsType.raw ||\r\n                                                        comp.props[j].tsType\r\n                                                            .name)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        {(ExampleComponent || comp.exampleCode) &&\r\n                            (standalone ? (\r\n                                <div>\r\n                                    <h2 className=\"mt-4 mb-3\">Example</h2>\r\n\r\n                                    {ExampleComponent && (\r\n                                        <div className=\"mb-3\">\r\n                                            <ExampleComponent />\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {comp.exampleCode && (\r\n                                        <SyntaxHighlighter\r\n                                            style={syntaxHighlighterStyle}\r\n                                            language=\"jsx\"\r\n                                        >\r\n                                            {comp.exampleCode}\r\n                                        </SyntaxHighlighter>\r\n                                    )}\r\n                                </div>\r\n                            ) : (\r\n                                <Link\r\n                                    to={\"/component/\" + comp.displayName}\r\n                                    onClick={() => window.scrollTo(0, 0)}\r\n                                >\r\n                                    Show example\r\n                                </Link>\r\n                            ))}\r\n                    </div>\r\n                )}\r\n            </article>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useParams, Link, NavLink } from \"react-router-dom\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/BodyRounded\"\r\n\r\nimport docs from \"../data/docs.json\"\r\nimport { ComponentDocs } from \"../components/ComponentDocs\"\r\nimport { IComponent } from \"../types\"\r\nimport Search from \"../../components/Search\"\r\nimport { appTitle } from \"../Global\"\r\nimport { Footer } from \"../components/Footer\"\r\n\r\nconsole.log({ docs })\r\n\r\nexport const ComponentPage = () => {\r\n    const { selectedComponent } = useParams<any>()\r\n\r\n    // State of input Search value\r\n    const [value, setValue] = useState<string>(\"\")\r\n    // Searched & found Components\r\n    const [components, setComponents] = useState<any>([])\r\n\r\n    const array_docs = Object.values(docs) as IComponent[]\r\n\r\n    useEffect(() => {\r\n        const routerPageElement = document.querySelector(\".router-page.active\")\r\n        if (routerPageElement) {\r\n            routerPageElement.scrollTo(0, 0)\r\n        }\r\n    }, [selectedComponent])\r\n\r\n    return (\r\n        <Page\r\n            title={`${\r\n                selectedComponent ? `${selectedComponent} - ` : \"\"\r\n            }React Components - ${appTitle}`}\r\n        >\r\n            <Body containerClass=\"d-flex flex-column docs-min-height-100vh\">\r\n                <div className=\"container-fluid flex-grow-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"sticky-top\" style={{ zIndex: 0 }}>\r\n                                <div className=\"pt-1 pt-sm-3\">\r\n                                    <Search\r\n                                        body\r\n                                        // onSubmit={(e: any) => { e.preventDefault() }}\r\n                                        onChange={(a: any) => {\r\n                                            setValue(a.target.value)\r\n                                            // Array for the searched & found Components\r\n                                            let arr = []\r\n\r\n                                            for (\r\n                                                let i = 0;\r\n                                                i < array_docs.length;\r\n                                                i++\r\n                                            ) {\r\n                                                const target_value =\r\n                                                    a.target.value.toLowerCase()\r\n                                                if (\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.break !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.checked !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.children !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.className !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.containerClass !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.content !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.disableTitleSet !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.expandSidebar !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.featured !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hasActions !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hideSidebarMenu !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.hideToggleAction !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.href !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.icon !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.label !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.light !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.mimeType !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.mirrored !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.navItemClassName !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.onChange !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.onToggle !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.open !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.pages !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.showDocumentLabel !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.sidebarToggleIconComponent !==\r\n                                                        \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.src !== \"undefined\" ||\r\n                                                    typeof array_docs[i].props\r\n                                                        ?.unrouteable !==\r\n                                                        \"undefined\"\r\n                                                ) {\r\n                                                    const description =\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].description?.toLowerCase()\r\n                                                    const display_Name =\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].displayName?.toLowerCase()\r\n                                                    const props = Object.keys(\r\n                                                        array_docs[i].props\r\n                                                    )\r\n\r\n                                                    if (\r\n                                                        description?.includes(\r\n                                                            target_value\r\n                                                        ) ||\r\n                                                        display_Name?.includes(\r\n                                                            target_value\r\n                                                        ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.break?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.checked?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.children?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.className?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.containerClass?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.content?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.disableTitleSet?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.expandSidebar?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.featured?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hasActions?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideSidebarMenu?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.hideToggleAction?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.href?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.icon?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.label?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.light?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mimeType?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.mirrored?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.navItemClassName?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onChange?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.onToggle?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.open?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.pages?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.showDocumentLabel?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.sidebarToggleIconComponent?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.src?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.defaultValue?.value\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.description\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].props?.unrouteable?.tsType?.name\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            ) ||\r\n                                                        props.some((val) =>\r\n                                                            val\r\n                                                                .toLowerCase()\r\n                                                                .includes(\r\n                                                                    target_value\r\n                                                                )\r\n                                                        ) ||\r\n                                                        array_docs[\r\n                                                            i\r\n                                                        ].exampleCode\r\n                                                            ?.toLowerCase()\r\n                                                            .includes(\r\n                                                                target_value\r\n                                                            )\r\n                                                    ) {\r\n                                                        arr.push(array_docs[i])\r\n                                                        setComponents(arr)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                        value={value}\r\n                                        className=\"mb-1 ms-5 ms-md-0 \"\r\n                                        placeholder=\"Search...\"\r\n                                    />\r\n\r\n                                    <div\r\n                                        className=\"overflow-auto\"\r\n                                        style={{\r\n                                            maxHeight: \"calc(100vh - 5rem)\"\r\n                                        }}\r\n                                    >\r\n                                        <nav className=\"nav nav-pills flex-column\">\r\n                                            {components.length > 0 &&\r\n                                            value !== \"\"\r\n                                                ? components.map(\r\n                                                      (\r\n                                                          i: any,\r\n                                                          index: number\r\n                                                      ) => (\r\n                                                          <div key={index}>\r\n                                                              <Link\r\n                                                                  to={`/component/${i.displayName}`}\r\n                                                                  className=\"nav-link\"\r\n                                                              >\r\n                                                                  {\r\n                                                                      i.displayName\r\n                                                                  }\r\n                                                              </Link>\r\n                                                          </div>\r\n                                                      )\r\n                                                  )\r\n                                                : docs &&\r\n                                                  Object.values(docs).map(\r\n                                                      (\r\n                                                          i: any,\r\n                                                          index: number\r\n                                                      ) => (\r\n                                                          <div\r\n                                                              key={index}\r\n                                                              className=\"nav-item\"\r\n                                                          >\r\n                                                              <NavLink\r\n                                                                  to={`/component/${i.displayName}`}\r\n                                                                  className=\"nav-link\"\r\n                                                              >\r\n                                                                  {\r\n                                                                      i.displayName\r\n                                                                  }\r\n                                                              </NavLink>\r\n                                                          </div>\r\n                                                      )\r\n                                                  )}\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-10\">\r\n                            {docs &&\r\n                                Object.values(docs).map(\r\n                                    (i: any, index: number) =>\r\n                                        (!selectedComponent ||\r\n                                            selectedComponent ===\r\n                                                i.displayName) &&\r\n                                        i.props && (\r\n                                            <ComponentDocs\r\n                                                key={index}\r\n                                                comp={i}\r\n                                                standalone={\r\n                                                    selectedComponent\r\n                                                        ? true\r\n                                                        : false\r\n                                                }\r\n                                            />\r\n                                        )\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer containerClass=\"container-fluid\" />\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface IntroProps {\r\n    /**\r\n     * Can be an image. Will be placed inside of the `src` attribute.\r\n     */\r\n    logo?: string\r\n\r\n    /**\r\n     * Max width from the logo.\r\n     */\r\n    logoMaxWidth?: string\r\n\r\n    /**\r\n     * Text which will be placed under the logo.\r\n     */\r\n    title?: string\r\n\r\n    /**\r\n     * Content\r\n     */\r\n    children?: any\r\n}\r\n\r\n/**\r\n * Can be used for a sign-in page.\r\n */\r\nexport default function Intro({\r\n    logo,\r\n    logoMaxWidth = \"100px\",\r\n    title,\r\n    children\r\n}: IntroProps) {\r\n    useEffect(() => {\r\n        Utilities.registerFluentBtns()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sign-in-screen\">\r\n            <div className=\"sign-in-container mx-1\">\r\n                <div className=\"bg-body rounded-3 shadow-lg px-4 py-5\">\r\n                    <div className=\"text-center\">\r\n                        <img\r\n                            style={{ maxWidth: logoMaxWidth }}\r\n                            src={logo}\r\n                            alt=\"\"\r\n                        />\r\n                        <h2 className=\"mt-4 mb-3\">{title}</h2>\r\n                    </div>\r\n\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Intro from \"../../components/Intro\"\r\nimport { logo } from \"../Global\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ChevronLeft } from \"react-bootstrap-icons\"\r\n\r\nexport const IntroDemoPage = () => (\r\n    <>\r\n        {/* Changes background and sidebar background when on dark mode. */}\r\n        <style\r\n            type=\"text/css\"\r\n            dangerouslySetInnerHTML={{\r\n                __html: /* css */ `\r\n            @media (prefers-color-scheme: dark) {\r\n                :root {\r\n                    --sidebar-bg: var(--black, #212529);\r\n                }\r\n            }\r\n        `\r\n            }}\r\n        />\r\n        <Intro\r\n            logo={logo}\r\n            logoMaxWidth=\"100px\"\r\n            title=\"Here could be your introduction\"\r\n        >\r\n            <form\r\n                className=\"form-horizontal\"\r\n                onSubmit={(event) => {\r\n                    event.preventDefault()\r\n                }}\r\n            >\r\n                <div className=\"row mb-3\">\r\n                    <label className=\"col-sm-4 col-form-label\">\r\n                        Please sign in\r\n                    </label>\r\n                    <div className=\"col-sm-8\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter something\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-center\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\">\r\n                        Sign in\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            <Link to=\"/component/Intro\">\r\n                <ChevronLeft /> Back to the docs\r\n            </Link>\r\n        </Intro>\r\n    </>\r\n)\r\n","import React, { useState } from \"react\"\r\nimport { Modal, ModalHeader } from \"reactstrap\"\r\n\r\nexport function NormalScrollbarDemo() {\r\n    const [showModal, setShowModal] = useState<boolean>(false)\r\n    const toggleShowModal = () => setShowModal(!showModal)\r\n\r\n    return (\r\n        <>\r\n            <button className=\"btn btn-link p-0 mb-1\" onClick={toggleShowModal}>\r\n                Show demo.\r\n            </button>\r\n\r\n            <Modal isOpen={showModal} toggle={toggleShowModal}>\r\n                <ModalHeader toggle={toggleShowModal}>\r\n                    Scrollbar demo\r\n                </ModalHeader>\r\n                <div className=\"m-3\">\r\n                    <div className=\"mb-3\">\r\n                        <label>\r\n                            Area without <code>.blue-normal-scrollbar</code>\r\n                        </label>\r\n                        <select className=\"form-control\" multiple aria-readonly>\r\n                            <option>one</option>\r\n                            <option>two</option>\r\n                            <option>three</option>\r\n                            <option>four</option>\r\n                            <option>five</option>\r\n                            <option>six</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"blue-normal-scrollbar mb-3\">\r\n                        <label>\r\n                            Area with <code>.blue-normal-scrollbar</code>\r\n                        </label>\r\n                        <select className=\"form-control\" multiple aria-readonly>\r\n                            <option>one</option>\r\n                            <option>two</option>\r\n                            <option>three</option>\r\n                            <option>four</option>\r\n                            <option>five</option>\r\n                            <option>six</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"alert alert-info\">\r\n                        Make sure to put <code>.blue-normal-scrollbar</code> to\r\n                        an parent element and not directly to the element with\r\n                        the overflow.\r\n                    </div>\r\n\r\n                    <div className=\"alert alert-info\">\r\n                        Bootstrap modals with <code>.modal-body</code> already\r\n                        have the rules of <code>.blue-normal-scrollbar</code>,\r\n                        so you don't have to put the class name there yourself.\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n","import { ReactNode } from \"react\"\r\n\r\nexport interface HashLinkProps {\r\n    children: ReactNode\r\n    id: string\r\n}\r\n\r\nexport default function HashLink({ children, id }: HashLinkProps) {\r\n    return (\r\n        <h5 className=\"blue-opacity-hover\" id={id}>\r\n            {children}{\" \"}\r\n            <a href={`#${id}`} className=\"blue-opacity-hover-content-active\">\r\n                #\r\n            </a>\r\n        </h5>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Utilities from \"../../components/Utilities\"\r\nimport { CheckCircle, CheckCircleFill, PlayFill } from \"react-bootstrap-icons\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/BodyRounded\"\r\nimport { NormalScrollbarDemo } from \"../components/NormalScrollbarDemo\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport HashLink from \"../components/HashLink\"\r\n\r\nexport interface UtilitiesPageProps { }\r\n\r\nexport interface UtilitiesPageState {\r\n    content: any\r\n    didScroll: boolean\r\n}\r\n\r\nconst utilitiesFunctions = [\r\n    {\r\n        definition: \"hasClass(el, className)\",\r\n        description: \"Checks if element has a specific class name.\"\r\n    },\r\n    {\r\n        definition: \"addClass(el, className)\",\r\n        description: \"Adds a class name to an element.\"\r\n    },\r\n    {\r\n        definition: \"removeClass(el, className)\",\r\n        description: \"Removes a class name from an element.\"\r\n    },\r\n    {\r\n        definition: \"toggleClass(el, className)\",\r\n        description:\r\n            \"Adds class name to element, if it doesn't it yet. Otherwise it removes it.\"\r\n    },\r\n    {\r\n        definition: \"startLoading()\",\r\n        description: \"Shows loading animation.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.startLoading()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"finishLoading()\",\r\n        description: \"Hides loading animation.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.finishLoading()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"showSuccess()\",\r\n        description: \"Shows success symbol.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.showSuccess()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"hideSuccess()\",\r\n        description: \"Hides success symbol.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.hideSuccess()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"toggleActions()\",\r\n        description: \"Shows action menu or hides it.\"\r\n    },\r\n    {\r\n        definition:\r\n            \"setAlertMessage(message, alertClassName, close, detailText)\",\r\n        description: (\r\n            <span>\r\n                Shows an alert message.\r\n                <br />\r\n                Possible values for alertClassName: <code>loading</code>,{\" \"}\r\n                <code>success</code>, <code>info</code>, <code>warning</code>,{\" \"}\r\n                <code>danger</code>\r\n            </span>\r\n        ),\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() =>\r\n                    Utilities.setAlertMessage(\r\n                        \"Hey, this is a message\",\r\n                        \"danger\",\r\n                        true,\r\n                        `Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.   \r\n\r\n                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\r\n`\r\n                    )\r\n                }\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"resetAlertMessage(alertClassName)\",\r\n        description: \"Resets alert message and removes it.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.resetAlertMessage(\"danger\")}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"guid()\",\r\n        description: \"Returns string of random characters.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => alert(\"Generated GUID: \" + Utilities.guid())}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"scrollToTop()\",\r\n        description: \"Scrolls to the top of the page.\",\r\n        demo: (\r\n            <button\r\n                className=\"btn btn-light\"\r\n                onClick={() => Utilities.scrollToTop()}\r\n            >\r\n                <PlayFill />\r\n            </button>\r\n        )\r\n    },\r\n    {\r\n        definition: \"fetchData(input, init?, showErrorDetail? = true)\",\r\n        description: (\r\n            <span>\r\n                Uses native <code>fetch</code> function, but adds error handling\r\n                and shows error messages if there are any.\r\n            </span>\r\n        )\r\n        // demo: (<Fragment>\r\n        //     <button className=\"btn btn-light\"\r\n        //     // onClick={() => {\r\n        //     //     const url = \"https://jsonplaceholder.typicode.com/todos/1\"\r\n\r\n        //     //     Utilities.startLoading()\r\n\r\n        //     //     Utilities.fetchData(url)\r\n        //     //         .then((res: any) => {\r\n        //     //             Utilities.finishLoading()\r\n        //     //             return res.json()\r\n        //     //         })\r\n        //     //         .then((json: any) => alert(`Here is the result of ${url}:\\n\\n ${JSON.stringify(json)}`))\r\n        //     // }}\r\n        //     >\r\n        //         <PlayFill />\r\n        //     </button>\r\n        // </Fragment>)\r\n    }\r\n]\r\n\r\nexport class UtilitiesPage extends React.Component<\r\n    UtilitiesPageProps,\r\n    UtilitiesPageState\r\n> {\r\n    constructor(props: UtilitiesPageProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            content: [],\r\n            didScroll: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document\r\n            .querySelector(\".router-page.active\")!\r\n            .addEventListener(\"scroll\", () => {\r\n                if (!this.state.didScroll) {\r\n                    this.setState({ didScroll: true })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const sections = [\r\n            {\r\n                title: \"Utilities\",\r\n                body: (\r\n                    <div>\r\n                        <p>A static class with a few useful helper functions</p>\r\n\r\n                        <h2 className=\"page-header\">Useful CSS classes</h2>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-app-sidebar-bottom\">\r\n                                <code>.blue-app-sidebar-bottom</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                With Sidebar Bottom, for example, a registered\r\n                                user can be displayed at the bottom left. Usable\r\n                                within{\" \"}\r\n                                <code>\r\n                                    &lt;SidebarMenu {\"bottomContent={}\"} /&gt;\r\n                                </code>\r\n                                .\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-app-sidebar-hidden-on-open\">\r\n                                <code>.blue-app-sidebar-hidden-on-open</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                The element is hidden as long as the sidebar is\r\n                                open.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-app-sidebar-visible-on-open\">\r\n                                <code>.blue-app-sidebar-visible-on-open</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                The element is visible as long as the sidebar is\r\n                                open.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-normal-scrollbar\">\r\n                                <code>.blue-normal-scrollbar</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                {\r\n                                    \"Normalizes elements in areas which still should not have the theme colors for their scrollbars. \"\r\n                                }\r\n                                <NormalScrollbarDemo />\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"btn-black\">\r\n                                <code>.btn-black</code>,{\" \"}\r\n                                <code>.btn-outline-black</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Additionally Bootstrap theme variable \"black\"\r\n                                for always black buttons.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"btn-white\">\r\n                                <code>.btn-white</code>,{\" \"}\r\n                                <code>.btn-outline-white</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Additionally Bootstrap theme variable \"white\"\r\n                                for always white buttons.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"form-horizontal\">\r\n                                <code>.form-horizontal</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                To be used together with{\" \"}\r\n                                <a href=\"https://getbootstrap.com/docs/5.1/forms/layout/#horizontal-form\">\r\n                                    Bootstraps solutions\r\n                                </a>\r\n                                . <code>.form-horizontal</code> arranges the\r\n                                labels on the right on larger screens.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"w-bla-sidebar-width\">\r\n                                <code>.w-bla-sidebar-width</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Gives element the width of the sidebar, defined\r\n                                with <code>$bla-sidebar-width</code>.\r\n                            </p>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-tooltip-up\">\r\n                                <code>.blue-tooltip-up</code>,{\" \"}\r\n                                <code>.blue-tooltip-down</code>,{\" \"}\r\n                                <code>.blue-tooltip-start</code>,{\" \"}\r\n                                <code>.blue-tooltip-end</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Data Attribute of element is used as an tooltip.\r\n                                To be used together with{\" \"}\r\n                                <code>data-tooltip</code>.<br />\r\n                                Usage:\r\n                            </p>\r\n                            <strong\r\n                                data-tooltip=\"Put your tooltip text here\"\r\n                                className=\"blue-tooltip-up\"\r\n                            >\r\n                                Hover me!\r\n                            </strong>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<strong data-tooltip=\"Put your tooltip text here\" className=\"blue-tooltip-up\">\r\n    Hover me!\r\n</strong>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-btn-silent\">\r\n                                <code>.blue-btn-silent</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                Removes border when the button is in normal\r\n                                state (no hover). Should be used together with{\" \"}\r\n                                <code>.btn-outline-*</code>.<br />\r\n                                Usage:\r\n                            </p>\r\n                            <button className=\"btn btn-outline-secondary blue-btn-silent\">\r\n                                Button\r\n                            </button>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<button className=\"btn btn-outline-secondary blue-btn-silent\">\r\n    Button\r\n</button>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-opacity-hover\">\r\n                                <code>.blue-opacity-hover</code>,{\" \"}\r\n                                <code>.blue-opacity-hover-content-active</code>,{\" \"}\r\n                                <code>.blue-opacity-hover-content-default</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                With <code>.blue-opacity-hover</code> you can\r\n                                hide things by default and let them appear when\r\n                                the user hovers the area around it.\r\n                                <br />\r\n                                This way you can simplify the UI a bit and make\r\n                                controls disappear when they are not needed. On\r\n                                touch screens the elements will always be\r\n                                visible.\r\n                                <br />\r\n                                Usage:\r\n                            </p>\r\n\r\n                            <div className=\"card blue-opacity-hover p-3 flex-row justify-content-between\">\r\n                                <h5 className=\"blue-opacity-hover-content-default\">\r\n                                    Hover here to see a button\r\n                                </h5>\r\n                                <button className=\"btn btn-secondary blue-opacity-hover-content-active\">\r\n                                    Hey there\r\n                                </button>\r\n                            </div>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<div className=\"card blue-opacity-hover p-3 flex-row justify-content-between\">\r\n    <h5 className=\"blue-opacity-hover-content-default\">Hover here to see a button</HashLink>\r\n    <button className=\"btn btn-secondary blue-opacity-hover-content-active\">Hey there</button>\r\n</div>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <article className=\"mb-5\">\r\n                            <HashLink id=\"blue-d-hover\">\r\n                                <code>.blue-d-hover</code>,{\" \"}\r\n                                <code>.blue-d-hover-content-active</code>,{\" \"}\r\n                                <code>.blue-d-hover-content-default</code>\r\n                            </HashLink>\r\n                            <p>\r\n                                <code>.blue-d-hover</code> is similar to{\" \"}\r\n                                <code>.blue-opacity-hover</code>, but the\r\n                                elements will disappear and appear with the{\" \"}\r\n                                <code>display</code> property.\r\n                                <br />\r\n                                It is ideal if you want to replace something\r\n                                with something else when the user hovers. On the\r\n                                example I used it to change the edit and delete\r\n                                icons from lineout to filled when hovering.\r\n                                <br />\r\n                                Usage:\r\n                            </p>\r\n\r\n                            <button className=\"btn blue-d-hover d-inline-flex align-items-center gap-1\">\r\n                                <CheckCircle className=\"blue-d-hover-content-default\" />\r\n                                <CheckCircleFill className=\"blue-d-hover-content-active\" />{\" \"}\r\n                                Hover to fill the icon\r\n                            </button>\r\n                            <SyntaxHighlighter\r\n                                style={syntaxHighlighterStyle}\r\n                                language=\"html\"\r\n                            >{`<button className=\"btn blue-d-hover d-inline-flex align-items-center gap-1\">\r\n    <CheckCircle className=\"blue-d-hover-content-default\" />\r\n    <CheckCircleFill className=\"blue-d-hover-content-active\" /> Hover to fill the icon\r\n</button>`}</SyntaxHighlighter>\r\n                        </article>\r\n\r\n                        <h2 className=\"page-header\">JavaScript Functions</h2>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Definition</th>\r\n                                    <th>Description</th>\r\n                                    <th>Demo</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {utilitiesFunctions\r\n                                    .sort((a, b) =>\r\n                                        a.definition > b.definition\r\n                                            ? 1\r\n                                            : b.definition > a.definition\r\n                                                ? -1\r\n                                                : 0\r\n                                    )\r\n                                    .map((fun, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>\r\n                                                <code>\r\n                                                    Utilities.{fun.definition}\r\n                                                </code>\r\n                                            </td>\r\n                                            <td>{fun.description}</td>\r\n                                            {fun.demo ? (\r\n                                                <td>{fun.demo}</td>\r\n                                            ) : (\r\n                                                <td />\r\n                                            )}\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <h2 className=\"page-header\">Example</h2>\r\n                        <SyntaxHighlighter\r\n                            style={syntaxHighlighterStyle}\r\n                            language=\"javascript\"\r\n                        >{`import { Utilities } from \"blue-react\"\r\n                            \r\nUtilities.startLoading()`}</SyntaxHighlighter>\r\n                    </div>\r\n                )\r\n            }\r\n        ]\r\n        return (\r\n            <Page>\r\n                <Body containerClass=\"no-container pt-5 pt-md-0 d-flex flex-column docs-min-height-100vh\">\r\n                    <div className=\"container flex-grow-1\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                {sections.map((s, i) => (\r\n                                    <article\r\n                                        key={i}\r\n                                        id={\r\n                                            \"section-\" +\r\n                                            encodeURIComponent(s.title)\r\n                                        }\r\n                                    >\r\n                                        <h1 className=\"page-header\">\r\n                                            {s.title}\r\n                                        </h1>\r\n                                        {s.body}\r\n                                    </article>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Footer />\r\n                </Body>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\nexport default UtilitiesPage\r\n","import React from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface HeaderProps {\r\n    children?: any\r\n}\r\n\r\n/**\r\n * The top of a page.\r\n */\r\nexport default function Header({ children }: HeaderProps) {\r\n    return (\r\n        <div className=\"blue-app-header blue-app-header-extension\">\r\n            <div\r\n                className=\"ui-header-wrapper\"\r\n                onClick={Utilities.scrollToTop}\r\n            />\r\n\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { breakOption } from \"./shared\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface ActionsProps {\r\n    /**\r\n     * Content that will appear on the menu when it's expanded.\r\n     */\r\n    children?: any\r\n\r\n    /**\r\n     * Extends the `className` of `.blue-actions`.\r\n     */\r\n    className?: string\r\n\r\n    /**\r\n     * Extends the `className` of `.blue-actions-controls`.\r\n     */\r\n    controlsClassName?: string\r\n\r\n    /**\r\n     * Content that will appear when the menu is shrunken.\r\n     */\r\n    featured?: any\r\n    open?: boolean\r\n\r\n    /**\r\n     * Will fire when the state of `open` will change inside of the component.\r\n     * **Example:** `onToggle={open => this.setState({ open })}`\r\n     */\r\n    onToggle?: (open: boolean) => void\r\n    break?: breakOption\r\n}\r\n\r\nfunction collapseSection(element: HTMLElement) {\r\n    /* Source of these functions: https://css-tricks.com/using-css-transitions-auto-dimensions/ */\r\n    var sectionHeight = element.scrollHeight\r\n    var elementTransition = element.style.transition\r\n    element.style.transition = \"\"\r\n\r\n    requestAnimationFrame(function () {\r\n        element.style.height = sectionHeight + \"px\"\r\n        element.style.transition = elementTransition\r\n        requestAnimationFrame(function () {\r\n            element.style.height = 84 + \"px\"\r\n        })\r\n    })\r\n    element.setAttribute(\"data-collapsed\", \"true\")\r\n}\r\n\r\nfunction expandSection(element: HTMLElement) {\r\n    var sectionHeight = element.scrollHeight\r\n    element.style.height = sectionHeight + \"px\"\r\n\r\n    const fun = function (e: TransitionEvent) {\r\n        element.removeEventListener(\"transitionend\", fun)\r\n        element.style.height = \"\"\r\n    }\r\n    element.addEventListener(\"transitionend\", fun)\r\n    element.setAttribute(\"data-collapsed\", \"false\")\r\n}\r\n\r\n/**\r\n * @deprecated Please use `ActionMenu` instead.\r\n */\r\nexport default function Actions(props: ActionsProps) {\r\n    const [open, setOpen] = useState<boolean>(props.open || false)\r\n    const id = `Actions-${Utilities.guid()}`\r\n\r\n    const toggle = () => {\r\n        const newOpen = !open\r\n        const element = document.getElementById(id) as HTMLElement\r\n        if (element) {\r\n            setOpen(newOpen)\r\n            if (newOpen) {\r\n                expandSection(element)\r\n            } else {\r\n                collapseSection(element)\r\n            }\r\n\r\n            if (props.onToggle) {\r\n                props.onToggle(open)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.open !== open && props.open !== undefined) {\r\n            setOpen(props.open)\r\n        }\r\n    }, [props.open])\r\n\r\n    return (\r\n        <div\r\n            id={id}\r\n            className={\r\n                \"blue-actions \" +\r\n                props.className +\r\n                \" \" +\r\n                (open ? \"open\" : \"closed\") +\r\n                ` break-${props.break || \"md\"}`\r\n            }\r\n        >\r\n            <div\r\n                className={`blue-actions-indicator d-${props.break}-none`}\r\n                onClick={toggle}\r\n            />\r\n\r\n            <div className={\"blue-actions-controls \" + props.controlsClassName}>\r\n                {props.children}\r\n            </div>\r\n\r\n            <div className={`blue-actions-featured d-${props.break}-none`}>\r\n                {props.featured}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface HeaderTitleProps {\r\n    /**\r\n     * Can be an image. Will be placed inside of the `src` attribute.\r\n     */\r\n    logo?: string\r\n\r\n    /**\r\n     * Text next to the logo.\r\n     */\r\n    appTitle?: string\r\n\r\n    /**\r\n     * Disables that the app title will disappear at a specific view width.\r\n     */\r\n    keepAppTitle?: boolean\r\n\r\n    children?: any\r\n\r\n    /**\r\n     * Extends `className` from parent element.\r\n     */\r\n    className?: string\r\n\r\n    /**\r\n     * Is the component used on the sidebar?\r\n     */\r\n    sidebar?: boolean\r\n}\r\n\r\n/**\r\n * The title area at the header bar.\r\n * Depending on its content, the document's title will be set aswell (what will be shown in the browser title bar).\r\n */\r\nexport default function HeaderTitle({\r\n    logo,\r\n    appTitle,\r\n    keepAppTitle,\r\n    children,\r\n    className,\r\n    sidebar\r\n}: HeaderTitleProps) {\r\n    const uniqueId = \"HeaderTitle-\" + Utilities.guid()\r\n\r\n    const setDocumentTitle = () => {\r\n        if (\r\n            window.blueGridRef &&\r\n            window.blueGridRef.props &&\r\n            window.blueGridRef.props.disableTitleSet === false\r\n        ) {\r\n            const element = document.querySelector(\r\n                `#${uniqueId} .blue-app-header-logo-title-labels`\r\n            ) as HTMLElement\r\n            const titleElement = document.querySelector(\"title\")\r\n            if (element && element.innerText && titleElement) {\r\n                const titlePaths = element.innerText.split(\"/\")\r\n                if (titlePaths.length > 1) {\r\n                    titleElement.innerText = `${titlePaths[\r\n                        titlePaths.length - 1\r\n                    ].trim()} - ${titlePaths[0].trim()}`\r\n                } else {\r\n                    titleElement.innerText = element.innerText\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(setDocumentTitle, [])\r\n    useEffect(setDocumentTitle, [children])\r\n\r\n    return (\r\n        <h3\r\n            id={uniqueId}\r\n            className={\r\n                \"blue-app-header-logo\" +\r\n                (className ? ` ${className}` : \"\") +\r\n                (sidebar ? \" sidebar\" : \"\")\r\n            }\r\n        >\r\n            <span className=\"blue-app-header-logo-title\">\r\n                {logo ? (\r\n                    <span>\r\n                        <a href=\"#\">\r\n                            <img\r\n                                src={logo}\r\n                                className=\"blue-app-header-logo-image\"\r\n                            />\r\n                        </a>\r\n                        &nbsp;\r\n                    </span>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                <span\r\n                    className={\r\n                        \"blue-app-header-logo-title-labels \" +\r\n                        (keepAppTitle ? \"keep\" : \"\")\r\n                    }\r\n                >\r\n                    {appTitle ? (\r\n                        <span>\r\n                            <a href=\"#\">{appTitle}</a> {children ? \"/\" : \"\"}\r\n                            &nbsp;\r\n                        </span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                    {children}\r\n                </span>\r\n            </span>\r\n        </h3>\r\n    )\r\n}\r\n","import React, { Fragment } from \"react\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/Body\"\r\nimport Header from \"../../components/Header\"\r\nimport Actions from \"../../components/Actions\"\r\nimport MenuItem from \"../../components/MenuItem\"\r\nimport HeaderTitle from \"../../components/HeaderTitle\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst MyFeaturedMenuItem = () => (\r\n    <Fragment>\r\n        <MenuItem\r\n            icon={\r\n                <svg\r\n                    width=\"1em\"\r\n                    height=\"1em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    className=\"bi bi-bag-fill\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path d=\"M1 4h14v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4zm7-2.5A2.5 2.5 0 0 0 5.5 4h-1a3.5 3.5 0 1 1 7 0h-1A2.5 2.5 0 0 0 8 1.5z\" />\r\n                </svg>\r\n            }\r\n            label=\"Test\"\r\n        />\r\n\r\n        <MenuItem\r\n            icon={\r\n                <svg\r\n                    width=\"1em\"\r\n                    height=\"1em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    className=\"bi bi-bell-fill\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\" />\r\n                </svg>\r\n            }\r\n            label=\"Test2\"\r\n        />\r\n    </Fragment>\r\n)\r\n\r\nexport const ActionsExamplePage = () => {\r\n    const { headerless } = useParams<any>()\r\n\r\n    return (\r\n        <Page>\r\n            {!headerless && (\r\n                <Header>\r\n                    <HeaderTitle appTitle=\"My app with actions\" />\r\n                </Header>\r\n            )}\r\n            <Actions featured={<MyFeaturedMenuItem />}>\r\n                <MyFeaturedMenuItem />\r\n                <MenuItem\r\n                    icon={\r\n                        <svg\r\n                            width=\"1em\"\r\n                            height=\"1em\"\r\n                            viewBox=\"0 0 16 16\"\r\n                            className=\"bi bi-bell-fill\"\r\n                            fill=\"currentColor\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\" />\r\n                        </svg>\r\n                    }\r\n                    label=\"Another one\"\r\n                />\r\n            </Actions>\r\n            <Body hasActions>...</Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport MarkdownGitHub from \"react-markdown-github\"\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\r\nimport { synthwave84 as syntaxHighlighterStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\"\r\nimport Utilities from \"../../components/Utilities\"\r\nimport { GitHubContent } from \"../gitHubApiTypes\"\r\n\r\nconst renderers = {\r\n    code: ({ language, value }: any) => {\r\n        return (\r\n            <SyntaxHighlighter\r\n                style={syntaxHighlighterStyle}\r\n                language={language}\r\n                children={value}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport interface RecipeProps {\r\n    recipe: GitHubContent\r\n}\r\n\r\nexport function Recipe({ recipe }: RecipeProps) {\r\n    const [markdown, setMarkdown] = useState<string | null>(null)\r\n\r\n    useEffect(() => {\r\n        fetchRecipe()\r\n    }, [recipe])\r\n\r\n    const fetchRecipe = async () => {\r\n        if (recipe.download_url !== undefined) {\r\n            const r = await fetch(recipe.download_url)\r\n            const text = await r.text()\r\n            setMarkdown(text)\r\n        } else {\r\n            Utilities.setAlertMessage(\r\n                \"This GitHub file has no download_url\",\r\n                \"danger\",\r\n                true\r\n            )\r\n        }\r\n    }\r\n\r\n    const transformImageUri = ({ uri, github, org, repo, filename }: any) => {\r\n        // console.log(uri, github, org, repo, filename)\r\n        return `https://raw.githubusercontent.com/bruegmann/blue-react/master/recipes/${uri}`\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {markdown !== null ? (\r\n                <MarkdownGitHub\r\n                    source={markdown}\r\n                    sourceUri={recipe.html_url}\r\n                    transformImageUri={transformImageUri}\r\n                    renderers={renderers}\r\n                    className=\"recipe-markdown\"\r\n                />\r\n            ) : (\r\n                <div>...</div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Link, NavLink, useParams } from \"react-router-dom\"\r\nimport Body from \"../../components/BodyRounded\"\r\nimport Page from \"../../components/Page\"\r\nimport { Footer } from \"../components/Footer\"\r\nimport { Recipe } from \"../components/Recipe\"\r\nimport { GitHubContent } from \"../gitHubApiTypes\"\r\n\r\nexport function RecipesPage() {\r\n    const [recipes, setRecipes] = useState<GitHubContent[] | null>(null)\r\n    const { active } = useParams<any>()\r\n    const [activeRecipe, setActiveRecipe] = useState<GitHubContent | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (recipes === null) {\r\n            fetchRecipes()\r\n        }\r\n    }, [recipes])\r\n\r\n    useEffect(() => {\r\n        if (active !== undefined && active !== null && recipes !== null) {\r\n            recipes.forEach((recipe: GitHubContent) => {\r\n                if (recipe.name.toLowerCase() === active.toLowerCase()) {\r\n                    setActiveRecipe(recipe)\r\n                }\r\n            })\r\n        } else {\r\n            setActiveRecipe(null)\r\n        }\r\n    }, [active, recipes])\r\n\r\n    const fetchRecipes = async () => {\r\n        const url =\r\n            \"https://api.github.com/repos/bruegmann/blue-react/contents/recipes\"\r\n        const r = await fetch(`${url}`)\r\n\r\n        const contents = (await r.json()) as GitHubContent[]\r\n\r\n        if (contents && Array.isArray(contents)) {\r\n            const recipes = contents.filter(\r\n                (c: GitHubContent) =>\r\n                    c.name.endsWith(\".md\") &&\r\n                    c.name.toLowerCase() !== \"readme.md\"\r\n            )\r\n            setRecipes(recipes)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Page>\r\n            <Body containerClass=\"d-flex flex-column docs-min-height-100vh\">\r\n                <div className=\"container-fluid pt-5 pt-md-0 flex-grow-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"sticky-top\" style={{ zIndex: 0 }}>\r\n                                <div>\r\n                                    <nav className=\"nav nav-pills flex-column mt-3\">\r\n                                        {recipes !== null ? (\r\n                                            recipes.map(\r\n                                                (recipe: GitHubContent) => (\r\n                                                    <div\r\n                                                        key={recipe.sha}\r\n                                                        className=\"nav-item\"\r\n                                                    >\r\n                                                        <NavLink\r\n                                                            to={`/recipes/${recipe.name}`}\r\n                                                            className=\"nav-link\"\r\n                                                        >\r\n                                                            {recipe.name.replace(\r\n                                                                \".md\",\r\n                                                                \"\"\r\n                                                            )}\r\n                                                        </NavLink>\r\n                                                    </div>\r\n                                                )\r\n                                            )\r\n                                        ) : (\r\n                                            <div>Loading...</div>\r\n                                        )}\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-10\">\r\n                            {activeRecipe !== null ? (\r\n                                <Recipe recipe={activeRecipe} />\r\n                            ) : (\r\n                                <>\r\n                                    <h1 className=\"page-header\">Recipes</h1>\r\n\r\n                                    <p>\r\n                                        Recipes are short tutorials or\r\n                                        instructions for specific scenarious. On\r\n                                        the side you see a list of all available\r\n                                        recipes.\r\n                                    </p>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer containerClass=\"container-fluid\" />\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport MenuItem from \"./MenuItem\"\r\nimport { breakOption } from \"./shared\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface ActionMenuProps {\r\n    /**\r\n     * Hides the toggle button in mobile view. Can be useful when using multiple ActionMenus and not show the toggle button for each menu.\r\n     */\r\n    hideToggleAction?: boolean\r\n\r\n    children?: any\r\n\r\n    /**\r\n     * Icon component for the toggle icon.\r\n     */\r\n    toggleIcon?: any\r\n\r\n    className?: string\r\n\r\n    /**\r\n     * \"sm\" | \"md\" | \"lg\" | \"xl\" | \"none\"\r\n     */\r\n    break?: breakOption | \"none\"\r\n}\r\n\r\n/**\r\n * The Action Menu on the top right of a page. You can place Actions here which are in context of the current page.\r\n */\r\nexport default function ActionMenu(props: ActionMenuProps) {\r\n    const {\r\n        hideToggleAction,\r\n        children,\r\n        className,\r\n        toggleIcon = \"bi-iconmonstr-menu-7\"\r\n    } = props\r\n    const _break = props.break || \"lg\"\r\n\r\n    const [actionsToggledIn, setActionsToggledIn] = useState<boolean>(false)\r\n\r\n    const toggleActions = () => {\r\n        Utilities.toggleActions()\r\n        initToggleStatus()\r\n    }\r\n\r\n    const initToggleStatus = () => {\r\n        setActionsToggledIn(\r\n            Utilities.hasClass(\r\n                document.querySelector(\".blue-app-actions\"),\r\n                \"open\"\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        initToggleStatus()\r\n\r\n        const appWrapper = document.querySelector(\r\n            \".blue-app-wrapper\"\r\n        ) as HTMLElement\r\n        if (appWrapper) {\r\n            appWrapper.onclick = toggleActions\r\n        }\r\n\r\n        document\r\n            .querySelectorAll(\".blue-app-actions-menu .nav-link\")\r\n            .forEach((link) => {\r\n                link.addEventListener(\"click\", () => {\r\n                    if (actionsToggledIn) {\r\n                        toggleActions()\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className={`blue-app-actions navbar ${className} navbar-expand${\r\n                _break !== \"none\" ? `-${_break}` : \"\"\r\n            } ${_break}`}\r\n        >\r\n            <div\r\n                className=\"ui-header-wrapper\"\r\n                onClick={Utilities.scrollToTop}\r\n            />\r\n            <ul className=\"blue-app-actions-menu nav navbar-nav navbar-right fluent-btn\">\r\n                <div className=\"fluent-btn-ball\" />\r\n\r\n                {!actionsToggledIn && !hideToggleAction ? (\r\n                    <MenuItem\r\n                        className=\"blue-app-actions-menu-toggle\"\r\n                        onClick={() => toggleActions()}\r\n                        icon={toggleIcon}\r\n                        aria-label=\"Toggle menu\"\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                {children}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Page from \"../../components/Page\"\r\nimport Body from \"../../components/Body\"\r\nimport Header from \"../../components/Header\"\r\nimport MenuItem from \"../../components/MenuItem\"\r\nimport HeaderTitle from \"../../components/HeaderTitle\"\r\nimport ActionMenu from \"../../components/ActionMenu\"\r\nimport { CloudSleet, ThreeDotsVertical } from \"react-bootstrap-icons\"\r\nimport { breakOption } from \"../../components/shared\"\r\n\r\nexport const ActionMenuExamplePage = () => {\r\n    const [breakProp, setBreakProp] = useState<breakOption | \"none\">(\"md\")\r\n\r\n    return (\r\n        <Page>\r\n            <Header>\r\n                <HeaderTitle appTitle=\"My app with an action menu\" />\r\n\r\n                <ActionMenu\r\n                    toggleIcon={<ThreeDotsVertical />}\r\n                    break={breakProp}\r\n                >\r\n                    <MenuItem label=\"I'm a MenuItem\" />\r\n\r\n                    <MenuItem\r\n                        label=\"I'm a MenuItem with children\"\r\n                        supportOutside\r\n                        icon={<CloudSleet />}\r\n                    >\r\n                        <MenuItem label=\"I'm a MenuItem\" />\r\n                        <MenuItem label=\"Another one\" />\r\n                    </MenuItem>\r\n                </ActionMenu>\r\n            </Header>\r\n            <Body className=\"mt-5\">\r\n                <label\r\n                    className=\"my-1 me-2\"\r\n                    htmlFor=\"ActionMenuExamplePage-breakProp\"\r\n                >\r\n                    <code>break</code> prop\r\n                </label>\r\n                <select\r\n                    className=\"form-select my-1 me-sm-2\"\r\n                    id=\"ActionMenuExamplePage-breakProp\"\r\n                    value={breakProp}\r\n                    onChange={({ target }) => setBreakProp(target.value as any)}\r\n                >\r\n                    <option value=\"sm\">sm</option>\r\n                    <option value=\"md\">md</option>\r\n                    <option value=\"lg\">lg</option>\r\n                    <option value=\"xl\">xl</option>\r\n                    <option value=\"none\">none</option>\r\n                </select>\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink,\r\n    Link\r\n} from \"react-router-dom\"\r\nimport Grid from \"../components/Grid\"\r\n\r\nimport \"./docs.scss\"\r\nimport { HomePage } from \"./pages/HomePage\"\r\nimport SidebarMenu from \"../components/SidebarMenu\"\r\nimport MenuItem from \"../components/MenuItem\"\r\n\r\nimport {\r\n    List,\r\n    House,\r\n    CodeSquare,\r\n    Puzzle,\r\n    Tools,\r\n    XCircleFill,\r\n    InfoCircleFill,\r\n    CheckCircleFill,\r\n    ExclamationCircleFill,\r\n    Palette2,\r\n    HouseFill,\r\n    PuzzleFill,\r\n    Stickies,\r\n    StickiesFill\r\n} from \"react-bootstrap-icons\"\r\n\r\nimport { ComponentPage } from \"./pages/ComponentPage\"\r\nimport { IntroDemoPage } from \"./pages/IntroDemoPage\"\r\nimport UtilitiesPage from \"./pages/UtilitiesPage\"\r\nimport { ActionsExamplePage } from \"./pages/ActionsExamplePage\"\r\nimport HeaderTitle from \"../components/HeaderTitle\"\r\nimport { appTitle, logo } from \"./Global\"\r\nimport { RecipesPage } from \"./pages/RecipesPage\"\r\nimport { ActionMenuExamplePage } from \"./pages/ActionMenuExamplePage\"\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Grid\r\n                pages={[]}\r\n                unrouteable\r\n                expandSidebar\r\n                sidebarToggleIconComponent={<List />}\r\n                statusIcons={{\r\n                    danger: <XCircleFill />,\r\n                    info: <InfoCircleFill />,\r\n                    success: <CheckCircleFill />,\r\n                    warning: <ExclamationCircleFill />\r\n                }}\r\n                disableHeaders\r\n            >\r\n                <HeaderTitle sidebar>\r\n                    <Link to=\"/\">\r\n                        <img\r\n                            src={logo}\r\n                            className=\"blue-app-header-logo-image\"\r\n                            alt=\"B\"\r\n                        />\r\n                    </Link>{\" \"}\r\n                    <Link to=\"/\">{appTitle}</Link>\r\n                </HeaderTitle>\r\n\r\n                <SidebarMenu\r\n                    bottomContent={\r\n                        <>\r\n                            <MenuItem\r\n                                href=\"https://bruegmann.github.io/themify/customize\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                label=\"Customize with Themify\"\r\n                                icon={<Palette2 />}\r\n                            />\r\n\r\n                            <MenuItem\r\n                                href=\"https://github.com/bruegmann/blue-react\"\r\n                                icon={<CodeSquare />}\r\n                                label=\"Code on GitHub\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            />\r\n                        </>\r\n                    }\r\n                >\r\n                    <MenuItem\r\n                        icon={<House />}\r\n                        iconForActive={<HouseFill />}\r\n                        label=\"Start\"\r\n                        elementType={NavLink}\r\n                        exact\r\n                        to=\"/\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Tools />}\r\n                        label=\"Utilities\"\r\n                        elementType={NavLink}\r\n                        to=\"/utilities\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Puzzle />}\r\n                        iconForActive={<PuzzleFill />}\r\n                        label=\"React Components\"\r\n                        elementType={NavLink}\r\n                        to=\"/component\"\r\n                    />\r\n                    <MenuItem\r\n                        icon={<Stickies />}\r\n                        iconForActive={<StickiesFill />}\r\n                        label=\"Recipes\"\r\n                        elementType={NavLink}\r\n                        to=\"/recipes\"\r\n                    />\r\n                </SidebarMenu>\r\n\r\n                <div className=\"router-page active\">\r\n                    <Switch>\r\n                        <Route path=\"/utilities\">\r\n                            <UtilitiesPage />\r\n                        </Route>\r\n                        <Route path=\"/component/:selectedComponent?\">\r\n                            <ComponentPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/intro-demo\">\r\n                            <IntroDemoPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/actions-example/:headerless?\">\r\n                            <ActionsExamplePage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/action-menu-example\">\r\n                            <ActionMenuExamplePage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/recipes/:active?\">\r\n                            <RecipesPage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/\">\r\n                            <HomePage />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Grid>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It\"s the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\")\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error)\r\n        })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can\"t reload the page.\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" }\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\")\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister()\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./docs/App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","export type breakOption = \"sm\" | \"md\" | \"lg\" | \"xl\"\r\nexport type ModalType = \"ask\" | \"tell\" | \"verify\"\r\n\r\ninterface Phrases {\r\n    [key: string]: string[]\r\n}\r\n\r\nconst phrases: Phrases = {\r\n    Cancel: [\"Cancel\", \"Abbrechen\"],\r\n    Yes: [\"Yes\", \"Ja\"],\r\n    No: [\"No\", \"Nein\"],\r\n    Message: [\"Message\", \"Nachricht\"]\r\n}\r\n\r\nexport function getPhrase(\r\n    keyword: string,\r\n    countryCode: string | undefined = undefined,\r\n    _phrases: Phrases | undefined = undefined\r\n) {\r\n    countryCode =\r\n        countryCode || navigator.language.toLowerCase().indexOf(\"de\") > -1\r\n            ? \"de-DE\"\r\n            : \"en-US\"\r\n    _phrases = _phrases || phrases\r\n\r\n    if (_phrases[keyword]) {\r\n        if (countryCode.indexOf(\"de-\") > -1) {\r\n            return _phrases[keyword][1]\r\n        } else {\r\n            return _phrases[keyword][0]\r\n        }\r\n    } else {\r\n        return keyword\r\n    }\r\n}\r\n","import Utilities from \"./Utilities\"\r\nimport React, {\r\n    FormEvent,\r\n    useEffect,\r\n    useState,\r\n    MutableRefObject,\r\n    useRef\r\n} from \"react\"\r\nimport { Modal as BootstrapModal } from \"bootstrap\"\r\nimport { getPhrase, ModalType } from \"./shared\"\r\n\r\nexport interface ModalProps {\r\n    modalContent?: string\r\n    unSetModalContent: (modalContent?: string) => void\r\n\r\n    /**\r\n     * Type of `input` depends on `type` prop and which action occured.\r\n     * When it's a string, the user entered something. When it's a boolean, the user clicked \"Yes\" or \"No\".\r\n     * When it's `null`, the user cancelled the modal.\r\n     */\r\n    onSubmit?: (input: string | boolean | null) => void\r\n    defaultInput?: string\r\n\r\n    /**\r\n     * `\"ask\"` | `\"tell\"` | `\"verify\"`\r\n     */\r\n    type: ModalType\r\n}\r\n\r\n/**\r\n * Simple modal/dialog. Designed to work as an alternative to JavaScript's native `alert()`, `prompt()` and `confirm()` functions.\r\n * It uses Bootstrap's Modal components.\r\n *\r\n * For easy use, you should use the hook `useModal` together with `ModalProvider`. See the example below.\r\n */\r\nexport default function Modal({\r\n    modalContent,\r\n    unSetModalContent,\r\n    onSubmit,\r\n    defaultInput,\r\n    type\r\n}: ModalProps) {\r\n    const modalRef = useRef() as MutableRefObject<HTMLDivElement>\r\n    const [input, setInput] = useState<string>(defaultInput || \"\")\r\n    const cancel = () => {\r\n        unSetModalContent()\r\n        if (onSubmit) {\r\n            onSubmit(null)\r\n        }\r\n    }\r\n    const sayNo = () => {\r\n        unSetModalContent()\r\n        if (onSubmit) {\r\n            onSubmit(false)\r\n        }\r\n    }\r\n    const submit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        if (onSubmit) {\r\n            onSubmit(input || true)\r\n        }\r\n    }\r\n    const btnStyle = { maxWidth: \"10rem\" }\r\n    useEffect(() => {\r\n        setInput(defaultInput || \"\")\r\n    }, [defaultInput])\r\n    useEffect(() => {\r\n        Utilities.registerFluentBtns()\r\n    })\r\n\r\n    useEffect(() => {\r\n        const myModal = modalRef.current as unknown as Element\r\n        let bsModal = BootstrapModal.getInstance(myModal)\r\n\r\n        if (!bsModal) {\r\n            bsModal = new BootstrapModal(myModal)\r\n            bsModal.hide()\r\n\r\n            // When the user clicks on underlay to close the modal\r\n            myModal.addEventListener(\"hidden.bs.modal\", () => {\r\n                cancel()\r\n            })\r\n        } else {\r\n            modalContent !== undefined ? bsModal.show() : bsModal.hide()\r\n        }\r\n    }, [modalContent])\r\n\r\n    return (\r\n        <div className=\"modal\" ref={modalRef} tabIndex={-1}>\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <form onSubmit={submit}>\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">\r\n                                {getPhrase(\"Message\")}\r\n                            </h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close\"\r\n                                onClick={cancel}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            {modalContent}\r\n                            {type === \"ask\" && (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control mt-1\"\r\n                                    value={input}\r\n                                    onChange={({ target }) =>\r\n                                        setInput(target.value)\r\n                                    }\r\n                                    autoFocus\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary d-block w-100\"\r\n                                style={btnStyle}\r\n                            >\r\n                                {type === \"verify\" ? getPhrase(\"Yes\") : \"OK\"}\r\n                            </button>\r\n                            {(type === \"ask\" || type === \"verify\") &&\r\n                                (type === \"verify\" ? (\r\n                                    <button\r\n                                        className=\"btn btn-outline-primary d-block w-100\"\r\n                                        style={btnStyle}\r\n                                        onClick={sayNo}\r\n                                    >\r\n                                        {getPhrase(\"No\")}\r\n                                    </button>\r\n                                ) : (\r\n                                    <button\r\n                                        className=\"btn btn-outline-primary d-block w-100\"\r\n                                        style={btnStyle}\r\n                                        onClick={cancel}\r\n                                    >\r\n                                        {getPhrase(\"Cancel\")}\r\n                                    </button>\r\n                                ))}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { createContext, useCallback, useContext, useState } from \"react\"\r\nimport { ModalType } from \"./shared\"\r\nimport Modal from \"./Modal\"\r\n\r\nconst ModalContext = createContext({\r\n    ask: undefined as unknown as (text: string) => Promise<string | boolean>,\r\n    tell: undefined as unknown as (text: string) => Promise<boolean>,\r\n    verify: undefined as unknown as (text: string) => Promise<boolean>\r\n})\r\n\r\nconst ModalProvider = (props: any) => {\r\n    const [type, setType] = useState<ModalType>(\"tell\")\r\n    const [modalContent, setModalContent] = useState<string | undefined>()\r\n    const [defaultInput, setDefaultInput] = useState<string | undefined>()\r\n    const unSetModalContent = useCallback(() => {\r\n        setModalContent(undefined)\r\n    }, [setModalContent])\r\n\r\n    const [onSubmit, setOnSubmit] = useState<\r\n        ((input: string | boolean | null) => void) | undefined\r\n    >()\r\n\r\n    const ask = (text: string) => {\r\n        return new Promise((resolve: (input: string | boolean) => void) => {\r\n            setType(\"ask\")\r\n            setModalContent(text)\r\n            setDefaultInput(\"\")\r\n            setOnSubmit(() => (input: string | boolean) => {\r\n                resolve(input)\r\n                setModalContent(undefined)\r\n                setDefaultInput(undefined)\r\n            })\r\n        })\r\n    }\r\n\r\n    const tell = (text: string) => {\r\n        return new Promise((resolve: (input: boolean) => void) => {\r\n            setType(\"tell\")\r\n            setModalContent(text)\r\n            setOnSubmit(() => (input: string | boolean) => {\r\n                resolve(input ? true : false)\r\n                setModalContent(undefined)\r\n            })\r\n        })\r\n    }\r\n\r\n    const verify = (text: string) => {\r\n        return new Promise((resolve: (input: boolean) => void) => {\r\n            setType(\"verify\")\r\n            setModalContent(text)\r\n            setOnSubmit(() => (input: string | boolean) => {\r\n                resolve(input ? true : false)\r\n                setModalContent(undefined)\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ModalContext.Provider\r\n            value={{\r\n                ask,\r\n                tell,\r\n                verify\r\n            }}\r\n            {...props}\r\n        >\r\n            {props.children}\r\n            <Modal\r\n                modalContent={modalContent}\r\n                unSetModalContent={unSetModalContent}\r\n                onSubmit={onSubmit}\r\n                defaultInput={defaultInput}\r\n                type={type}\r\n            />\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nconst useModal = () => {\r\n    const context = useContext(ModalContext)\r\n    if (context === undefined) {\r\n        throw new Error(\"useModal must be used within a ModalProvider\")\r\n    }\r\n    return context\r\n}\r\n\r\nexport { ModalProvider, useModal }\r\n","import { ModalProvider, useModal } from \"../../components/ModalProvider\"\r\n\r\nfunction InsideComp() {\r\n    // Use the `useModal` hook.\r\n    const { tell, verify, ask } = useModal()\r\n\r\n    return (\r\n        <div className=\"d-flex gap-2\">\r\n            <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={() => {\r\n                    tell(\"Hey, what's up\")\r\n                }}\r\n            >\r\n                tell\r\n            </button>\r\n\r\n            <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={\r\n                    // Make sure to make your function \"async\" when using \"await\"\r\n                    async () => {\r\n                        // Use \"await\" to wait until the user enters something\r\n                        const answer = await ask(\"What is 1 + 1?\")\r\n                        if (answer && parseInt(answer.toString()) === 2) {\r\n                            tell(\"That's correct!\")\r\n                        } else {\r\n                            tell(\"Wrong!\")\r\n                        }\r\n                    }\r\n                }\r\n            >\r\n                ask\r\n            </button>\r\n\r\n            <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={async () => {\r\n                    const answer = await verify(\"Are you sure?\")\r\n                    console.log({ answer })\r\n                    if (answer === true) {\r\n                        tell(\"So, you're sure\")\r\n                    }\r\n                }}\r\n            >\r\n                verify\r\n            </button>\r\n\r\n            <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={async () => {\r\n                    const name = await ask(\"What is your name?\")\r\n                    console.log(name)\r\n                    if (name) {\r\n                        const retVal = await tell(\"Hello, \" + name)\r\n                        console.log(retVal)\r\n\r\n                        if (await verify(\"Is everything alright?\")) {\r\n                            await tell(\"Oh, nice\")\r\n                        } else {\r\n                            await tell(\"Oh no :(\")\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                Start a conversation\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Your component where you use `useModal` has to be wrapped around `<ModalProvider></ModalProvider>`.\r\n * Best practice is to wrap it around your root component.\r\n */\r\nexport default function ModalExample() {\r\n    return (\r\n        <ModalProvider>\r\n            <InsideComp />\r\n        </ModalProvider>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface DocumentViewProps {\r\n    /**\r\n     * Source of the content (URL)\r\n     */\r\n    src?: string\r\n\r\n    /**\r\n     * Instead of a source, you can also set the content directly (HTML)\r\n     */\r\n    content?: string\r\n\r\n    /**\r\n     * MIME type of the content (e.g. \"application/pdf\")\r\n     */\r\n    mimeType: string\r\n\r\n    /**\r\n     * Label for the button to display\r\n     */\r\n    showDocumentLabel: string\r\n}\r\n\r\n/**\r\n * Tries to display content in an iframe. When the content can't displayed in an iframe, it will show a download button instead.\r\n */\r\nexport default function DocumentView({\r\n    content,\r\n    mimeType,\r\n    src = \"about:blank\",\r\n    showDocumentLabel = \"Show document\"\r\n}: DocumentViewProps) {\r\n    const uniqueId = \"document-view-\" + Utilities.guid()\r\n\r\n    const supportsIframe = () =>\r\n        mimeType === \"application/pdf\" ||\r\n        mimeType === \"image/png\" ||\r\n        mimeType === \"image/jpeg\" ||\r\n        mimeType === \"image/gif\" ||\r\n        mimeType === \"image/tiff\" ||\r\n        mimeType === \"image/bmp\" ||\r\n        mimeType === \"image/x-bmp\" ||\r\n        mimeType === \"image/x-ms-bmp\" ||\r\n        mimeType === \"text/plain\" ||\r\n        mimeType === \"text/html\"\r\n\r\n    useEffect(() => {\r\n        if (supportsIframe()) {\r\n            Utilities.startLoading()\r\n\r\n            if (content) {\r\n                let iframe = document.getElementById(\r\n                    uniqueId\r\n                ) as HTMLIFrameElement\r\n\r\n                if (iframe && iframe.contentWindow) {\r\n                    iframe.contentWindow.document.open()\r\n                    iframe.contentWindow.document.write(content)\r\n                    iframe.contentWindow.document.close()\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {supportsIframe() ? (\r\n                <iframe\r\n                    id={uniqueId}\r\n                    className=\"document-view-iframe\"\r\n                    src={src}\r\n                    onLoad={({ target }: any) => {\r\n                        Utilities.finishLoading()\r\n\r\n                        const iframeContent =\r\n                            target.contentDocument ||\r\n                            target.contentWindow.document\r\n\r\n                        if (mimeType.indexOf(\"image/\") > -1) {\r\n                            let image = iframeContent.querySelector(\"img\")\r\n\r\n                            if (image) {\r\n                                if (image.offsetWidth > image.offsetHeight) {\r\n                                    image.style.width = \"100%\"\r\n                                } else {\r\n                                    image.style.height = \"100%\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            ) : (\r\n                <a href={src} className=\"btn btn-secondary btn-lg d-block\">\r\n                    {showDocumentLabel}\r\n                </a>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport DocumentView from \"../../components/DocumentView\"\r\n\r\nclass DocumentViewExample extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DocumentView\r\n                    src=\"/blue-react/v7/example-document.pdf\"\r\n                    mimeType=\"application/pdf\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DocumentViewExample\r\n","import React, { MutableRefObject, useEffect, useRef } from \"react\"\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nexport function useOutside(\r\n    ref: MutableRefObject<any>,\r\n    callback?: (event: MouseEvent) => void\r\n) {\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event: MouseEvent) {\r\n            console.log({ target: event.target })\r\n            if (\r\n                ref.current &&\r\n                !ref.current.contains(event.target) &&\r\n                callback\r\n            ) {\r\n                callback(event)\r\n            }\r\n        }\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside)\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside)\r\n        }\r\n    }, [ref])\r\n}\r\n\r\nexport interface OutsideProps {\r\n    children: any\r\n    className?: string\r\n    onClickOutside?: (event: MouseEvent) => void\r\n}\r\n\r\n/**\r\n * Component that fires an event if you click outside of it\r\n */\r\nexport default function Outside({\r\n    children,\r\n    className,\r\n    onClickOutside\r\n}: OutsideProps) {\r\n    const wrapperRef = useRef(null)\r\n    useOutside(wrapperRef, onClickOutside)\r\n\r\n    return (\r\n        <div ref={wrapperRef} className={className}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport Caret from \"./Caret\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface DropdownMenuItemProps {\r\n    to?: string\r\n    icon?: any\r\n    label?: any\r\n    isActive?: boolean\r\n    children?: any\r\n}\r\n\r\n/**\r\n * @deprecated Use nested `MenuItem`s instead.\r\n * Dropdown with button for sidebar.\r\n */\r\nexport default function DropdownMenuItem(props: DropdownMenuItemProps) {\r\n    const [active, setActive] = useState<boolean>(props.isActive || false)\r\n    const [showDropdown, setShowDropdown] = useState<boolean>(false)\r\n\r\n    const handleClick = () => {\r\n        if (props.children) {\r\n            setShowDropdown(!showDropdown)\r\n        }\r\n    }\r\n\r\n    let icon\r\n\r\n    if (typeof props.icon === \"string\") {\r\n        // is className\r\n        icon = (\r\n            <span\r\n                className={\r\n                    props.icon +\r\n                    (props.children ? \" blue-app-sidebar-dropdown-icon\" : \"\")\r\n                }\r\n            />\r\n        )\r\n    } else {\r\n        // is element / component\r\n        icon = props.icon\r\n    }\r\n\r\n    let id = {\r\n        id: \"blue-action-menu-item-\" + Utilities.guid()\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"btn-group w-100\">\r\n                <a\r\n                    {...id}\r\n                    className={\r\n                        \"blue-app-toggle-page blue-app-sidebar-btn btn pe-0 \" +\r\n                        (active ? \"active\" : \"\")\r\n                    }\r\n                    href={props.to}\r\n                >\r\n                    {icon}\r\n                    <span className=\"blue-app-sidebar-label\">\r\n                        {props.label}\r\n                    </span>\r\n                </a>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn blue-app-sidebar-btn w-auto ps-0\"\r\n                    onClick={handleClick}\r\n                >\r\n                    <span className=\"sr-only\">Toggle Dropdown</span>\r\n                    <Caret\r\n                        open={showDropdown}\r\n                        mirrored\r\n                        className=\"w-auto ps-5 mt-2\"\r\n                    />\r\n                </button>\r\n            </div>\r\n            {showDropdown && (\r\n                <div className=\"blue-app-sidebar-dropdown\">\r\n                    {props.children}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport MenuItem from \"../../components/MenuItem\"\r\nimport DropdownMenuItem from \"../../components/DropdownMenuItem\"\r\n\r\nclass DropdownMenuItemExample extends React.Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"blue-app-sidebar position-relative\"\r\n                style={{ top: \"0\" }}\r\n            >\r\n                <DropdownMenuItem\r\n                    to=\"#\"\r\n                    label=\"DropdownMenuItem\"\r\n                    icon=\"bi-home\"\r\n                >\r\n                    <MenuItem href=\"#\" label=\"MenuItem\"></MenuItem>\r\n                </DropdownMenuItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropdownMenuItemExample\r\n","import React from \"react\"\r\n\r\nexport interface FluentBtnProps {\r\n    /**\r\n     * Content of the button. You can also set all other props you would give a button or a link.\r\n     */\r\n    children?: any\r\n\r\n    className?: string\r\n\r\n    /**\r\n     * If set, it will be an `<a>` element. Otherwise it will be a `<button>`.\r\n     */\r\n    href?: string\r\n\r\n    /**\r\n     * Can be set for buttons with white background. The glow will be a little bit darker than.\r\n     */\r\n    light?: boolean\r\n\r\n    type?: string\r\n    title?: string\r\n    style?: any\r\n    onClick?: (e?: any) => void\r\n}\r\n\r\n/**\r\n * @deprecated Fluent buttons got removed from blue-react.\r\n * Shortcut for `<button class=\"fluent-btn\"><div className=\"fluent-btn-ball\"></div></button>`.\r\n * Button with a fancy and fluent acrylic effect.\r\n */\r\nexport default function FluentBtn(props: FluentBtnProps) {\r\n    const ballClassName = \"fluent-btn-ball\"\r\n\r\n    let _props: { [key: string]: any } = {}\r\n\r\n    Object.keys(props).forEach((key) => {\r\n        if (key !== \"light\") {\r\n            _props[key] = (props as { [key: string]: any })[key]\r\n        }\r\n    })\r\n\r\n    _props.className =\r\n        \"fluent-btn \" + props.className + (props.light ? \" light\" : \"\")\r\n\r\n    return props.href ? (\r\n        <a {..._props}>\r\n            <div className={ballClassName} />\r\n            {props.children}\r\n        </a>\r\n    ) : (\r\n        <button {..._props}>\r\n            <div className={ballClassName} />\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Utilities from \"../../components/Utilities\"\r\nimport FluentBtn from \"../../components/FluentBtn\"\r\n\r\nclass FluentBtnExample extends React.Component {\r\n    componentDidMount() {\r\n        // Beim normalen Einsatz innerhalb von <Page /> ist folgendes nicht nötig. Nur, wenn <FluentBtn /> z.B. asynchron eingebunden wird.\r\n        Utilities.registerFluentBtns()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FluentBtn className=\"btn btn-primary btn-lg mb-1\">\r\n                    Hover over this button and see the fancy fluent effect\r\n                </FluentBtn>\r\n                <br />\r\n                <FluentBtn className=\"btn btn-secondary mb-1\">\r\n                    A secondary button in normal size\r\n                </FluentBtn>\r\n                <br />\r\n                <FluentBtn className=\"btn btn-outline-secondary mb-1\">\r\n                    A secondary outline button\r\n                </FluentBtn>\r\n                <br />\r\n                <FluentBtn href=\"#\" className=\"btn btn-light mb-1\">\r\n                    A light button\r\n                </FluentBtn>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FluentBtnExample\r\n","import React, { useState } from \"react\"\r\nimport MenuItem from \"./MenuItem\"\r\nimport Utilities from \"./Utilities\"\r\n\r\nexport interface SearchProps {\r\n    autoFocus?: boolean\r\n\r\n    /**\r\n     * Is component inside of a page?\r\n     */\r\n    body?: boolean\r\n\r\n    className?: string\r\n    icon?: any\r\n    onChange?: (event: React.ChangeEvent) => void\r\n    onSubmit?: (event: React.FormEvent) => void\r\n    placeholder?: string\r\n\r\n    /**\r\n     * Allow reset?\r\n     */\r\n    reset?: boolean\r\n\r\n    /**\r\n     * Define custom icon for the reset button.\r\n     */\r\n    resetIcon?: any\r\n\r\n    /**\r\n     * Is component inside of the sidebar?\r\n     */\r\n    sidebar?: boolean\r\n\r\n    value?: string\r\n}\r\n\r\n/**\r\n * A search bar that can be placed to the sidebar or on a page.\r\n */\r\nexport default function Search(props: SearchProps) {\r\n    const {\r\n        autoFocus,\r\n        body,\r\n        className,\r\n        icon,\r\n        onChange,\r\n        onSubmit,\r\n        placeholder,\r\n        reset,\r\n        resetIcon,\r\n        sidebar\r\n    } = props\r\n    const SearchControlId = \"blue-app-search-control-\" + Utilities.guid()\r\n\r\n    const [value, setValue] = useState<string>(props.value || \"\")\r\n    const [focus, setFocus] = useState<boolean>(false)\r\n\r\n    const toggleSidebar = () => {\r\n        if (sidebar) {\r\n            document.dispatchEvent(window.toggleSidebarEvent)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className={\r\n                \"blue-app-search \" +\r\n                (body ? \"blue-app-search-body \" : \"\") +\r\n                (focus ? \"focus \" : \"\") +\r\n                (sidebar ? \"blue-app-search-sidebar \" : \"\") +\r\n                className\r\n            }\r\n            onSubmit={(event) => {\r\n                event.preventDefault()\r\n                toggleSidebar()\r\n                if (onSubmit) onSubmit(event)\r\n            }}\r\n        >\r\n            <div className=\"blue-app-search-input-group input-group\">\r\n                <span\r\n                    className=\"input-group-text\"\r\n                    onClick={() =>\r\n                        document.getElementById(SearchControlId)?.focus()\r\n                    }\r\n                >\r\n                    {icon || (\r\n                        <span>\r\n                            <svg\r\n                                width=\"1em\"\r\n                                height=\"1em\"\r\n                                viewBox=\"0 0 16 16\"\r\n                                className=\"bi bi-search mt-n1\"\r\n                                fill=\"currentColor\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"\r\n                                />\r\n                                <path\r\n                                    fillRule=\"evenodd\"\r\n                                    d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"\r\n                                />\r\n                            </svg>\r\n                        </span>\r\n                    )}\r\n                </span>\r\n\r\n                <input\r\n                    type=\"search\"\r\n                    value={value}\r\n                    onChange={(event) => {\r\n                        setValue(event.target.value)\r\n                        if (onChange) onChange(event)\r\n                    }}\r\n                    id={SearchControlId}\r\n                    className=\"blue-app-search-control form-control default input-lg\"\r\n                    placeholder={placeholder}\r\n                    autoFocus={autoFocus}\r\n                    style={{\r\n                        zIndex: body ? 0 : undefined\r\n                    }}\r\n                    onFocus={() => setFocus(true)}\r\n                    onBlur={() => setFocus(false)}\r\n                />\r\n\r\n                {reset && value.length > 0 && (\r\n                    <div className=\"input-group-btn\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"blue-app-search-reset-btn btn btn-link btn-lg\"\r\n                            onClick={() => {\r\n                                setValue(\"\")\r\n                                document\r\n                                    .getElementById(SearchControlId)\r\n                                    ?.focus()\r\n                                if (onChange)\r\n                                    onChange({\r\n                                        target: {\r\n                                            value: \"\"\r\n                                        }\r\n                                    } as any)\r\n                            }}\r\n                        >\r\n                            {resetIcon || (\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"1em\"\r\n                                    height=\"1em\"\r\n                                    fill=\"currentColor\"\r\n                                    className=\"bi bi-x mt-n1\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                >\r\n                                    <path d=\"M4.646 4.646a.5.5 0 01.708 0L8 7.293l2.646-2.647a.5.5 0 01.708.708L8.707 8l2.647 2.646a.5.5 0 01-.708.708L8 8.707l-2.646 2.647a.5.5 0 01-.708-.708L7.293 8 4.646 5.354a.5.5 0 010-.708z\"></path>\r\n                                </svg>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {sidebar && (\r\n                <MenuItem\r\n                    href=\"#\"\r\n                    className=\"blue-app-search-btn\"\r\n                    icon={icon}\r\n                    onClick={(event) => {\r\n                        event.preventDefault()\r\n                        toggleSidebar()\r\n                        setTimeout(() => {\r\n                            ;(\r\n                                document.querySelector(\r\n                                    \".blue-app-search-control\"\r\n                                ) as HTMLInputElement | null\r\n                            )?.select()\r\n                        }, 200)\r\n                    }}\r\n                />\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n"],"sourceRoot":""}