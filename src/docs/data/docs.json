{"src\\components\\ActionMenuItem.js":{"description":"@deprecated This is only an alias to MenuItem, please use MenuItem instead.\r\n<span class=\"badge badge-warning\">Deprecated</span> This is just an alias for <code>MenuItem</code>, so you should use that component instead.\r\nIf you need the older <code>ActionMenuItem</code>, make sure to the prop <code>useDeprecated</code>.<br/>\r\nList Item and Link for the current Action Menu.","displayName":"ActionMenuItem","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null}],"props":{"navItemClassName":{"type":{"name":"string"},"required":false,"description":"Extends className of the <code>.nav-item</code> element.","defaultValue":{"value":"\"\"","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Extends className of the <code>.nav-link</code> element.","defaultValue":{"value":"\"\"","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"javascript:void(0)\"","computed":false}},"icon":{"type":{"name":"string"},"required":false,"description":"className for the icon."},"label":{"type":{"name":"any"},"required":false,"description":"Label for the link."},"title":{"type":{"name":"string"},"required":false,"description":"Tooltip on hover."},"useDeprecated":{"type":{"name":"bool"},"required":false,"description":"Set <code>true</code> to use the old ActionMenuItem. Otherwise this component is just an alias to <code>MenuItem</code>.","defaultValue":{"value":"false","computed":false}}}},"src\\components\\ActionMenuSwitch.js":{"description":"<span class=\"badge badge-secondary\">Deprecated</span> When using <strong>Actions</strong>, please use <strong>SwitchMenuItem</strong> instead.<br>\r\nSwitch for the Action Menu.","displayName":"ActionMenuSwitch","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null}],"props":{"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"checked":{"type":{"name":"bool"},"required":false,"description":""},"onChange":{"type":{"name":"func"},"required":false,"description":""},"label":{"type":{"name":"any"},"required":false,"description":"Label of the control"},"href":{"defaultValue":{"value":"\"javascript:void(0)\"","computed":false},"required":false}}},"src\\components\\DropdownMenuItem.js":{"description":"Dropdown-Button und Link für die Sidebar.","displayName":"DropdownMenuItem","methods":[{"name":"handleClick","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"label":{"type":{"name":"any"},"required":false,"description":"Beschriftung des Links"},"isActive":{"type":{"name":"bool"},"required":false,"description":"Soll Item als \"aktiv\" markiert werden? Ist die to-Property gesetzt, wird Item automatisch als \"aktiv\" markiert, wenn entsprechende Seite aktiv ist."},"to":{"type":{"name":"string"},"required":false,"description":"Setzt to-Property der NavLink-Komponente aus React Router."},"children":{"type":{"name":"any"},"required":false,"description":"Werden in einem Dropdown-Menü angezeigt."},"icon":{"type":{"name":"any"},"required":false,"description":"Klasse eines Icons oder Element, z.B. von blueicon-colored."}},"exampleCode":"import React from \"react\";\r\nimport MenuItem from \"../../components/MenuItem\";\r\nimport DropdownMenuItem from \"../../components/DropdownMenuItem\";\r\n\r\n\r\nclass DropdownMenuItemExample extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"blue-app-sidebar position-relative\" style={{ top: \"0\" }}>\r\n                <DropdownMenuItem to=\"#\" label=\"DropdownMenuItem\" icon=\"bi-home\">\r\n                    <MenuItem href=\"#\" label=\"MenuItem\"></MenuItem>\r\n                </DropdownMenuItem>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DropdownMenuItemExample;"},"src\\components\\FluentBtn.js":{"description":"Shortcut for <code>&lt;button class=\"fluent-btn\"&gt;&lt;div className=\"fluent-btn-ball\"&gt;&lt;/div&gt;&lt;/button&gt;</code>.\r\nButton with a fancy and fluent acrylic effect.","displayName":"FluentBtn","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null}],"props":{"children":{"type":{"name":"any"},"required":false,"description":"Content of the button. You can also set all other props you would give a button or a link."},"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"If set, it will be an <code>&lt;a&gt;</code> element. Otherwise it will be a <code>&lt;button&gt;</code>."},"light":{"type":{"name":"bool"},"required":false,"description":"Can be set for buttons with white background. The glow will be a little bit darker than.","defaultValue":{"value":"false","computed":false}}},"exampleCode":"import React from \"react\";\r\nimport Utilities from \"../../components/Utilities\";\r\nimport FluentBtn from \"../../components/FluentBtn\";\r\n\r\nclass FluentBtnExample extends React.Component {\r\n    componentDidMount() {\r\n        // Beim normalen Einsatz innerhalb von <Page /> ist folgendes nicht nötig. Nur, wenn <FluentBtn /> z.B. asynchron eingebunden wird.\r\n        Utilities.registerFluentBtns();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FluentBtn\r\n                    className=\"btn btn-primary btn-lg\"\r\n                >\r\n                    Hover over this button and see the fancy fluent effect\r\n                </FluentBtn>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FluentBtnExample;"},"src\\components\\Grid.js":{"description":"Das Grundgerüst. Sobald diese Komponente gemountet wurde, ist sie global über <code>window.blueGridRef</code> zugreifbar.<br>\r\nAußerdem kann über <code>blueGridRef.addEventListener(eventName, (prevProps, prevState) => { })</code> ein Event-Listener angefügt werden.\r\n<br><br>\r\nErlaubte Event-Listener:\r\n<table class=\"table\">\r\n<thead><tr><th>Event name</th><th>Description</th><th>Beispiel</th></tr></thead>\r\n<tbody>\r\n<tr>\r\n<th>componentDidUpdate</th>\r\n<td>Komponente wurde aktualisiert.</td>\r\n<td><code>blueGridRef.addEventListener(\"componentDidUpdate\", (prevProps, prevState) => { })</code></td>\r\n</tr>\r\n\r\n<tr>\r\n<th>pageDidShowAgain</th>\r\n<td>Seite wurde erneut angezeigt, mit altem Stand. Im Callback kann Komponente neu initialisiert werden.</td>\r\n<td><code>blueGridRef.addEventListener(\"pageDidShowAgain\", \"home\", (prevProps, prevState) => { })</code></td>\r\n</tr>\r\n\r\n<tr>\r\n<th>pageDidHide</th>\r\n<td>Seite wurde versteckt (andere Seite wurde angezeigt).</td>\r\n<td><code>blueGridRef.addEventListener(\"pageDidHide\", \"home\", (prevProps, prevState) => { })</code></td>\r\n</tr>\r\n</tbody>\r\n</table>","displayName":"Grid","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null},{"name":"toggleSidebar","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"hideSidebar","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null},{"name":"initMatch","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"addEventListener","docblock":null,"modifiers":[],"params":[{"name":"param1","type":null},{"name":"param2","type":null},{"name":"param3","type":null}],"returns":null}],"props":{"expandSidebar":{"type":{"name":"bool"},"required":false,"description":"Die Sidebar ist bei Vollbild automatisch eingeklappt.","defaultValue":{"value":"false","computed":false}},"hideSidebarMenu":{"type":{"name":"bool"},"required":false,"description":"Deaktiviert die Sidebar.","defaultValue":{"value":"false","computed":false}},"pages":{"type":{"name":"array"},"required":false,"description":"Registriert Seiten. Beispiel: [{name: \"home\", component: <HomePage />}]"},"unrouteable":{"type":{"name":"bool"},"required":false,"description":"Wenn <code>true</code> wird immer die \"home\"-Route geladen.","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Erweitert die <code>className</code>-Eigenschaft."},"disableTitleSet":{"type":{"name":"bool"},"required":false,"description":"Normalerweise wird der Dokumenten-Titel automatisch gesetzt. Setze diese Property auf <code>true</code> um das zu\r\ndeaktivieren.","defaultValue":{"value":"false","computed":false}},"sidebarToggleIconComponent":{"type":{"name":"any"},"required":false,"description":"If you don't use blueicon, you can define another icon element for the sidebar toggle button.","defaultValue":{"value":"<span className=\"bi-menu\" />","computed":false}},"statusIcons":{"type":{"name":"shape","value":{"danger":{"name":"any","required":false},"info":{"name":"any","required":false},"success":{"name":"any","required":false},"warning":{"name":"any","required":false}}},"required":false,"description":"Will replace status icons with custom ones. This can be a SVG component or a normal element component.","defaultValue":{"value":"{\r\n    danger: <span className=\"bi-error\" />,\r\n    info: <span className=\"bi-information\" />,\r\n    success: <span className=\"bi-check\" />,\r\n    warning: <span className=\"bi-sign_warning\" />\r\n}","computed":false}},"disableHeaders":{"type":{"name":"bool"},"required":false,"description":"Disables the header bars on pages."}}},"src\\components\\Header.js":{"description":"The top of a page.","displayName":"Header","methods":[]},"src\\components\\HeaderActions.js":{"description":"Hier werden z.B. Buttons für die aktuelle Seite platziert.","displayName":"HeaderActions","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null}],"props":{"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"breakpoint":{"type":{"name":"string"},"required":false,"description":"Legt fest, ab welcher Breite umgebrochen wird. Mögliche Werte: <code>\"sm\"</code> (768px), <code>\"md\"</code> (992px), <code>\"lg\"</code> (1200px)","defaultValue":{"value":"\"lg\"","computed":false}}}},"src\\components\\HeaderTitle.js":{"description":"Der Titel-Bereich in der Kopf-Leiste.\r\nAnhand dessen wird auch der Dokumenten-Titel gesetzt (was in der Browser Titelzeile gezeigt wird).","displayName":"HeaderTitle","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null},{"name":"setDocumentTitle","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"logo":{"type":{"name":"string"},"required":false,"description":"Kann ein Bild sein. Wird im src-Attribute implementiert."},"appTitle":{"type":{"name":"string"},"required":false,"description":"Der Text, der neben dem Logo steht."},"keepAppTitle":{"type":{"name":"bool"},"required":false,"description":"Deaktiviert, dass der App-Titel bei bestimmer Bildschirmgröße ausgeblendet wird.","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Extends `className` from parent element."},"sidebar":{"type":{"name":"bool"},"required":false,"description":"Is the component used on the sidebar?"}}},"src\\components\\Outside.js":{"description":"Component that fires an event if you click outside of it","displayName":"Outside","methods":[],"props":{"children":{"type":{"name":"element"},"required":true,"description":""},"className":{"type":{"name":"string"},"required":false,"description":""},"onClickOutside":{"type":{"name":"func"},"required":true,"description":""}}},"src\\components\\Page.js":{"description":"","displayName":"Page","methods":[],"props":{"hasActions":{"type":{"name":"bool"},"required":false,"description":"@deprecated This isn't necessary anymore to use Actions on a page."},"title":{"type":{"name":"string"},"required":false,"description":"Will be set to the document's `<title>` tag."}}},"src\\components\\Search.js":{"description":"Eine Suchleiste, die zur Seitenleiste hinzugefügt werden kann.","displayName":"Search","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null},{"name":"toggleSidebar","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"autoFocus":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"body":{"type":{"name":"bool"},"required":false,"description":"Wird Komponente im Body genutzt?","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"icon":{"type":{"name":"any"},"required":false,"description":"","defaultValue":{"value":"<span><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-search mt-n1\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n    <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n</svg></span>","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(event) => { }","computed":false}},"onSubmit":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(event) => { }","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"reset":{"type":{"name":"bool"},"required":false,"description":"Erlaube Zurücksetzen?","defaultValue":{"value":"false","computed":false}},"sidebar":{"type":{"name":"bool"},"required":false,"description":"Wird Komponente in der Sidebar genutzt?","defaultValue":{"value":"false","computed":false}},"value":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}}},"exampleCode":"import React from \"react\";\r\nimport Search from \"../../components/Search\";\r\n\r\nclass SearchExample extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            search: \"\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search\r\n                    body\r\n                    className=\"w-50\"\r\n                    onChange={({ target }) => this.setState({ search: target.value })}\r\n                    onSubmit={() => alert(\"Do form submit now!\")}\r\n                    placeholder=\"Begin typing...\"\r\n                    reset\r\n                    value={this.state.search}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchExample;"},"src\\components\\SidebarMenu.js":{"description":"Die Seitenleiste für das Grid.","displayName":"SidebarMenu","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null},{"name":"updateDimensions","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"fluent":{"type":{"name":"bool"},"required":false,"description":"Should menu items have a Fluent effect. Default: `true`","defaultValue":{"value":"true","computed":false}},"sidebarClass":{"type":{"name":"string"},"required":false,"description":"Erweiterung der className-Property der Seitenleiste."},"sidebarStyle":{"type":{"name":"object"},"required":false,"description":"Setzt die style-Property der Seitenleiste."},"menuClass":{"type":{"name":"string"},"required":false,"description":"Erweiterung der className-Property des Menüs."},"menuStyle":{"type":{"name":"object"},"required":false,"description":"Setzt die style-Property des Menüs."},"topContent":{"type":{"name":"any"},"required":false,"description":"Inhalte oberhalb des Sidebar-Menüs"},"bottomContent":{"type":{"name":"any"},"required":false,"description":"Inhalte für den Footer der Sidebar"}}},"src\\components\\Switch.js":{"description":"Switch.","displayName":"Switch","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static","get"],"params":[],"returns":null}],"props":{"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"checked":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"() => { }","computed":false}},"sliderLabel":{"type":{"name":"string"},"required":false,"description":"Sets label inside of the switch. If you set this, you should also set the className \"lg\" to make the switch larger.","defaultValue":{"value":"null","computed":false}},"elementType":{"type":{"name":"string"},"required":false,"description":"You can change the type of the wrapper element. If you do, the <code>onChange</code> event might not be triggered.","defaultValue":{"value":"\"label\"","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}},"exampleCode":"import React from \"react\";\r\nimport Switch from \"../../components/Switch\";\r\n\r\nclass SwitchExample extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isChecked: true\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch\r\n                    className=\"lg\"\r\n                    checked={this.state.isChecked}\r\n                    onChange={() => this.setState({ isChecked: !this.state.isChecked })}\r\n                    sliderLabel={this.state.isChecked ? \"Yay🎉\" : \"😒\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwitchExample;"},"src\\components\\SwitchMenuItem.js":{"description":"Switch for <strong>Actions</strong>","displayName":"SwitchMenuItem","methods":[],"composes":["./Switch.js"]}}