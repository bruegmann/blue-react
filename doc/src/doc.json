{"src\\ActionMenu.js":{"description":"<span class=\"badge badge-secondary\">Deprecated</span> Use <strong>Actions</strong> instead.<br>\r\nDas Action-Menü an der oberen rechten Ecke einer Seite. Hier können Aktionen platziert werden, die im Kontext der aktuellen Seite stehen.","displayName":"ActionMenu","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null},{"name":"toggleActions","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"initToggleStatus","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"hideToggleAction":{"type":{"name":"bool"},"required":false,"description":"Versteckt die drei Punkte in mobiler Ansicht.\r\nDas kann nützlich sein, wenn mehrere ActionMenus genutzt werden, aber nicht überall der Toggle angezeigt werden soll.","defaultValue":{"value":"false","computed":false}}}},"src\\ActionMenuItem.js":{"description":"List-Item und Link für das Action-Menü.","displayName":"ActionMenuItem","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null}],"props":{"navItemClassName":{"type":{"name":"string"},"required":false,"description":"Extends className of the <code>.nav-item</code> element.","defaultValue":{"value":"\"\"","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Extends className of the <code>.nav-link</code> element.","defaultValue":{"value":"\"\"","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"javascript:void(0)\"","computed":false}},"icon":{"type":{"name":"string"},"required":false,"description":"className for the icon."},"label":{"type":{"name":"any"},"required":false,"description":"Label for the link."}}},"src\\ActionMenuSwitch.js":{"description":"<span class=\"badge badge-secondary\">Deprecated</span> When using <strong>Actions</strong>, please use <strong>SwitchMenuItem</strong> instead.<br>\r\nSwitch für das Action-Menü.","displayName":"ActionMenuSwitch","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null}],"props":{"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"checked":{"type":{"name":"bool"},"required":false,"description":""},"onChange":{"type":{"name":"func"},"required":false,"description":""},"label":{"type":{"name":"any"},"required":false,"description":"Beschriftung des Controls"},"href":{"defaultValue":{"value":"\"javascript:void(0)\"","computed":false},"required":false}}},"src\\Actions.js":{"description":"The new actions menu, better optimized for mobile devices.<br>\r\n<strong>Important:</strong> If you use <code>&lt;Actions /&gt;</code> on a page, make sure also to set <strong>hasActions</strong> prop from\r\n<strong>Page</strong> component to <code>true</code>.","displayName":"Actions","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null},{"name":"toggle","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"children":{"type":{"name":"any"},"required":false,"description":"Content that will appear on the menu when it's expanded."},"className":{"type":{"name":"string"},"required":false,"description":"Extends the <code>className</code> of <code>.blue-actions</code>.","defaultValue":{"value":"\"\"","computed":false}},"featured":{"type":{"name":"any"},"required":false,"description":"Content that will appear when the menu is shrunken."},"open":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"onToggle":{"type":{"name":"func"},"required":false,"description":"Will fire when the state of <code>open</code> will change inside of the component.<br>\r\n<strong>Example:</strong> <code>onToggle={open => this.setState({ open })}</code>"},"break":{"type":{"name":"string"},"required":false,"description":"<code>sm</code>, <code>md</code>, <code>lg</code> or <code>xl</code>","defaultValue":{"value":"\"md\"","computed":false}}},"exampleCode":"import React from \"react\";\r\n\r\nclass ActionsExample extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <a href=\"#/icons\">See it in action on the icons page!</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionsExample;"},"src\\Body.js":{"description":"Enthält den Inhalt einer Seite.","displayName":"Body","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null}],"props":{"id":{"type":{"name":"string"},"required":false,"description":""},"className":{"type":{"name":"string"},"required":false,"description":""},"containerClass":{"type":{"name":"string"},"required":false,"description":"Setzt die Klasse für den Container. Mehr Infos unter https://getbootstrap.com/docs/4.0/layout/overview/#containers","defaultValue":{"value":"\"container-fluid\"","computed":false}},"hasActions":{"type":{"name":"bool"},"required":false,"description":"Set <code>true</code> if this page uses <code>/lt;Actions /&gt;</code>, so this component will get enough padding to avoid overlapping of the content.","defaultValue":{"value":"false","computed":false}},"break":{"type":{"name":"string"},"required":false,"description":"<code>sm</code>, <code>md</code>, <code>lg</code> or <code>xl</code>","defaultValue":{"value":"\"md\"","computed":false}}}},"src\\Caret.js":{"description":"Caret icon component.","displayName":"Caret","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null}],"props":{"open":{"type":{"name":"bool"},"required":false,"description":"Indicates if open or not.","defaultValue":{"value":"false","computed":false}},"mirrored":{"type":{"name":"bool"},"required":false,"description":"By default the caret points to the right when closed. Set mirrored and it will point to the left.","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}}},"exampleCode":"import React from \"react\";\r\nimport { Caret } from \"blue-react\";\r\n\r\nclass CaretExample extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n                >\r\n                    <Caret\r\n                        open={this.state.isOpen}\r\n                    />\r\n                    {\" \"}<span>Click to toggle the caret</span>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CaretExample;"},"src\\DocumentView.js":{"description":"Zeigt Inhalt anhand einer URL in einem iFrame an.\r\nWenn der Inhalt nicht in einem iFrame angezeigt werden kann, wird stattdessen ein Download-Button angeboten.","displayName":"DocumentView","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null},{"name":"supportsIframe","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"src":{"type":{"name":"string"},"required":false,"description":"Quelle des Inhalts (URL)","defaultValue":{"value":"\"about:blank\"","computed":false}},"content":{"type":{"name":"any"},"required":false,"description":"Statt Quelle, kann der Inhalt (HTML) auch direkt übergeben werden."},"mimeType":{"type":{"name":"string"},"required":true,"description":"MIME-Typ des Inhalts (z.B. \"application/pdf\")"},"showDocumentLabel":{"type":{"name":"string"},"required":false,"description":"Beschriftung für den Button für das Anzeigen","defaultValue":{"value":"\"Show document\"","computed":false}}},"exampleCode":"import React from \"react\";\r\nimport { DocumentView } from \"blue-react\";\r\n\r\nclass DocumentViewExample extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DocumentView\r\n                    src=\"http://www.pdf995.com/samples/pdf.pdf\"\r\n                    mimeType=\"application/pdf\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DocumentViewExample;"},"src\\FluentBtn.js":{"description":"Shortcut für <code>&lt;button class=\"fluent-btn\"&gt;&lt;div className=\"fluent-btn-ball\"&gt;&lt;/div&gt;&lt;/button&gt;</code>.\r\nErzeugt Button, mit einem Acrylic-Effekt.","displayName":"FluentBtn","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null}],"props":{"children":{"type":{"name":"any"},"required":false,"description":"Inhalt des Buttons. Es werden auch alle anderen Properties unterstützt."},"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"href":{"type":{"name":"string"},"required":false,"description":"Wenn gesetzt, wird ein <code>&lt;a&gt;</code>-Element zurückgegeben. Ansonsten ist es ein <code>&lt;button&gt;</code>."},"light":{"type":{"name":"bool"},"required":false,"description":"Kann bei Schaltflächen mit weißen Flächen gesetzt werden. Der Schein ist dann etwas dunkler.","defaultValue":{"value":"false","computed":false}}},"exampleCode":"import React from \"react\";\r\nimport { FluentBtn, Utilities } from \"blue-react\";\r\n\r\nclass FluentBtnExample extends React.Component {\r\n    componentDidMount() {\r\n        // Beim normalen Einsatz innerhalb von <Page /> ist folgendes nicht nötig. Nur, wenn <FluentBtn /> z.B. asynchron eingebunden wird.\r\n        Utilities.registerFluentBtns();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FluentBtn\r\n                    className=\"btn btn-primary btn-lg\"\r\n                >\r\n                    Hover over this button and see the fancy fluent effect\r\n                </FluentBtn>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FluentBtnExample;"},"src\\Grid.js":{"description":"Das Grundgerüst. Sobald diese Komponente gemountet wurde, ist sie global über <code>window.blueGridRef</code> zugreifbar.<br>\r\nAußerdem kann über <code>blueGridRef.addEventListener(eventName, (prevProps, prevState) => { })</code> ein Event-Listener angefügt werden.\r\n<br><br>\r\nErlaubte Event-Listener:\r\n<table class=\"table\">\r\n<thead><tr><th>Event name</th><th>Description</th><th>Beispiel</th></tr></thead>\r\n<tbody>\r\n<tr>\r\n<th>componentDidUpdate</th>\r\n<td>Komponente wurde aktualisiert.</td>\r\n<td><code>blueGridRef.addEventListener(\"componentDidUpdate\", (prevProps, prevState) => { })</code></td>\r\n</tr>\r\n\r\n<tr>\r\n<th>pageDidShowAgain</th>\r\n<td>Seite wurde erneut angezeigt, mit altem Stand. Im Callback kann Komponente neu initialisiert werden.</td>\r\n<td><code>blueGridRef.addEventListener(\"pageDidShowAgain\", \"home\", (prevProps, prevState) => { })</code></td>\r\n</tr>\r\n\r\n<tr>\r\n<th>pageDidHide</th>\r\n<td>Seite wurde versteckt (andere Seite wurde angezeigt).</td>\r\n<td><code>blueGridRef.addEventListener(\"pageDidHide\", \"home\", (prevProps, prevState) => { })</code></td>\r\n</tr>\r\n</tbody>\r\n</table>","displayName":"Grid","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null},{"name":"toggleSidebar","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"hideSidebar","docblock":null,"modifiers":[],"params":[{"name":"e","type":null}],"returns":null},{"name":"initMatch","docblock":null,"modifiers":[],"params":[],"returns":null},{"name":"addEventListener","docblock":null,"modifiers":[],"params":[{"name":"param1","type":null},{"name":"param2","type":null},{"name":"param3","type":null}],"returns":null}],"props":{"expandSidebar":{"type":{"name":"bool"},"required":false,"description":"Die Sidebar ist bei Vollbild automatisch eingeklappt.","defaultValue":{"value":"false","computed":false}},"hideSidebarMenu":{"type":{"name":"bool"},"required":false,"description":"Deaktiviert die Sidebar.","defaultValue":{"value":"false","computed":false}},"pages":{"type":{"name":"array"},"required":false,"description":"Registriert Seiten. Beispiel: [{name: \"home\", component: <HomePage />}]"},"unrouteable":{"type":{"name":"bool"},"required":false,"description":"Wenn <code>true</code> wird immer die \"home\"-Route geladen.","defaultValue":{"value":"false","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"Erweitert die <code>className</code>-Eigenschaft."},"disableTitleSet":{"type":{"name":"bool"},"required":false,"description":"Normalerweise wird der Dokumenten-Titel automatisch gesetzt. Setze diese Property auf <code>true</code> um das zu\r\ndeaktivieren.","defaultValue":{"value":"false","computed":false}}}},"src\\Header.js":{"description":"","displayName":"Header","methods":[]},"src\\HeaderActions.js":{"description":"Hier werden z.B. Buttons für die aktuelle Seite platziert.","displayName":"HeaderActions","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null}],"props":{"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"breakpoint":{"type":{"name":"string"},"required":false,"description":"Legt fest, ab welcher Breite umgebrochen wird. Mögliche Werte: <code>\"sm\"</code> (768px), <code>\"md\"</code> (992px), <code>\"lg\"</code> (1200px)","defaultValue":{"value":"\"sm\"","computed":false}}}},"src\\HeaderTitle.js":{"description":"Der Titel-Bereich in der Kopf-Leiste.\r\nAnhand dessen wird auch der Dokumenten-Titel gesetzt (was in der Browser Titelzeile gezeigt wird).","displayName":"HeaderTitle","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null},{"name":"setDocumentTitle","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"logo":{"type":{"name":"string"},"required":false,"description":"Kann ein Bild sein. Wird im src-Attribute implementiert."},"appTitle":{"type":{"name":"string"},"required":false,"description":"Der Text, der neben dem Logo steht."},"keepAppTitle":{"type":{"name":"bool"},"required":false,"description":"Deaktiviert, dass der App-Titel bei bestimmer Bildschirmgröße ausgeblendet wird.","defaultValue":{"value":"false","computed":false}}}},"src\\Intro.js":{"description":"Geeignet als Login-Bildschirm.","displayName":"Intro","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null}],"props":{"logo":{"type":{"name":"string"},"required":false,"description":"Kann ein Bild sein. Wird im src-Attribute implementiert."},"logoMaxWidth":{"type":{"name":"string"},"required":false,"description":"Maximale Breite des Logos.","defaultValue":{"value":"\"100px\"","computed":false}},"title":{"type":{"name":"string"},"required":false,"description":"Der Text, der unter dem Logo erscheint"},"children":{"type":{"name":"any"},"required":false,"description":"Inhalt"}}},"src\\MenuItem.js":{"description":"List-Item und Link für die Sidebar.","displayName":"MenuItem","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null},{"name":"onClick","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"checkActive","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"to":{"type":{"name":"string"},"required":false,"description":"Setzt to-Property der NavLink-Komponente aus React Router."},"href":{"type":{"name":"string"},"required":false,"description":"Kann als Alternative zu to benutzt werden.","defaultValue":{"value":"\"javascript:void(0)\"","computed":false}},"onClick":{"type":{"name":"func"},"required":false,"description":"onClick Event"},"icon":{"type":{"name":"any"},"required":false,"description":"Klasse eines Icons oder Element, z.B. von blueicon-colored."},"label":{"type":{"name":"any"},"required":false,"description":"Beschriftung des Links"},"isActive":{"type":{"name":"bool"},"required":false,"description":"Soll Item als \"aktiv\" markiert werden? Ist die to-Property gesetzt, wird Item automatisch als \"aktiv\" markiert, wenn entsprechende Seite aktiv ist.","defaultValue":{"value":"false","computed":false}},"isHome":{"type":{"name":"bool"},"required":false,"description":"Als MenuItem für Startseite deklariert."},"dropdownClassName":{"type":{"name":"string"},"required":false,"description":"Ergänzung der Klasse vom Dropdown-Menü.","defaultValue":{"value":"\"\"","computed":false}},"children":{"type":{"name":"any"},"required":false,"description":"Werden in einem Dropdown-Menü angezeigt."}}},"src\\Page.js":{"description":"","displayName":"Page","methods":[]},"src\\Search.js":{"description":"Eine Suchleiste, die zur Seitenleiste hinzugefügt werden kann.","displayName":"Search","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null},{"name":"toggleSidebar","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"sidebar":{"type":{"name":"bool"},"required":false,"description":"Wird Komponente in der Sidebar genutzt?","defaultValue":{"value":"false","computed":false}},"body":{"type":{"name":"bool"},"required":false,"description":"Wird Komponente im Body genutzt?","defaultValue":{"value":"false","computed":false}},"reset":{"type":{"name":"bool"},"required":false,"description":"Erlaube Zurücksetzen?","defaultValue":{"value":"false","computed":false}},"value":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(event) => { }","computed":false}},"onSubmit":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"(event) => { }","computed":false}},"placeholder":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"autoFocus":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}},"exampleCode":"import React from \"react\";\r\nimport { Search } from \"blue-react\";\r\n\r\nclass SearchExample extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            search: \"\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search\r\n                    body\r\n                    reset\r\n                    value={this.state.search}\r\n                    onChange={({ target }) => this.setState({ search: target.value })}\r\n                    onSubmit={() => alert(\"Do form submit now!\")}\r\n                    placeholder=\"Begin typing...\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchExample;"},"src\\SidebarMenu.js":{"description":"Die Seitenleiste für das Grid.","displayName":"SidebarMenu","methods":[{"name":"updateDimensions","docblock":null,"modifiers":[],"params":[],"returns":null}],"props":{"sidebarClass":{"type":{"name":"string"},"required":false,"description":"Erweiterung der className-Property der Seitenleiste."},"sidebarStyle":{"type":{"name":"object"},"required":false,"description":"Setzt die style-Property der Seitenleiste."},"menuClass":{"type":{"name":"string"},"required":false,"description":"Erweiterung der className-Property des Menüs."},"menuStyle":{"type":{"name":"object"},"required":false,"description":"Setzt die style-Property des Menüs."},"topContent":{"type":{"name":"any"},"required":false,"description":"Inhalte oberhalb des Sidebar-Menüs"},"bottomContent":{"type":{"name":"any"},"required":false,"description":"Inhalte für den Footer der Sidebar"}}},"src\\Switch.js":{"description":"Switch.","displayName":"Switch","methods":[{"name":"defaultProps","docblock":null,"modifiers":["static"],"params":[],"returns":null}],"props":{"className":{"type":{"name":"string"},"required":false,"description":"","defaultValue":{"value":"\"\"","computed":false}},"checked":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}},"onChange":{"type":{"name":"func"},"required":false,"description":"","defaultValue":{"value":"() => { }","computed":false}},"sliderLabel":{"type":{"name":"string"},"required":false,"description":"Sets label inside of the switch. If you set this, you should also set the className \"lg\" to make the switch larger.","defaultValue":{"value":"null","computed":false}},"elementType":{"type":{"name":"string"},"required":false,"description":"You can change the type of the wrapper element. If you do, the <code>onChange</code> event might not be triggered.","defaultValue":{"value":"\"label\"","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"","defaultValue":{"value":"false","computed":false}}},"exampleCode":"import React from \"react\";\r\nimport { Switch } from \"blue-react\";\r\n\r\nclass SwitchExample extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isChecked: true\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch\r\n                    className=\"lg\"\r\n                    checked={this.state.isChecked}\r\n                    onChange={() => this.setState({ isChecked: !this.state.isChecked })}\r\n                    sliderLabel={this.state.isChecked ? \"Yay🎉\" : \"😒\"}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwitchExample;"},"src\\SwitchMenuItem.js":{"description":"Switch for <strong>Actions</strong>","displayName":"SwitchMenuItem","methods":[],"composes":["./Switch.js"]}}